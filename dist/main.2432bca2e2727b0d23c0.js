!function(t){var e={};function n(i){if(e[i])return e[i].exports;var s=e[i]={i:i,l:!1,exports:{}};return t[i].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(i,s,function(e){return t[e]}.bind(null,s));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="/dist/",n(n.s=10)}([function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global, setImmediate) {/*!\n * Vue.js v2.6.10\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n!function(t,e){ true?module.exports=e():undefined}(this,function(){"use strict";var t=Object.freeze({});function e(t){return null==t}function n(t){return null!=t}function r(t){return!0===t}function o(t){return"string"==typeof t||"number"==typeof t||"symbol"==typeof t||"boolean"==typeof t}function i(t){return null!==t&&"object"==typeof t}var a=Object.prototype.toString;function s(t){return"[object Object]"===a.call(t)}function c(t){var e=parseFloat(String(t));return e>=0&&Math.floor(e)===e&&isFinite(t)}function u(t){return n(t)&&"function"==typeof t.then&&"function"==typeof t.catch}function l(t){return null==t?"":Array.isArray(t)||s(t)&&t.toString===a?JSON.stringify(t,null,2):String(t)}function f(t){var e=parseFloat(t);return isNaN(e)?t:e}function d(t,e){for(var n=Object.create(null),r=t.split(","),o=0;o<r.length;o++)n[r[o]]=!0;return e?function(t){return n[t.toLowerCase()]}:function(t){return n[t]}}var p=d("key,ref,slot,slot-scope,is");function v(t,e){if(t.length){var n=t.indexOf(e);if(n>-1)return t.splice(n,1)}}var h=Object.prototype.hasOwnProperty;function m(t,e){return h.call(t,e)}function y(t){var e=Object.create(null);return function(n){return e[n]||(e[n]=t(n))}}var g=/-(\\w)/g,_=y(function(t){return t.replace(g,function(t,e){return e?e.toUpperCase():""})}),b=y(function(t){return t.charAt(0).toUpperCase()+t.slice(1)}),C=/\\B([A-Z])/g,$=y(function(t){return t.replace(C,"-$1").toLowerCase()});var w=Function.prototype.bind?function(t,e){return t.bind(e)}:function(t,e){function n(n){var r=arguments.length;return r?r>1?t.apply(e,arguments):t.call(e,n):t.call(e)}return n._length=t.length,n};function A(t,e){e=e||0;for(var n=t.length-e,r=new Array(n);n--;)r[n]=t[n+e];return r}function x(t,e){for(var n in e)t[n]=e[n];return t}function O(t){for(var e={},n=0;n<t.length;n++)t[n]&&x(e,t[n]);return e}function k(t,e,n){}var S=function(t,e,n){return!1},E=function(t){return t};function j(t,e){if(t===e)return!0;var n=i(t),r=i(e);if(!n||!r)return!n&&!r&&String(t)===String(e);try{var o=Array.isArray(t),a=Array.isArray(e);if(o&&a)return t.length===e.length&&t.every(function(t,n){return j(t,e[n])});if(t instanceof Date&&e instanceof Date)return t.getTime()===e.getTime();if(o||a)return!1;var s=Object.keys(t),c=Object.keys(e);return s.length===c.length&&s.every(function(n){return j(t[n],e[n])})}catch(t){return!1}}function T(t,e){for(var n=0;n<t.length;n++)if(j(t[n],e))return n;return-1}function I(t){var e=!1;return function(){e||(e=!0,t.apply(this,arguments))}}var D="data-server-rendered",N=["component","directive","filter"],P=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],L={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:S,isReservedAttr:S,isUnknownElement:S,getTagNamespace:k,parsePlatformTagName:E,mustUseProp:S,async:!0,_lifecycleHooks:P};function M(t,e,n,r){Object.defineProperty(t,e,{value:n,enumerable:!!r,writable:!0,configurable:!0})}var F=new RegExp("[^"+/a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/.source+".$_\\\\d]");var R,U="__proto__"in{},H="undefined"!=typeof window,V="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,B=V&&WXEnvironment.platform.toLowerCase(),z=H&&window.navigator.userAgent.toLowerCase(),W=z&&/msie|trident/.test(z),q=z&&z.indexOf("msie 9.0")>0,K=z&&z.indexOf("edge/")>0,X=(z&&z.indexOf("android"),z&&/iphone|ipad|ipod|ios/.test(z)||"ios"===B),G=(z&&/chrome\\/\\d+/.test(z),z&&/phantomjs/.test(z),z&&z.match(/firefox\\/(\\d+)/)),Z={}.watch,J=!1;if(H)try{var Q={};Object.defineProperty(Q,"passive",{get:function(){J=!0}}),window.addEventListener("test-passive",null,Q)}catch(t){}var Y=function(){return void 0===R&&(R=!H&&!V&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),R},tt=H&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function et(t){return"function"==typeof t&&/native code/.test(t.toString())}var nt,rt="undefined"!=typeof Symbol&&et(Symbol)&&"undefined"!=typeof Reflect&&et(Reflect.ownKeys);nt="undefined"!=typeof Set&&et(Set)?Set:function(){function t(){this.set=Object.create(null)}return t.prototype.has=function(t){return!0===this.set[t]},t.prototype.add=function(t){this.set[t]=!0},t.prototype.clear=function(){this.set=Object.create(null)},t}();var ot=k,it=0,at=function(){this.id=it++,this.subs=[]};at.prototype.addSub=function(t){this.subs.push(t)},at.prototype.removeSub=function(t){v(this.subs,t)},at.prototype.depend=function(){at.target&&at.target.addDep(this)},at.prototype.notify=function(){for(var t=this.subs.slice(),e=0,n=t.length;e<n;e++)t[e].update()},at.target=null;var st=[];function ct(t){st.push(t),at.target=t}function ut(){st.pop(),at.target=st[st.length-1]}var lt=function(t,e,n,r,o,i,a,s){this.tag=t,this.data=e,this.children=n,this.text=r,this.elm=o,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},ft={child:{configurable:!0}};ft.child.get=function(){return this.componentInstance},Object.defineProperties(lt.prototype,ft);var dt=function(t){void 0===t&&(t="");var e=new lt;return e.text=t,e.isComment=!0,e};function pt(t){return new lt(void 0,void 0,void 0,String(t))}function vt(t){var e=new lt(t.tag,t.data,t.children&&t.children.slice(),t.text,t.elm,t.context,t.componentOptions,t.asyncFactory);return e.ns=t.ns,e.isStatic=t.isStatic,e.key=t.key,e.isComment=t.isComment,e.fnContext=t.fnContext,e.fnOptions=t.fnOptions,e.fnScopeId=t.fnScopeId,e.asyncMeta=t.asyncMeta,e.isCloned=!0,e}var ht=Array.prototype,mt=Object.create(ht);["push","pop","shift","unshift","splice","sort","reverse"].forEach(function(t){var e=ht[t];M(mt,t,function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];var o,i=e.apply(this,n),a=this.__ob__;switch(t){case"push":case"unshift":o=n;break;case"splice":o=n.slice(2)}return o&&a.observeArray(o),a.dep.notify(),i})});var yt=Object.getOwnPropertyNames(mt),gt=!0;function _t(t){gt=t}var bt=function(t){var e;this.value=t,this.dep=new at,this.vmCount=0,M(t,"__ob__",this),Array.isArray(t)?(U?(e=mt,t.__proto__=e):function(t,e,n){for(var r=0,o=n.length;r<o;r++){var i=n[r];M(t,i,e[i])}}(t,mt,yt),this.observeArray(t)):this.walk(t)};function Ct(t,e){var n;if(i(t)&&!(t instanceof lt))return m(t,"__ob__")&&t.__ob__ instanceof bt?n=t.__ob__:gt&&!Y()&&(Array.isArray(t)||s(t))&&Object.isExtensible(t)&&!t._isVue&&(n=new bt(t)),e&&n&&n.vmCount++,n}function $t(t,e,n,r,o){var i=new at,a=Object.getOwnPropertyDescriptor(t,e);if(!a||!1!==a.configurable){var s=a&&a.get,c=a&&a.set;s&&!c||2!==arguments.length||(n=t[e]);var u=!o&&Ct(n);Object.defineProperty(t,e,{enumerable:!0,configurable:!0,get:function(){var e=s?s.call(t):n;return at.target&&(i.depend(),u&&(u.dep.depend(),Array.isArray(e)&&function t(e){for(var n=void 0,r=0,o=e.length;r<o;r++)(n=e[r])&&n.__ob__&&n.__ob__.dep.depend(),Array.isArray(n)&&t(n)}(e))),e},set:function(e){var r=s?s.call(t):n;e===r||e!=e&&r!=r||s&&!c||(c?c.call(t,e):n=e,u=!o&&Ct(e),i.notify())}})}}function wt(t,e,n){if(Array.isArray(t)&&c(e))return t.length=Math.max(t.length,e),t.splice(e,1,n),n;if(e in t&&!(e in Object.prototype))return t[e]=n,n;var r=t.__ob__;return t._isVue||r&&r.vmCount?n:r?($t(r.value,e,n),r.dep.notify(),n):(t[e]=n,n)}function At(t,e){if(Array.isArray(t)&&c(e))t.splice(e,1);else{var n=t.__ob__;t._isVue||n&&n.vmCount||m(t,e)&&(delete t[e],n&&n.dep.notify())}}bt.prototype.walk=function(t){for(var e=Object.keys(t),n=0;n<e.length;n++)$t(t,e[n])},bt.prototype.observeArray=function(t){for(var e=0,n=t.length;e<n;e++)Ct(t[e])};var xt=L.optionMergeStrategies;function Ot(t,e){if(!e)return t;for(var n,r,o,i=rt?Reflect.ownKeys(e):Object.keys(e),a=0;a<i.length;a++)"__ob__"!==(n=i[a])&&(r=t[n],o=e[n],m(t,n)?r!==o&&s(r)&&s(o)&&Ot(r,o):wt(t,n,o));return t}function kt(t,e,n){return n?function(){var r="function"==typeof e?e.call(n,n):e,o="function"==typeof t?t.call(n,n):t;return r?Ot(r,o):o}:e?t?function(){return Ot("function"==typeof e?e.call(this,this):e,"function"==typeof t?t.call(this,this):t)}:e:t}function St(t,e){var n=e?t?t.concat(e):Array.isArray(e)?e:[e]:t;return n?function(t){for(var e=[],n=0;n<t.length;n++)-1===e.indexOf(t[n])&&e.push(t[n]);return e}(n):n}function Et(t,e,n,r){var o=Object.create(t||null);return e?x(o,e):o}xt.data=function(t,e,n){return n?kt(t,e,n):e&&"function"!=typeof e?t:kt(t,e)},P.forEach(function(t){xt[t]=St}),N.forEach(function(t){xt[t+"s"]=Et}),xt.watch=function(t,e,n,r){if(t===Z&&(t=void 0),e===Z&&(e=void 0),!e)return Object.create(t||null);if(!t)return e;var o={};for(var i in x(o,t),e){var a=o[i],s=e[i];a&&!Array.isArray(a)&&(a=[a]),o[i]=a?a.concat(s):Array.isArray(s)?s:[s]}return o},xt.props=xt.methods=xt.inject=xt.computed=function(t,e,n,r){if(!t)return e;var o=Object.create(null);return x(o,t),e&&x(o,e),o},xt.provide=kt;var jt=function(t,e){return void 0===e?t:e};function Tt(t,e,n){if("function"==typeof e&&(e=e.options),function(t,e){var n=t.props;if(n){var r,o,i={};if(Array.isArray(n))for(r=n.length;r--;)"string"==typeof(o=n[r])&&(i[_(o)]={type:null});else if(s(n))for(var a in n)o=n[a],i[_(a)]=s(o)?o:{type:o};t.props=i}}(e),function(t,e){var n=t.inject;if(n){var r=t.inject={};if(Array.isArray(n))for(var o=0;o<n.length;o++)r[n[o]]={from:n[o]};else if(s(n))for(var i in n){var a=n[i];r[i]=s(a)?x({from:i},a):{from:a}}}}(e),function(t){var e=t.directives;if(e)for(var n in e){var r=e[n];"function"==typeof r&&(e[n]={bind:r,update:r})}}(e),!e._base&&(e.extends&&(t=Tt(t,e.extends,n)),e.mixins))for(var r=0,o=e.mixins.length;r<o;r++)t=Tt(t,e.mixins[r],n);var i,a={};for(i in t)c(i);for(i in e)m(t,i)||c(i);function c(r){var o=xt[r]||jt;a[r]=o(t[r],e[r],n,r)}return a}function It(t,e,n,r){if("string"==typeof n){var o=t[e];if(m(o,n))return o[n];var i=_(n);if(m(o,i))return o[i];var a=b(i);return m(o,a)?o[a]:o[n]||o[i]||o[a]}}function Dt(t,e,n,r){var o=e[t],i=!m(n,t),a=n[t],s=Lt(Boolean,o.type);if(s>-1)if(i&&!m(o,"default"))a=!1;else if(""===a||a===$(t)){var c=Lt(String,o.type);(c<0||s<c)&&(a=!0)}if(void 0===a){a=function(t,e,n){if(!m(e,"default"))return;var r=e.default;if(t&&t.$options.propsData&&void 0===t.$options.propsData[n]&&void 0!==t._props[n])return t._props[n];return"function"==typeof r&&"Function"!==Nt(e.type)?r.call(t):r}(r,o,t);var u=gt;_t(!0),Ct(a),_t(u)}return a}function Nt(t){var e=t&&t.toString().match(/^\\s*function (\\w+)/);return e?e[1]:""}function Pt(t,e){return Nt(t)===Nt(e)}function Lt(t,e){if(!Array.isArray(e))return Pt(e,t)?0:-1;for(var n=0,r=e.length;n<r;n++)if(Pt(e[n],t))return n;return-1}function Mt(t,e,n){ct();try{if(e)for(var r=e;r=r.$parent;){var o=r.$options.errorCaptured;if(o)for(var i=0;i<o.length;i++)try{if(!1===o[i].call(r,t,e,n))return}catch(t){Rt(t,r,"errorCaptured hook")}}Rt(t,e,n)}finally{ut()}}function Ft(t,e,n,r,o){var i;try{(i=n?t.apply(e,n):t.call(e))&&!i._isVue&&u(i)&&!i._handled&&(i.catch(function(t){return Mt(t,r,o+" (Promise/async)")}),i._handled=!0)}catch(t){Mt(t,r,o)}return i}function Rt(t,e,n){if(L.errorHandler)try{return L.errorHandler.call(null,t,e,n)}catch(e){e!==t&&Ut(e,null,"config.errorHandler")}Ut(t,e,n)}function Ut(t,e,n){if(!H&&!V||"undefined"==typeof console)throw t;console.error(t)}var Ht,Vt=!1,Bt=[],zt=!1;function Wt(){zt=!1;var t=Bt.slice(0);Bt.length=0;for(var e=0;e<t.length;e++)t[e]()}if("undefined"!=typeof Promise&&et(Promise)){var qt=Promise.resolve();Ht=function(){qt.then(Wt),X&&setTimeout(k)},Vt=!0}else if(W||"undefined"==typeof MutationObserver||!et(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ht="undefined"!=typeof setImmediate&&et(setImmediate)?function(){setImmediate(Wt)}:function(){setTimeout(Wt,0)};else{var Kt=1,Xt=new MutationObserver(Wt),Gt=document.createTextNode(String(Kt));Xt.observe(Gt,{characterData:!0}),Ht=function(){Kt=(Kt+1)%2,Gt.data=String(Kt)},Vt=!0}function Zt(t,e){var n;if(Bt.push(function(){if(t)try{t.call(e)}catch(t){Mt(t,e,"nextTick")}else n&&n(e)}),zt||(zt=!0,Ht()),!t&&"undefined"!=typeof Promise)return new Promise(function(t){n=t})}var Jt=new nt;function Qt(t){!function t(e,n){var r,o;var a=Array.isArray(e);if(!a&&!i(e)||Object.isFrozen(e)||e instanceof lt)return;if(e.__ob__){var s=e.__ob__.dep.id;if(n.has(s))return;n.add(s)}if(a)for(r=e.length;r--;)t(e[r],n);else for(o=Object.keys(e),r=o.length;r--;)t(e[o[r]],n)}(t,Jt),Jt.clear()}var Yt=y(function(t){var e="&"===t.charAt(0),n="~"===(t=e?t.slice(1):t).charAt(0),r="!"===(t=n?t.slice(1):t).charAt(0);return{name:t=r?t.slice(1):t,once:n,capture:r,passive:e}});function te(t,e){function n(){var t=arguments,r=n.fns;if(!Array.isArray(r))return Ft(r,null,arguments,e,"v-on handler");for(var o=r.slice(),i=0;i<o.length;i++)Ft(o[i],null,t,e,"v-on handler")}return n.fns=t,n}function ee(t,n,o,i,a,s){var c,u,l,f;for(c in t)u=t[c],l=n[c],f=Yt(c),e(u)||(e(l)?(e(u.fns)&&(u=t[c]=te(u,s)),r(f.once)&&(u=t[c]=a(f.name,u,f.capture)),o(f.name,u,f.capture,f.passive,f.params)):u!==l&&(l.fns=u,t[c]=l));for(c in n)e(t[c])&&i((f=Yt(c)).name,n[c],f.capture)}function ne(t,o,i){var a;t instanceof lt&&(t=t.data.hook||(t.data.hook={}));var s=t[o];function c(){i.apply(this,arguments),v(a.fns,c)}e(s)?a=te([c]):n(s.fns)&&r(s.merged)?(a=s).fns.push(c):a=te([s,c]),a.merged=!0,t[o]=a}function re(t,e,r,o,i){if(n(e)){if(m(e,r))return t[r]=e[r],i||delete e[r],!0;if(m(e,o))return t[r]=e[o],i||delete e[o],!0}return!1}function oe(t){return o(t)?[pt(t)]:Array.isArray(t)?function t(i,a){var s=[];var c,u,l,f;for(c=0;c<i.length;c++)e(u=i[c])||"boolean"==typeof u||(l=s.length-1,f=s[l],Array.isArray(u)?u.length>0&&(ie((u=t(u,(a||"")+"_"+c))[0])&&ie(f)&&(s[l]=pt(f.text+u[0].text),u.shift()),s.push.apply(s,u)):o(u)?ie(f)?s[l]=pt(f.text+u):""!==u&&s.push(pt(u)):ie(u)&&ie(f)?s[l]=pt(f.text+u.text):(r(i._isVList)&&n(u.tag)&&e(u.key)&&n(a)&&(u.key="__vlist"+a+"_"+c+"__"),s.push(u)));return s}(t):void 0}function ie(t){return n(t)&&n(t.text)&&!1===t.isComment}function ae(t,e){if(t){for(var n=Object.create(null),r=rt?Reflect.ownKeys(t):Object.keys(t),o=0;o<r.length;o++){var i=r[o];if("__ob__"!==i){for(var a=t[i].from,s=e;s;){if(s._provided&&m(s._provided,a)){n[i]=s._provided[a];break}s=s.$parent}if(!s&&"default"in t[i]){var c=t[i].default;n[i]="function"==typeof c?c.call(e):c}}}return n}}function se(t,e){if(!t||!t.length)return{};for(var n={},r=0,o=t.length;r<o;r++){var i=t[r],a=i.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,i.context!==e&&i.fnContext!==e||!a||null==a.slot)(n.default||(n.default=[])).push(i);else{var s=a.slot,c=n[s]||(n[s]=[]);"template"===i.tag?c.push.apply(c,i.children||[]):c.push(i)}}for(var u in n)n[u].every(ce)&&delete n[u];return n}function ce(t){return t.isComment&&!t.asyncFactory||" "===t.text}function ue(e,n,r){var o,i=Object.keys(n).length>0,a=e?!!e.$stable:!i,s=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(a&&r&&r!==t&&s===r.$key&&!i&&!r.$hasNormal)return r;for(var c in o={},e)e[c]&&"$"!==c[0]&&(o[c]=le(n,c,e[c]))}else o={};for(var u in n)u in o||(o[u]=fe(n,u));return e&&Object.isExtensible(e)&&(e._normalized=o),M(o,"$stable",a),M(o,"$key",s),M(o,"$hasNormal",i),o}function le(t,e,n){var r=function(){var t=arguments.length?n.apply(null,arguments):n({});return(t=t&&"object"==typeof t&&!Array.isArray(t)?[t]:oe(t))&&(0===t.length||1===t.length&&t[0].isComment)?void 0:t};return n.proxy&&Object.defineProperty(t,e,{get:r,enumerable:!0,configurable:!0}),r}function fe(t,e){return function(){return t[e]}}function de(t,e){var r,o,a,s,c;if(Array.isArray(t)||"string"==typeof t)for(r=new Array(t.length),o=0,a=t.length;o<a;o++)r[o]=e(t[o],o);else if("number"==typeof t)for(r=new Array(t),o=0;o<t;o++)r[o]=e(o+1,o);else if(i(t))if(rt&&t[Symbol.iterator]){r=[];for(var u=t[Symbol.iterator](),l=u.next();!l.done;)r.push(e(l.value,r.length)),l=u.next()}else for(s=Object.keys(t),r=new Array(s.length),o=0,a=s.length;o<a;o++)c=s[o],r[o]=e(t[c],c,o);return n(r)||(r=[]),r._isVList=!0,r}function pe(t,e,n,r){var o,i=this.$scopedSlots[t];i?(n=n||{},r&&(n=x(x({},r),n)),o=i(n)||e):o=this.$slots[t]||e;var a=n&&n.slot;return a?this.$createElement("template",{slot:a},o):o}function ve(t){return It(this.$options,"filters",t)||E}function he(t,e){return Array.isArray(t)?-1===t.indexOf(e):t!==e}function me(t,e,n,r,o){var i=L.keyCodes[e]||n;return o&&r&&!L.keyCodes[e]?he(o,r):i?he(i,t):r?$(r)!==e:void 0}function ye(t,e,n,r,o){if(n)if(i(n)){var a;Array.isArray(n)&&(n=O(n));var s=function(i){if("class"===i||"style"===i||p(i))a=t;else{var s=t.attrs&&t.attrs.type;a=r||L.mustUseProp(e,s,i)?t.domProps||(t.domProps={}):t.attrs||(t.attrs={})}var c=_(i),u=$(i);c in a||u in a||(a[i]=n[i],o&&((t.on||(t.on={}))["update:"+i]=function(t){n[i]=t}))};for(var c in n)s(c)}else;return t}function ge(t,e){var n=this._staticTrees||(this._staticTrees=[]),r=n[t];return r&&!e?r:(be(r=n[t]=this.$options.staticRenderFns[t].call(this._renderProxy,null,this),"__static__"+t,!1),r)}function _e(t,e,n){return be(t,"__once__"+e+(n?"_"+n:""),!0),t}function be(t,e,n){if(Array.isArray(t))for(var r=0;r<t.length;r++)t[r]&&"string"!=typeof t[r]&&Ce(t[r],e+"_"+r,n);else Ce(t,e,n)}function Ce(t,e,n){t.isStatic=!0,t.key=e,t.isOnce=n}function $e(t,e){if(e)if(s(e)){var n=t.on=t.on?x({},t.on):{};for(var r in e){var o=n[r],i=e[r];n[r]=o?[].concat(o,i):i}}else;return t}function we(t,e,n,r){e=e||{$stable:!n};for(var o=0;o<t.length;o++){var i=t[o];Array.isArray(i)?we(i,e,n):i&&(i.proxy&&(i.fn.proxy=!0),e[i.key]=i.fn)}return r&&(e.$key=r),e}function Ae(t,e){for(var n=0;n<e.length;n+=2){var r=e[n];"string"==typeof r&&r&&(t[e[n]]=e[n+1])}return t}function xe(t,e){return"string"==typeof t?e+t:t}function Oe(t){t._o=_e,t._n=f,t._s=l,t._l=de,t._t=pe,t._q=j,t._i=T,t._m=ge,t._f=ve,t._k=me,t._b=ye,t._v=pt,t._e=dt,t._u=we,t._g=$e,t._d=Ae,t._p=xe}function ke(e,n,o,i,a){var s,c=this,u=a.options;m(i,"_uid")?(s=Object.create(i))._original=i:(s=i,i=i._original);var l=r(u._compiled),f=!l;this.data=e,this.props=n,this.children=o,this.parent=i,this.listeners=e.on||t,this.injections=ae(u.inject,i),this.slots=function(){return c.$slots||ue(e.scopedSlots,c.$slots=se(o,i)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return ue(e.scopedSlots,this.slots())}}),l&&(this.$options=u,this.$slots=this.slots(),this.$scopedSlots=ue(e.scopedSlots,this.$slots)),u._scopeId?this._c=function(t,e,n,r){var o=Le(s,t,e,n,r,f);return o&&!Array.isArray(o)&&(o.fnScopeId=u._scopeId,o.fnContext=i),o}:this._c=function(t,e,n,r){return Le(s,t,e,n,r,f)}}function Se(t,e,n,r,o){var i=vt(t);return i.fnContext=n,i.fnOptions=r,e.slot&&((i.data||(i.data={})).slot=e.slot),i}function Ee(t,e){for(var n in e)t[_(n)]=e[n]}Oe(ke.prototype);var je={init:function(t,e){if(t.componentInstance&&!t.componentInstance._isDestroyed&&t.data.keepAlive){var r=t;je.prepatch(r,r)}else{(t.componentInstance=function(t,e){var r={_isComponent:!0,_parentVnode:t,parent:e},o=t.data.inlineTemplate;n(o)&&(r.render=o.render,r.staticRenderFns=o.staticRenderFns);return new t.componentOptions.Ctor(r)}(t,qe)).$mount(e?t.elm:void 0,e)}},prepatch:function(e,n){var r=n.componentOptions;!function(e,n,r,o,i){var a=o.data.scopedSlots,s=e.$scopedSlots,c=!!(a&&!a.$stable||s!==t&&!s.$stable||a&&e.$scopedSlots.$key!==a.$key),u=!!(i||e.$options._renderChildren||c);e.$options._parentVnode=o,e.$vnode=o,e._vnode&&(e._vnode.parent=o);if(e.$options._renderChildren=i,e.$attrs=o.data.attrs||t,e.$listeners=r||t,n&&e.$options.props){_t(!1);for(var l=e._props,f=e.$options._propKeys||[],d=0;d<f.length;d++){var p=f[d],v=e.$options.props;l[p]=Dt(p,v,n,e)}_t(!0),e.$options.propsData=n}r=r||t;var h=e.$options._parentListeners;e.$options._parentListeners=r,We(e,r,h),u&&(e.$slots=se(i,o.context),e.$forceUpdate())}(n.componentInstance=e.componentInstance,r.propsData,r.listeners,n,r.children)},insert:function(t){var e,n=t.context,r=t.componentInstance;r._isMounted||(r._isMounted=!0,Ze(r,"mounted")),t.data.keepAlive&&(n._isMounted?((e=r)._inactive=!1,Qe.push(e)):Ge(r,!0))},destroy:function(t){var e=t.componentInstance;e._isDestroyed||(t.data.keepAlive?function t(e,n){if(n&&(e._directInactive=!0,Xe(e)))return;if(!e._inactive){e._inactive=!0;for(var r=0;r<e.$children.length;r++)t(e.$children[r]);Ze(e,"deactivated")}}(e,!0):e.$destroy())}},Te=Object.keys(je);function Ie(o,a,s,c,l){if(!e(o)){var f=s.$options._base;if(i(o)&&(o=f.extend(o)),"function"==typeof o){var d;if(e(o.cid)&&void 0===(o=function(t,o){if(r(t.error)&&n(t.errorComp))return t.errorComp;if(n(t.resolved))return t.resolved;var a=Fe;a&&n(t.owners)&&-1===t.owners.indexOf(a)&&t.owners.push(a);if(r(t.loading)&&n(t.loadingComp))return t.loadingComp;if(a&&!n(t.owners)){var s=t.owners=[a],c=!0,l=null,f=null;a.$on("hook:destroyed",function(){return v(s,a)});var d=function(t){for(var e=0,n=s.length;e<n;e++)s[e].$forceUpdate();t&&(s.length=0,null!==l&&(clearTimeout(l),l=null),null!==f&&(clearTimeout(f),f=null))},p=I(function(e){t.resolved=Re(e,o),c?s.length=0:d(!0)}),h=I(function(e){n(t.errorComp)&&(t.error=!0,d(!0))}),m=t(p,h);return i(m)&&(u(m)?e(t.resolved)&&m.then(p,h):u(m.component)&&(m.component.then(p,h),n(m.error)&&(t.errorComp=Re(m.error,o)),n(m.loading)&&(t.loadingComp=Re(m.loading,o),0===m.delay?t.loading=!0:l=setTimeout(function(){l=null,e(t.resolved)&&e(t.error)&&(t.loading=!0,d(!1))},m.delay||200)),n(m.timeout)&&(f=setTimeout(function(){f=null,e(t.resolved)&&h(null)},m.timeout)))),c=!1,t.loading?t.loadingComp:t.resolved}}(d=o,f)))return function(t,e,n,r,o){var i=dt();return i.asyncFactory=t,i.asyncMeta={data:e,context:n,children:r,tag:o},i}(d,a,s,c,l);a=a||{},_n(o),n(a.model)&&function(t,e){var r=t.model&&t.model.prop||"value",o=t.model&&t.model.event||"input";(e.attrs||(e.attrs={}))[r]=e.model.value;var i=e.on||(e.on={}),a=i[o],s=e.model.callback;n(a)?(Array.isArray(a)?-1===a.indexOf(s):a!==s)&&(i[o]=[s].concat(a)):i[o]=s}(o.options,a);var p=function(t,r,o){var i=r.options.props;if(!e(i)){var a={},s=t.attrs,c=t.props;if(n(s)||n(c))for(var u in i){var l=$(u);re(a,c,u,l,!0)||re(a,s,u,l,!1)}return a}}(a,o);if(r(o.options.functional))return function(e,r,o,i,a){var s=e.options,c={},u=s.props;if(n(u))for(var l in u)c[l]=Dt(l,u,r||t);else n(o.attrs)&&Ee(c,o.attrs),n(o.props)&&Ee(c,o.props);var f=new ke(o,c,a,i,e),d=s.render.call(null,f._c,f);if(d instanceof lt)return Se(d,o,f.parent,s);if(Array.isArray(d)){for(var p=oe(d)||[],v=new Array(p.length),h=0;h<p.length;h++)v[h]=Se(p[h],o,f.parent,s);return v}}(o,p,a,s,c);var h=a.on;if(a.on=a.nativeOn,r(o.options.abstract)){var m=a.slot;a={},m&&(a.slot=m)}!function(t){for(var e=t.hook||(t.hook={}),n=0;n<Te.length;n++){var r=Te[n],o=e[r],i=je[r];o===i||o&&o._merged||(e[r]=o?De(i,o):i)}}(a);var y=o.options.name||l;return new lt("vue-component-"+o.cid+(y?"-"+y:""),a,void 0,void 0,void 0,s,{Ctor:o,propsData:p,listeners:h,tag:l,children:c},d)}}}function De(t,e){var n=function(n,r){t(n,r),e(n,r)};return n._merged=!0,n}var Ne=1,Pe=2;function Le(t,a,s,c,u,l){return(Array.isArray(s)||o(s))&&(u=c,c=s,s=void 0),r(l)&&(u=Pe),function(t,o,a,s,c){if(n(a)&&n(a.__ob__))return dt();n(a)&&n(a.is)&&(o=a.is);if(!o)return dt();Array.isArray(s)&&"function"==typeof s[0]&&((a=a||{}).scopedSlots={default:s[0]},s.length=0);c===Pe?s=oe(s):c===Ne&&(s=function(t){for(var e=0;e<t.length;e++)if(Array.isArray(t[e]))return Array.prototype.concat.apply([],t);return t}(s));var u,l;if("string"==typeof o){var f;l=t.$vnode&&t.$vnode.ns||L.getTagNamespace(o),u=L.isReservedTag(o)?new lt(L.parsePlatformTagName(o),a,s,void 0,void 0,t):a&&a.pre||!n(f=It(t.$options,"components",o))?new lt(o,a,s,void 0,void 0,t):Ie(f,a,t,s,o)}else u=Ie(o,a,t,s);return Array.isArray(u)?u:n(u)?(n(l)&&function t(o,i,a){o.ns=i;"foreignObject"===o.tag&&(i=void 0,a=!0);if(n(o.children))for(var s=0,c=o.children.length;s<c;s++){var u=o.children[s];n(u.tag)&&(e(u.ns)||r(a)&&"svg"!==u.tag)&&t(u,i,a)}}(u,l),n(a)&&function(t){i(t.style)&&Qt(t.style);i(t.class)&&Qt(t.class)}(a),u):dt()}(t,a,s,c,u)}var Me,Fe=null;function Re(t,e){return(t.__esModule||rt&&"Module"===t[Symbol.toStringTag])&&(t=t.default),i(t)?e.extend(t):t}function Ue(t){return t.isComment&&t.asyncFactory}function He(t){if(Array.isArray(t))for(var e=0;e<t.length;e++){var r=t[e];if(n(r)&&(n(r.componentOptions)||Ue(r)))return r}}function Ve(t,e){Me.$on(t,e)}function Be(t,e){Me.$off(t,e)}function ze(t,e){var n=Me;return function r(){null!==e.apply(null,arguments)&&n.$off(t,r)}}function We(t,e,n){Me=t,ee(e,n||{},Ve,Be,ze,t),Me=void 0}var qe=null;function Ke(t){var e=qe;return qe=t,function(){qe=e}}function Xe(t){for(;t&&(t=t.$parent);)if(t._inactive)return!0;return!1}function Ge(t,e){if(e){if(t._directInactive=!1,Xe(t))return}else if(t._directInactive)return;if(t._inactive||null===t._inactive){t._inactive=!1;for(var n=0;n<t.$children.length;n++)Ge(t.$children[n]);Ze(t,"activated")}}function Ze(t,e){ct();var n=t.$options[e],r=e+" hook";if(n)for(var o=0,i=n.length;o<i;o++)Ft(n[o],t,null,t,r);t._hasHookEvent&&t.$emit("hook:"+e),ut()}var Je=[],Qe=[],Ye={},tn=!1,en=!1,nn=0;var rn=0,on=Date.now;if(H&&!W){var an=window.performance;an&&"function"==typeof an.now&&on()>document.createEvent("Event").timeStamp&&(on=function(){return an.now()})}function sn(){var t,e;for(rn=on(),en=!0,Je.sort(function(t,e){return t.id-e.id}),nn=0;nn<Je.length;nn++)(t=Je[nn]).before&&t.before(),e=t.id,Ye[e]=null,t.run();var n=Qe.slice(),r=Je.slice();nn=Je.length=Qe.length=0,Ye={},tn=en=!1,function(t){for(var e=0;e<t.length;e++)t[e]._inactive=!0,Ge(t[e],!0)}(n),function(t){var e=t.length;for(;e--;){var n=t[e],r=n.vm;r._watcher===n&&r._isMounted&&!r._isDestroyed&&Ze(r,"updated")}}(r),tt&&L.devtools&&tt.emit("flush")}var cn=0,un=function(t,e,n,r,o){this.vm=t,o&&(t._watcher=this),t._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++cn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new nt,this.newDepIds=new nt,this.expression="","function"==typeof e?this.getter=e:(this.getter=function(t){if(!F.test(t)){var e=t.split(".");return function(t){for(var n=0;n<e.length;n++){if(!t)return;t=t[e[n]]}return t}}}(e),this.getter||(this.getter=k)),this.value=this.lazy?void 0:this.get()};un.prototype.get=function(){var t;ct(this);var e=this.vm;try{t=this.getter.call(e,e)}catch(t){if(!this.user)throw t;Mt(t,e,\'getter for watcher "\'+this.expression+\'"\')}finally{this.deep&&Qt(t),ut(),this.cleanupDeps()}return t},un.prototype.addDep=function(t){var e=t.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(t),this.depIds.has(e)||t.addSub(this))},un.prototype.cleanupDeps=function(){for(var t=this.deps.length;t--;){var e=this.deps[t];this.newDepIds.has(e.id)||e.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},un.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(t){var e=t.id;if(null==Ye[e]){if(Ye[e]=!0,en){for(var n=Je.length-1;n>nn&&Je[n].id>t.id;)n--;Je.splice(n+1,0,t)}else Je.push(t);tn||(tn=!0,Zt(sn))}}(this)},un.prototype.run=function(){if(this.active){var t=this.get();if(t!==this.value||i(t)||this.deep){var e=this.value;if(this.value=t,this.user)try{this.cb.call(this.vm,t,e)}catch(t){Mt(t,this.vm,\'callback for watcher "\'+this.expression+\'"\')}else this.cb.call(this.vm,t,e)}}},un.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},un.prototype.depend=function(){for(var t=this.deps.length;t--;)this.deps[t].depend()},un.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||v(this.vm._watchers,this);for(var t=this.deps.length;t--;)this.deps[t].removeSub(this);this.active=!1}};var ln={enumerable:!0,configurable:!0,get:k,set:k};function fn(t,e,n){ln.get=function(){return this[e][n]},ln.set=function(t){this[e][n]=t},Object.defineProperty(t,n,ln)}function dn(t){t._watchers=[];var e=t.$options;e.props&&function(t,e){var n=t.$options.propsData||{},r=t._props={},o=t.$options._propKeys=[];t.$parent&&_t(!1);var i=function(i){o.push(i);var a=Dt(i,e,n,t);$t(r,i,a),i in t||fn(t,"_props",i)};for(var a in e)i(a);_t(!0)}(t,e.props),e.methods&&function(t,e){t.$options.props;for(var n in e)t[n]="function"!=typeof e[n]?k:w(e[n],t)}(t,e.methods),e.data?function(t){var e=t.$options.data;s(e=t._data="function"==typeof e?function(t,e){ct();try{return t.call(e,e)}catch(t){return Mt(t,e,"data()"),{}}finally{ut()}}(e,t):e||{})||(e={});var n=Object.keys(e),r=t.$options.props,o=(t.$options.methods,n.length);for(;o--;){var i=n[o];r&&m(r,i)||(a=void 0,36!==(a=(i+"").charCodeAt(0))&&95!==a&&fn(t,"_data",i))}var a;Ct(e,!0)}(t):Ct(t._data={},!0),e.computed&&function(t,e){var n=t._computedWatchers=Object.create(null),r=Y();for(var o in e){var i=e[o],a="function"==typeof i?i:i.get;r||(n[o]=new un(t,a||k,k,pn)),o in t||vn(t,o,i)}}(t,e.computed),e.watch&&e.watch!==Z&&function(t,e){for(var n in e){var r=e[n];if(Array.isArray(r))for(var o=0;o<r.length;o++)yn(t,n,r[o]);else yn(t,n,r)}}(t,e.watch)}var pn={lazy:!0};function vn(t,e,n){var r=!Y();"function"==typeof n?(ln.get=r?hn(e):mn(n),ln.set=k):(ln.get=n.get?r&&!1!==n.cache?hn(e):mn(n.get):k,ln.set=n.set||k),Object.defineProperty(t,e,ln)}function hn(t){return function(){var e=this._computedWatchers&&this._computedWatchers[t];if(e)return e.dirty&&e.evaluate(),at.target&&e.depend(),e.value}}function mn(t){return function(){return t.call(this,this)}}function yn(t,e,n,r){return s(n)&&(r=n,n=n.handler),"string"==typeof n&&(n=t[n]),t.$watch(e,n,r)}var gn=0;function _n(t){var e=t.options;if(t.super){var n=_n(t.super);if(n!==t.superOptions){t.superOptions=n;var r=function(t){var e,n=t.options,r=t.sealedOptions;for(var o in n)n[o]!==r[o]&&(e||(e={}),e[o]=n[o]);return e}(t);r&&x(t.extendOptions,r),(e=t.options=Tt(n,t.extendOptions)).name&&(e.components[e.name]=t)}}return e}function bn(t){this._init(t)}function Cn(t){t.cid=0;var e=1;t.extend=function(t){t=t||{};var n=this,r=n.cid,o=t._Ctor||(t._Ctor={});if(o[r])return o[r];var i=t.name||n.options.name,a=function(t){this._init(t)};return(a.prototype=Object.create(n.prototype)).constructor=a,a.cid=e++,a.options=Tt(n.options,t),a.super=n,a.options.props&&function(t){var e=t.options.props;for(var n in e)fn(t.prototype,"_props",n)}(a),a.options.computed&&function(t){var e=t.options.computed;for(var n in e)vn(t.prototype,n,e[n])}(a),a.extend=n.extend,a.mixin=n.mixin,a.use=n.use,N.forEach(function(t){a[t]=n[t]}),i&&(a.options.components[i]=a),a.superOptions=n.options,a.extendOptions=t,a.sealedOptions=x({},a.options),o[r]=a,a}}function $n(t){return t&&(t.Ctor.options.name||t.tag)}function wn(t,e){return Array.isArray(t)?t.indexOf(e)>-1:"string"==typeof t?t.split(",").indexOf(e)>-1:(n=t,"[object RegExp]"===a.call(n)&&t.test(e));var n}function An(t,e){var n=t.cache,r=t.keys,o=t._vnode;for(var i in n){var a=n[i];if(a){var s=$n(a.componentOptions);s&&!e(s)&&xn(n,i,r,o)}}}function xn(t,e,n,r){var o=t[e];!o||r&&o.tag===r.tag||o.componentInstance.$destroy(),t[e]=null,v(n,e)}!function(e){e.prototype._init=function(e){var n=this;n._uid=gn++,n._isVue=!0,e&&e._isComponent?function(t,e){var n=t.$options=Object.create(t.constructor.options),r=e._parentVnode;n.parent=e.parent,n._parentVnode=r;var o=r.componentOptions;n.propsData=o.propsData,n._parentListeners=o.listeners,n._renderChildren=o.children,n._componentTag=o.tag,e.render&&(n.render=e.render,n.staticRenderFns=e.staticRenderFns)}(n,e):n.$options=Tt(_n(n.constructor),e||{},n),n._renderProxy=n,n._self=n,function(t){var e=t.$options,n=e.parent;if(n&&!e.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(t)}t.$parent=n,t.$root=n?n.$root:t,t.$children=[],t.$refs={},t._watcher=null,t._inactive=null,t._directInactive=!1,t._isMounted=!1,t._isDestroyed=!1,t._isBeingDestroyed=!1}(n),function(t){t._events=Object.create(null),t._hasHookEvent=!1;var e=t.$options._parentListeners;e&&We(t,e)}(n),function(e){e._vnode=null,e._staticTrees=null;var n=e.$options,r=e.$vnode=n._parentVnode,o=r&&r.context;e.$slots=se(n._renderChildren,o),e.$scopedSlots=t,e._c=function(t,n,r,o){return Le(e,t,n,r,o,!1)},e.$createElement=function(t,n,r,o){return Le(e,t,n,r,o,!0)};var i=r&&r.data;$t(e,"$attrs",i&&i.attrs||t,null,!0),$t(e,"$listeners",n._parentListeners||t,null,!0)}(n),Ze(n,"beforeCreate"),function(t){var e=ae(t.$options.inject,t);e&&(_t(!1),Object.keys(e).forEach(function(n){$t(t,n,e[n])}),_t(!0))}(n),dn(n),function(t){var e=t.$options.provide;e&&(t._provided="function"==typeof e?e.call(t):e)}(n),Ze(n,"created"),n.$options.el&&n.$mount(n.$options.el)}}(bn),function(t){var e={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(t.prototype,"$data",e),Object.defineProperty(t.prototype,"$props",n),t.prototype.$set=wt,t.prototype.$delete=At,t.prototype.$watch=function(t,e,n){if(s(e))return yn(this,t,e,n);(n=n||{}).user=!0;var r=new un(this,t,e,n);if(n.immediate)try{e.call(this,r.value)}catch(t){Mt(t,this,\'callback for immediate watcher "\'+r.expression+\'"\')}return function(){r.teardown()}}}(bn),function(t){var e=/^hook:/;t.prototype.$on=function(t,n){var r=this;if(Array.isArray(t))for(var o=0,i=t.length;o<i;o++)r.$on(t[o],n);else(r._events[t]||(r._events[t]=[])).push(n),e.test(t)&&(r._hasHookEvent=!0);return r},t.prototype.$once=function(t,e){var n=this;function r(){n.$off(t,r),e.apply(n,arguments)}return r.fn=e,n.$on(t,r),n},t.prototype.$off=function(t,e){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(t)){for(var r=0,o=t.length;r<o;r++)n.$off(t[r],e);return n}var i,a=n._events[t];if(!a)return n;if(!e)return n._events[t]=null,n;for(var s=a.length;s--;)if((i=a[s])===e||i.fn===e){a.splice(s,1);break}return n},t.prototype.$emit=function(t){var e=this._events[t];if(e){e=e.length>1?A(e):e;for(var n=A(arguments,1),r=\'event handler for "\'+t+\'"\',o=0,i=e.length;o<i;o++)Ft(e[o],this,n,this,r)}return this}}(bn),function(t){t.prototype._update=function(t,e){var n=this,r=n.$el,o=n._vnode,i=Ke(n);n._vnode=t,n.$el=o?n.__patch__(o,t):n.__patch__(n.$el,t,e,!1),i(),r&&(r.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},t.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},t.prototype.$destroy=function(){var t=this;if(!t._isBeingDestroyed){Ze(t,"beforeDestroy"),t._isBeingDestroyed=!0;var e=t.$parent;!e||e._isBeingDestroyed||t.$options.abstract||v(e.$children,t),t._watcher&&t._watcher.teardown();for(var n=t._watchers.length;n--;)t._watchers[n].teardown();t._data.__ob__&&t._data.__ob__.vmCount--,t._isDestroyed=!0,t.__patch__(t._vnode,null),Ze(t,"destroyed"),t.$off(),t.$el&&(t.$el.__vue__=null),t.$vnode&&(t.$vnode.parent=null)}}}(bn),function(t){Oe(t.prototype),t.prototype.$nextTick=function(t){return Zt(t,this)},t.prototype._render=function(){var t,e=this,n=e.$options,r=n.render,o=n._parentVnode;o&&(e.$scopedSlots=ue(o.data.scopedSlots,e.$slots,e.$scopedSlots)),e.$vnode=o;try{Fe=e,t=r.call(e._renderProxy,e.$createElement)}catch(n){Mt(n,e,"render"),t=e._vnode}finally{Fe=null}return Array.isArray(t)&&1===t.length&&(t=t[0]),t instanceof lt||(t=dt()),t.parent=o,t}}(bn);var On=[String,RegExp,Array],kn={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:On,exclude:On,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var t in this.cache)xn(this.cache,t,this.keys)},mounted:function(){var t=this;this.$watch("include",function(e){An(t,function(t){return wn(e,t)})}),this.$watch("exclude",function(e){An(t,function(t){return!wn(e,t)})})},render:function(){var t=this.$slots.default,e=He(t),n=e&&e.componentOptions;if(n){var r=$n(n),o=this.include,i=this.exclude;if(o&&(!r||!wn(o,r))||i&&r&&wn(i,r))return e;var a=this.cache,s=this.keys,c=null==e.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):e.key;a[c]?(e.componentInstance=a[c].componentInstance,v(s,c),s.push(c)):(a[c]=e,s.push(c),this.max&&s.length>parseInt(this.max)&&xn(a,s[0],s,this._vnode)),e.data.keepAlive=!0}return e||t&&t[0]}}};!function(t){var e={get:function(){return L}};Object.defineProperty(t,"config",e),t.util={warn:ot,extend:x,mergeOptions:Tt,defineReactive:$t},t.set=wt,t.delete=At,t.nextTick=Zt,t.observable=function(t){return Ct(t),t},t.options=Object.create(null),N.forEach(function(e){t.options[e+"s"]=Object.create(null)}),t.options._base=t,x(t.options.components,kn),function(t){t.use=function(t){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(t)>-1)return this;var n=A(arguments,1);return n.unshift(this),"function"==typeof t.install?t.install.apply(t,n):"function"==typeof t&&t.apply(null,n),e.push(t),this}}(t),function(t){t.mixin=function(t){return this.options=Tt(this.options,t),this}}(t),Cn(t),function(t){N.forEach(function(e){t[e]=function(t,n){return n?("component"===e&&s(n)&&(n.name=n.name||t,n=this.options._base.extend(n)),"directive"===e&&"function"==typeof n&&(n={bind:n,update:n}),this.options[e+"s"][t]=n,n):this.options[e+"s"][t]}})}(t)}(bn),Object.defineProperty(bn.prototype,"$isServer",{get:Y}),Object.defineProperty(bn.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(bn,"FunctionalRenderContext",{value:ke}),bn.version="2.6.10";var Sn=d("style,class"),En=d("input,textarea,option,select,progress"),jn=d("contenteditable,draggable,spellcheck"),Tn=d("events,caret,typing,plaintext-only"),In=function(t,e){return Mn(e)||"false"===e?"false":"contenteditable"===t&&Tn(e)?e:"true"},Dn=d("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),Nn="http://www.w3.org/1999/xlink",Pn=function(t){return":"===t.charAt(5)&&"xlink"===t.slice(0,5)},Ln=function(t){return Pn(t)?t.slice(6,t.length):""},Mn=function(t){return null==t||!1===t};function Fn(t){for(var e=t.data,r=t,o=t;n(o.componentInstance);)(o=o.componentInstance._vnode)&&o.data&&(e=Rn(o.data,e));for(;n(r=r.parent);)r&&r.data&&(e=Rn(e,r.data));return function(t,e){if(n(t)||n(e))return Un(t,Hn(e));return""}(e.staticClass,e.class)}function Rn(t,e){return{staticClass:Un(t.staticClass,e.staticClass),class:n(t.class)?[t.class,e.class]:e.class}}function Un(t,e){return t?e?t+" "+e:t:e||""}function Hn(t){return Array.isArray(t)?function(t){for(var e,r="",o=0,i=t.length;o<i;o++)n(e=Hn(t[o]))&&""!==e&&(r&&(r+=" "),r+=e);return r}(t):i(t)?function(t){var e="";for(var n in t)t[n]&&(e&&(e+=" "),e+=n);return e}(t):"string"==typeof t?t:""}var Vn={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Bn=d("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),zn=d("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Wn=function(t){return Bn(t)||zn(t)};var qn=Object.create(null);var Kn=d("text,number,password,search,email,tel,url");var Xn=Object.freeze({createElement:function(t,e){var n=document.createElement(t);return"select"!==t?n:(e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n)},createElementNS:function(t,e){return document.createElementNS(Vn[t],e)},createTextNode:function(t){return document.createTextNode(t)},createComment:function(t){return document.createComment(t)},insertBefore:function(t,e,n){t.insertBefore(e,n)},removeChild:function(t,e){t.removeChild(e)},appendChild:function(t,e){t.appendChild(e)},parentNode:function(t){return t.parentNode},nextSibling:function(t){return t.nextSibling},tagName:function(t){return t.tagName},setTextContent:function(t,e){t.textContent=e},setStyleScope:function(t,e){t.setAttribute(e,"")}}),Gn={create:function(t,e){Zn(e)},update:function(t,e){t.data.ref!==e.data.ref&&(Zn(t,!0),Zn(e))},destroy:function(t){Zn(t,!0)}};function Zn(t,e){var r=t.data.ref;if(n(r)){var o=t.context,i=t.componentInstance||t.elm,a=o.$refs;e?Array.isArray(a[r])?v(a[r],i):a[r]===i&&(a[r]=void 0):t.data.refInFor?Array.isArray(a[r])?a[r].indexOf(i)<0&&a[r].push(i):a[r]=[i]:a[r]=i}}var Jn=new lt("",{},[]),Qn=["create","activate","update","remove","destroy"];function Yn(t,o){return t.key===o.key&&(t.tag===o.tag&&t.isComment===o.isComment&&n(t.data)===n(o.data)&&function(t,e){if("input"!==t.tag)return!0;var r,o=n(r=t.data)&&n(r=r.attrs)&&r.type,i=n(r=e.data)&&n(r=r.attrs)&&r.type;return o===i||Kn(o)&&Kn(i)}(t,o)||r(t.isAsyncPlaceholder)&&t.asyncFactory===o.asyncFactory&&e(o.asyncFactory.error))}function tr(t,e,r){var o,i,a={};for(o=e;o<=r;++o)n(i=t[o].key)&&(a[i]=o);return a}var er={create:nr,update:nr,destroy:function(t){nr(t,Jn)}};function nr(t,e){(t.data.directives||e.data.directives)&&function(t,e){var n,r,o,i=t===Jn,a=e===Jn,s=or(t.data.directives,t.context),c=or(e.data.directives,e.context),u=[],l=[];for(n in c)r=s[n],o=c[n],r?(o.oldValue=r.value,o.oldArg=r.arg,ar(o,"update",e,t),o.def&&o.def.componentUpdated&&l.push(o)):(ar(o,"bind",e,t),o.def&&o.def.inserted&&u.push(o));if(u.length){var f=function(){for(var n=0;n<u.length;n++)ar(u[n],"inserted",e,t)};i?ne(e,"insert",f):f()}l.length&&ne(e,"postpatch",function(){for(var n=0;n<l.length;n++)ar(l[n],"componentUpdated",e,t)});if(!i)for(n in s)c[n]||ar(s[n],"unbind",t,t,a)}(t,e)}var rr=Object.create(null);function or(t,e){var n,r,o=Object.create(null);if(!t)return o;for(n=0;n<t.length;n++)(r=t[n]).modifiers||(r.modifiers=rr),o[ir(r)]=r,r.def=It(e.$options,"directives",r.name);return o}function ir(t){return t.rawName||t.name+"."+Object.keys(t.modifiers||{}).join(".")}function ar(t,e,n,r,o){var i=t.def&&t.def[e];if(i)try{i(n.elm,t,n,r,o)}catch(r){Mt(r,n.context,"directive "+t.name+" "+e+" hook")}}var sr=[Gn,er];function cr(t,r){var o=r.componentOptions;if(!(n(o)&&!1===o.Ctor.options.inheritAttrs||e(t.data.attrs)&&e(r.data.attrs))){var i,a,s=r.elm,c=t.data.attrs||{},u=r.data.attrs||{};for(i in n(u.__ob__)&&(u=r.data.attrs=x({},u)),u)a=u[i],c[i]!==a&&ur(s,i,a);for(i in(W||K)&&u.value!==c.value&&ur(s,"value",u.value),c)e(u[i])&&(Pn(i)?s.removeAttributeNS(Nn,Ln(i)):jn(i)||s.removeAttribute(i))}}function ur(t,e,n){t.tagName.indexOf("-")>-1?lr(t,e,n):Dn(e)?Mn(n)?t.removeAttribute(e):(n="allowfullscreen"===e&&"EMBED"===t.tagName?"true":e,t.setAttribute(e,n)):jn(e)?t.setAttribute(e,In(e,n)):Pn(e)?Mn(n)?t.removeAttributeNS(Nn,Ln(e)):t.setAttributeNS(Nn,e,n):lr(t,e,n)}function lr(t,e,n){if(Mn(n))t.removeAttribute(e);else{if(W&&!q&&"TEXTAREA"===t.tagName&&"placeholder"===e&&""!==n&&!t.__ieph){var r=function(e){e.stopImmediatePropagation(),t.removeEventListener("input",r)};t.addEventListener("input",r),t.__ieph=!0}t.setAttribute(e,n)}}var fr={create:cr,update:cr};function dr(t,r){var o=r.elm,i=r.data,a=t.data;if(!(e(i.staticClass)&&e(i.class)&&(e(a)||e(a.staticClass)&&e(a.class)))){var s=Fn(r),c=o._transitionClasses;n(c)&&(s=Un(s,Hn(c))),s!==o._prevClass&&(o.setAttribute("class",s),o._prevClass=s)}}var pr,vr={create:dr,update:dr},hr="__r",mr="__c";function yr(t,e,n){var r=pr;return function o(){null!==e.apply(null,arguments)&&br(t,o,n,r)}}var gr=Vt&&!(G&&Number(G[1])<=53);function _r(t,e,n,r){if(gr){var o=rn,i=e;e=i._wrapper=function(t){if(t.target===t.currentTarget||t.timeStamp>=o||t.timeStamp<=0||t.target.ownerDocument!==document)return i.apply(this,arguments)}}pr.addEventListener(t,e,J?{capture:n,passive:r}:n)}function br(t,e,n,r){(r||pr).removeEventListener(t,e._wrapper||e,n)}function Cr(t,r){if(!e(t.data.on)||!e(r.data.on)){var o=r.data.on||{},i=t.data.on||{};pr=r.elm,function(t){if(n(t[hr])){var e=W?"change":"input";t[e]=[].concat(t[hr],t[e]||[]),delete t[hr]}n(t[mr])&&(t.change=[].concat(t[mr],t.change||[]),delete t[mr])}(o),ee(o,i,_r,br,yr,r.context),pr=void 0}}var $r,wr={create:Cr,update:Cr};function Ar(t,r){if(!e(t.data.domProps)||!e(r.data.domProps)){var o,i,a=r.elm,s=t.data.domProps||{},c=r.data.domProps||{};for(o in n(c.__ob__)&&(c=r.data.domProps=x({},c)),s)o in c||(a[o]="");for(o in c){if(i=c[o],"textContent"===o||"innerHTML"===o){if(r.children&&(r.children.length=0),i===s[o])continue;1===a.childNodes.length&&a.removeChild(a.childNodes[0])}if("value"===o&&"PROGRESS"!==a.tagName){a._value=i;var u=e(i)?"":String(i);xr(a,u)&&(a.value=u)}else if("innerHTML"===o&&zn(a.tagName)&&e(a.innerHTML)){($r=$r||document.createElement("div")).innerHTML="<svg>"+i+"</svg>";for(var l=$r.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;l.firstChild;)a.appendChild(l.firstChild)}else if(i!==s[o])try{a[o]=i}catch(t){}}}}function xr(t,e){return!t.composing&&("OPTION"===t.tagName||function(t,e){var n=!0;try{n=document.activeElement!==t}catch(t){}return n&&t.value!==e}(t,e)||function(t,e){var r=t.value,o=t._vModifiers;if(n(o)){if(o.number)return f(r)!==f(e);if(o.trim)return r.trim()!==e.trim()}return r!==e}(t,e))}var Or={create:Ar,update:Ar},kr=y(function(t){var e={},n=/:(.+)/;return t.split(/;(?![^(]*\\))/g).forEach(function(t){if(t){var r=t.split(n);r.length>1&&(e[r[0].trim()]=r[1].trim())}}),e});function Sr(t){var e=Er(t.style);return t.staticStyle?x(t.staticStyle,e):e}function Er(t){return Array.isArray(t)?O(t):"string"==typeof t?kr(t):t}var jr,Tr=/^--/,Ir=/\\s*!important$/,Dr=function(t,e,n){if(Tr.test(e))t.style.setProperty(e,n);else if(Ir.test(n))t.style.setProperty($(e),n.replace(Ir,""),"important");else{var r=Pr(e);if(Array.isArray(n))for(var o=0,i=n.length;o<i;o++)t.style[r]=n[o];else t.style[r]=n}},Nr=["Webkit","Moz","ms"],Pr=y(function(t){if(jr=jr||document.createElement("div").style,"filter"!==(t=_(t))&&t in jr)return t;for(var e=t.charAt(0).toUpperCase()+t.slice(1),n=0;n<Nr.length;n++){var r=Nr[n]+e;if(r in jr)return r}});function Lr(t,r){var o=r.data,i=t.data;if(!(e(o.staticStyle)&&e(o.style)&&e(i.staticStyle)&&e(i.style))){var a,s,c=r.elm,u=i.staticStyle,l=i.normalizedStyle||i.style||{},f=u||l,d=Er(r.data.style)||{};r.data.normalizedStyle=n(d.__ob__)?x({},d):d;var p=function(t,e){var n,r={};if(e)for(var o=t;o.componentInstance;)(o=o.componentInstance._vnode)&&o.data&&(n=Sr(o.data))&&x(r,n);(n=Sr(t.data))&&x(r,n);for(var i=t;i=i.parent;)i.data&&(n=Sr(i.data))&&x(r,n);return r}(r,!0);for(s in f)e(p[s])&&Dr(c,s,"");for(s in p)(a=p[s])!==f[s]&&Dr(c,s,null==a?"":a)}}var Mr={create:Lr,update:Lr},Fr=/\\s+/;function Rr(t,e){if(e&&(e=e.trim()))if(t.classList)e.indexOf(" ")>-1?e.split(Fr).forEach(function(e){return t.classList.add(e)}):t.classList.add(e);else{var n=" "+(t.getAttribute("class")||"")+" ";n.indexOf(" "+e+" ")<0&&t.setAttribute("class",(n+e).trim())}}function Ur(t,e){if(e&&(e=e.trim()))if(t.classList)e.indexOf(" ")>-1?e.split(Fr).forEach(function(e){return t.classList.remove(e)}):t.classList.remove(e),t.classList.length||t.removeAttribute("class");else{for(var n=" "+(t.getAttribute("class")||"")+" ",r=" "+e+" ";n.indexOf(r)>=0;)n=n.replace(r," ");(n=n.trim())?t.setAttribute("class",n):t.removeAttribute("class")}}function Hr(t){if(t){if("object"==typeof t){var e={};return!1!==t.css&&x(e,Vr(t.name||"v")),x(e,t),e}return"string"==typeof t?Vr(t):void 0}}var Vr=y(function(t){return{enterClass:t+"-enter",enterToClass:t+"-enter-to",enterActiveClass:t+"-enter-active",leaveClass:t+"-leave",leaveToClass:t+"-leave-to",leaveActiveClass:t+"-leave-active"}}),Br=H&&!q,zr="transition",Wr="animation",qr="transition",Kr="transitionend",Xr="animation",Gr="animationend";Br&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(qr="WebkitTransition",Kr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Xr="WebkitAnimation",Gr="webkitAnimationEnd"));var Zr=H?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(t){return t()};function Jr(t){Zr(function(){Zr(t)})}function Qr(t,e){var n=t._transitionClasses||(t._transitionClasses=[]);n.indexOf(e)<0&&(n.push(e),Rr(t,e))}function Yr(t,e){t._transitionClasses&&v(t._transitionClasses,e),Ur(t,e)}function to(t,e,n){var r=no(t,e),o=r.type,i=r.timeout,a=r.propCount;if(!o)return n();var s=o===zr?Kr:Gr,c=0,u=function(){t.removeEventListener(s,l),n()},l=function(e){e.target===t&&++c>=a&&u()};setTimeout(function(){c<a&&u()},i+1),t.addEventListener(s,l)}var eo=/\\b(transform|all)(,|$)/;function no(t,e){var n,r=window.getComputedStyle(t),o=(r[qr+"Delay"]||"").split(", "),i=(r[qr+"Duration"]||"").split(", "),a=ro(o,i),s=(r[Xr+"Delay"]||"").split(", "),c=(r[Xr+"Duration"]||"").split(", "),u=ro(s,c),l=0,f=0;return e===zr?a>0&&(n=zr,l=a,f=i.length):e===Wr?u>0&&(n=Wr,l=u,f=c.length):f=(n=(l=Math.max(a,u))>0?a>u?zr:Wr:null)?n===zr?i.length:c.length:0,{type:n,timeout:l,propCount:f,hasTransform:n===zr&&eo.test(r[qr+"Property"])}}function ro(t,e){for(;t.length<e.length;)t=t.concat(t);return Math.max.apply(null,e.map(function(e,n){return oo(e)+oo(t[n])}))}function oo(t){return 1e3*Number(t.slice(0,-1).replace(",","."))}function io(t,r){var o=t.elm;n(o._leaveCb)&&(o._leaveCb.cancelled=!0,o._leaveCb());var a=Hr(t.data.transition);if(!e(a)&&!n(o._enterCb)&&1===o.nodeType){for(var s=a.css,c=a.type,u=a.enterClass,l=a.enterToClass,d=a.enterActiveClass,p=a.appearClass,v=a.appearToClass,h=a.appearActiveClass,m=a.beforeEnter,y=a.enter,g=a.afterEnter,_=a.enterCancelled,b=a.beforeAppear,C=a.appear,$=a.afterAppear,w=a.appearCancelled,A=a.duration,x=qe,O=qe.$vnode;O&&O.parent;)x=O.context,O=O.parent;var k=!x._isMounted||!t.isRootInsert;if(!k||C||""===C){var S=k&&p?p:u,E=k&&h?h:d,j=k&&v?v:l,T=k&&b||m,D=k&&"function"==typeof C?C:y,N=k&&$||g,P=k&&w||_,L=f(i(A)?A.enter:A),M=!1!==s&&!q,F=co(D),R=o._enterCb=I(function(){M&&(Yr(o,j),Yr(o,E)),R.cancelled?(M&&Yr(o,S),P&&P(o)):N&&N(o),o._enterCb=null});t.data.show||ne(t,"insert",function(){var e=o.parentNode,n=e&&e._pending&&e._pending[t.key];n&&n.tag===t.tag&&n.elm._leaveCb&&n.elm._leaveCb(),D&&D(o,R)}),T&&T(o),M&&(Qr(o,S),Qr(o,E),Jr(function(){Yr(o,S),R.cancelled||(Qr(o,j),F||(so(L)?setTimeout(R,L):to(o,c,R)))})),t.data.show&&(r&&r(),D&&D(o,R)),M||F||R()}}}function ao(t,r){var o=t.elm;n(o._enterCb)&&(o._enterCb.cancelled=!0,o._enterCb());var a=Hr(t.data.transition);if(e(a)||1!==o.nodeType)return r();if(!n(o._leaveCb)){var s=a.css,c=a.type,u=a.leaveClass,l=a.leaveToClass,d=a.leaveActiveClass,p=a.beforeLeave,v=a.leave,h=a.afterLeave,m=a.leaveCancelled,y=a.delayLeave,g=a.duration,_=!1!==s&&!q,b=co(v),C=f(i(g)?g.leave:g),$=o._leaveCb=I(function(){o.parentNode&&o.parentNode._pending&&(o.parentNode._pending[t.key]=null),_&&(Yr(o,l),Yr(o,d)),$.cancelled?(_&&Yr(o,u),m&&m(o)):(r(),h&&h(o)),o._leaveCb=null});y?y(w):w()}function w(){$.cancelled||(!t.data.show&&o.parentNode&&((o.parentNode._pending||(o.parentNode._pending={}))[t.key]=t),p&&p(o),_&&(Qr(o,u),Qr(o,d),Jr(function(){Yr(o,u),$.cancelled||(Qr(o,l),b||(so(C)?setTimeout($,C):to(o,c,$)))})),v&&v(o,$),_||b||$())}}function so(t){return"number"==typeof t&&!isNaN(t)}function co(t){if(e(t))return!1;var r=t.fns;return n(r)?co(Array.isArray(r)?r[0]:r):(t._length||t.length)>1}function uo(t,e){!0!==e.data.show&&io(e)}var lo=function(t){var i,a,s={},c=t.modules,u=t.nodeOps;for(i=0;i<Qn.length;++i)for(s[Qn[i]]=[],a=0;a<c.length;++a)n(c[a][Qn[i]])&&s[Qn[i]].push(c[a][Qn[i]]);function l(t){var e=u.parentNode(t);n(e)&&u.removeChild(e,t)}function f(t,e,o,i,a,c,l){if(n(t.elm)&&n(c)&&(t=c[l]=vt(t)),t.isRootInsert=!a,!function(t,e,o,i){var a=t.data;if(n(a)){var c=n(t.componentInstance)&&a.keepAlive;if(n(a=a.hook)&&n(a=a.init)&&a(t,!1),n(t.componentInstance))return p(t,e),v(o,t.elm,i),r(c)&&function(t,e,r,o){for(var i,a=t;a.componentInstance;)if(a=a.componentInstance._vnode,n(i=a.data)&&n(i=i.transition)){for(i=0;i<s.activate.length;++i)s.activate[i](Jn,a);e.push(a);break}v(r,t.elm,o)}(t,e,o,i),!0}}(t,e,o,i)){var f=t.data,d=t.children,m=t.tag;n(m)?(t.elm=t.ns?u.createElementNS(t.ns,m):u.createElement(m,t),g(t),h(t,d,e),n(f)&&y(t,e),v(o,t.elm,i)):r(t.isComment)?(t.elm=u.createComment(t.text),v(o,t.elm,i)):(t.elm=u.createTextNode(t.text),v(o,t.elm,i))}}function p(t,e){n(t.data.pendingInsert)&&(e.push.apply(e,t.data.pendingInsert),t.data.pendingInsert=null),t.elm=t.componentInstance.$el,m(t)?(y(t,e),g(t)):(Zn(t),e.push(t))}function v(t,e,r){n(t)&&(n(r)?u.parentNode(r)===t&&u.insertBefore(t,e,r):u.appendChild(t,e))}function h(t,e,n){if(Array.isArray(e))for(var r=0;r<e.length;++r)f(e[r],n,t.elm,null,!0,e,r);else o(t.text)&&u.appendChild(t.elm,u.createTextNode(String(t.text)))}function m(t){for(;t.componentInstance;)t=t.componentInstance._vnode;return n(t.tag)}function y(t,e){for(var r=0;r<s.create.length;++r)s.create[r](Jn,t);n(i=t.data.hook)&&(n(i.create)&&i.create(Jn,t),n(i.insert)&&e.push(t))}function g(t){var e;if(n(e=t.fnScopeId))u.setStyleScope(t.elm,e);else for(var r=t;r;)n(e=r.context)&&n(e=e.$options._scopeId)&&u.setStyleScope(t.elm,e),r=r.parent;n(e=qe)&&e!==t.context&&e!==t.fnContext&&n(e=e.$options._scopeId)&&u.setStyleScope(t.elm,e)}function _(t,e,n,r,o,i){for(;r<=o;++r)f(n[r],i,t,e,!1,n,r)}function b(t){var e,r,o=t.data;if(n(o))for(n(e=o.hook)&&n(e=e.destroy)&&e(t),e=0;e<s.destroy.length;++e)s.destroy[e](t);if(n(e=t.children))for(r=0;r<t.children.length;++r)b(t.children[r])}function C(t,e,r,o){for(;r<=o;++r){var i=e[r];n(i)&&(n(i.tag)?($(i),b(i)):l(i.elm))}}function $(t,e){if(n(e)||n(t.data)){var r,o=s.remove.length+1;for(n(e)?e.listeners+=o:e=function(t,e){function n(){0==--n.listeners&&l(t)}return n.listeners=e,n}(t.elm,o),n(r=t.componentInstance)&&n(r=r._vnode)&&n(r.data)&&$(r,e),r=0;r<s.remove.length;++r)s.remove[r](t,e);n(r=t.data.hook)&&n(r=r.remove)?r(t,e):e()}else l(t.elm)}function w(t,e,r,o){for(var i=r;i<o;i++){var a=e[i];if(n(a)&&Yn(t,a))return i}}function A(t,o,i,a,c,l){if(t!==o){n(o.elm)&&n(a)&&(o=a[c]=vt(o));var d=o.elm=t.elm;if(r(t.isAsyncPlaceholder))n(o.asyncFactory.resolved)?k(t.elm,o,i):o.isAsyncPlaceholder=!0;else if(r(o.isStatic)&&r(t.isStatic)&&o.key===t.key&&(r(o.isCloned)||r(o.isOnce)))o.componentInstance=t.componentInstance;else{var p,v=o.data;n(v)&&n(p=v.hook)&&n(p=p.prepatch)&&p(t,o);var h=t.children,y=o.children;if(n(v)&&m(o)){for(p=0;p<s.update.length;++p)s.update[p](t,o);n(p=v.hook)&&n(p=p.update)&&p(t,o)}e(o.text)?n(h)&&n(y)?h!==y&&function(t,r,o,i,a){for(var s,c,l,d=0,p=0,v=r.length-1,h=r[0],m=r[v],y=o.length-1,g=o[0],b=o[y],$=!a;d<=v&&p<=y;)e(h)?h=r[++d]:e(m)?m=r[--v]:Yn(h,g)?(A(h,g,i,o,p),h=r[++d],g=o[++p]):Yn(m,b)?(A(m,b,i,o,y),m=r[--v],b=o[--y]):Yn(h,b)?(A(h,b,i,o,y),$&&u.insertBefore(t,h.elm,u.nextSibling(m.elm)),h=r[++d],b=o[--y]):Yn(m,g)?(A(m,g,i,o,p),$&&u.insertBefore(t,m.elm,h.elm),m=r[--v],g=o[++p]):(e(s)&&(s=tr(r,d,v)),e(c=n(g.key)?s[g.key]:w(g,r,d,v))?f(g,i,t,h.elm,!1,o,p):Yn(l=r[c],g)?(A(l,g,i,o,p),r[c]=void 0,$&&u.insertBefore(t,l.elm,h.elm)):f(g,i,t,h.elm,!1,o,p),g=o[++p]);d>v?_(t,e(o[y+1])?null:o[y+1].elm,o,p,y,i):p>y&&C(0,r,d,v)}(d,h,y,i,l):n(y)?(n(t.text)&&u.setTextContent(d,""),_(d,null,y,0,y.length-1,i)):n(h)?C(0,h,0,h.length-1):n(t.text)&&u.setTextContent(d,""):t.text!==o.text&&u.setTextContent(d,o.text),n(v)&&n(p=v.hook)&&n(p=p.postpatch)&&p(t,o)}}}function x(t,e,o){if(r(o)&&n(t.parent))t.parent.data.pendingInsert=e;else for(var i=0;i<e.length;++i)e[i].data.hook.insert(e[i])}var O=d("attrs,class,staticClass,staticStyle,key");function k(t,e,o,i){var a,s=e.tag,c=e.data,u=e.children;if(i=i||c&&c.pre,e.elm=t,r(e.isComment)&&n(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(n(c)&&(n(a=c.hook)&&n(a=a.init)&&a(e,!0),n(a=e.componentInstance)))return p(e,o),!0;if(n(s)){if(n(u))if(t.hasChildNodes())if(n(a=c)&&n(a=a.domProps)&&n(a=a.innerHTML)){if(a!==t.innerHTML)return!1}else{for(var l=!0,f=t.firstChild,d=0;d<u.length;d++){if(!f||!k(f,u[d],o,i)){l=!1;break}f=f.nextSibling}if(!l||f)return!1}else h(e,u,o);if(n(c)){var v=!1;for(var m in c)if(!O(m)){v=!0,y(e,o);break}!v&&c.class&&Qt(c.class)}}else t.data!==e.text&&(t.data=e.text);return!0}return function(t,o,i,a){if(!e(o)){var c,l=!1,d=[];if(e(t))l=!0,f(o,d);else{var p=n(t.nodeType);if(!p&&Yn(t,o))A(t,o,d,null,null,a);else{if(p){if(1===t.nodeType&&t.hasAttribute(D)&&(t.removeAttribute(D),i=!0),r(i)&&k(t,o,d))return x(o,d,!0),t;c=t,t=new lt(u.tagName(c).toLowerCase(),{},[],void 0,c)}var v=t.elm,h=u.parentNode(v);if(f(o,d,v._leaveCb?null:h,u.nextSibling(v)),n(o.parent))for(var y=o.parent,g=m(o);y;){for(var _=0;_<s.destroy.length;++_)s.destroy[_](y);if(y.elm=o.elm,g){for(var $=0;$<s.create.length;++$)s.create[$](Jn,y);var w=y.data.hook.insert;if(w.merged)for(var O=1;O<w.fns.length;O++)w.fns[O]()}else Zn(y);y=y.parent}n(h)?C(0,[t],0,0):n(t.tag)&&b(t)}}return x(o,d,l),o.elm}n(t)&&b(t)}}({nodeOps:Xn,modules:[fr,vr,wr,Or,Mr,H?{create:uo,activate:uo,remove:function(t,e){!0!==t.data.show?ao(t,e):e()}}:{}].concat(sr)});q&&document.addEventListener("selectionchange",function(){var t=document.activeElement;t&&t.vmodel&&_o(t,"input")});var fo={inserted:function(t,e,n,r){"select"===n.tag?(r.elm&&!r.elm._vOptions?ne(n,"postpatch",function(){fo.componentUpdated(t,e,n)}):po(t,e,n.context),t._vOptions=[].map.call(t.options,mo)):("textarea"===n.tag||Kn(t.type))&&(t._vModifiers=e.modifiers,e.modifiers.lazy||(t.addEventListener("compositionstart",yo),t.addEventListener("compositionend",go),t.addEventListener("change",go),q&&(t.vmodel=!0)))},componentUpdated:function(t,e,n){if("select"===n.tag){po(t,e,n.context);var r=t._vOptions,o=t._vOptions=[].map.call(t.options,mo);if(o.some(function(t,e){return!j(t,r[e])}))(t.multiple?e.value.some(function(t){return ho(t,o)}):e.value!==e.oldValue&&ho(e.value,o))&&_o(t,"change")}}};function po(t,e,n){vo(t,e,n),(W||K)&&setTimeout(function(){vo(t,e,n)},0)}function vo(t,e,n){var r=e.value,o=t.multiple;if(!o||Array.isArray(r)){for(var i,a,s=0,c=t.options.length;s<c;s++)if(a=t.options[s],o)i=T(r,mo(a))>-1,a.selected!==i&&(a.selected=i);else if(j(mo(a),r))return void(t.selectedIndex!==s&&(t.selectedIndex=s));o||(t.selectedIndex=-1)}}function ho(t,e){return e.every(function(e){return!j(e,t)})}function mo(t){return"_value"in t?t._value:t.value}function yo(t){t.target.composing=!0}function go(t){t.target.composing&&(t.target.composing=!1,_o(t.target,"input"))}function _o(t,e){var n=document.createEvent("HTMLEvents");n.initEvent(e,!0,!0),t.dispatchEvent(n)}function bo(t){return!t.componentInstance||t.data&&t.data.transition?t:bo(t.componentInstance._vnode)}var Co={model:fo,show:{bind:function(t,e,n){var r=e.value,o=(n=bo(n)).data&&n.data.transition,i=t.__vOriginalDisplay="none"===t.style.display?"":t.style.display;r&&o?(n.data.show=!0,io(n,function(){t.style.display=i})):t.style.display=r?i:"none"},update:function(t,e,n){var r=e.value;!r!=!e.oldValue&&((n=bo(n)).data&&n.data.transition?(n.data.show=!0,r?io(n,function(){t.style.display=t.__vOriginalDisplay}):ao(n,function(){t.style.display="none"})):t.style.display=r?t.__vOriginalDisplay:"none")},unbind:function(t,e,n,r,o){o||(t.style.display=t.__vOriginalDisplay)}}},$o={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function wo(t){var e=t&&t.componentOptions;return e&&e.Ctor.options.abstract?wo(He(e.children)):t}function Ao(t){var e={},n=t.$options;for(var r in n.propsData)e[r]=t[r];var o=n._parentListeners;for(var i in o)e[_(i)]=o[i];return e}function xo(t,e){if(/\\d-keep-alive$/.test(e.tag))return t("keep-alive",{props:e.componentOptions.propsData})}var Oo=function(t){return t.tag||Ue(t)},ko=function(t){return"show"===t.name},So={name:"transition",props:$o,abstract:!0,render:function(t){var e=this,n=this.$slots.default;if(n&&(n=n.filter(Oo)).length){var r=this.mode,i=n[0];if(function(t){for(;t=t.parent;)if(t.data.transition)return!0}(this.$vnode))return i;var a=wo(i);if(!a)return i;if(this._leaving)return xo(t,i);var s="__transition-"+this._uid+"-";a.key=null==a.key?a.isComment?s+"comment":s+a.tag:o(a.key)?0===String(a.key).indexOf(s)?a.key:s+a.key:a.key;var c=(a.data||(a.data={})).transition=Ao(this),u=this._vnode,l=wo(u);if(a.data.directives&&a.data.directives.some(ko)&&(a.data.show=!0),l&&l.data&&!function(t,e){return e.key===t.key&&e.tag===t.tag}(a,l)&&!Ue(l)&&(!l.componentInstance||!l.componentInstance._vnode.isComment)){var f=l.data.transition=x({},c);if("out-in"===r)return this._leaving=!0,ne(f,"afterLeave",function(){e._leaving=!1,e.$forceUpdate()}),xo(t,i);if("in-out"===r){if(Ue(a))return u;var d,p=function(){d()};ne(c,"afterEnter",p),ne(c,"enterCancelled",p),ne(f,"delayLeave",function(t){d=t})}}return i}}},Eo=x({tag:String,moveClass:String},$o);function jo(t){t.elm._moveCb&&t.elm._moveCb(),t.elm._enterCb&&t.elm._enterCb()}function To(t){t.data.newPos=t.elm.getBoundingClientRect()}function Io(t){var e=t.data.pos,n=t.data.newPos,r=e.left-n.left,o=e.top-n.top;if(r||o){t.data.moved=!0;var i=t.elm.style;i.transform=i.WebkitTransform="translate("+r+"px,"+o+"px)",i.transitionDuration="0s"}}delete Eo.mode;var Do={Transition:So,TransitionGroup:{props:Eo,beforeMount:function(){var t=this,e=this._update;this._update=function(n,r){var o=Ke(t);t.__patch__(t._vnode,t.kept,!1,!0),t._vnode=t.kept,o(),e.call(t,n,r)}},render:function(t){for(var e=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),r=this.prevChildren=this.children,o=this.$slots.default||[],i=this.children=[],a=Ao(this),s=0;s<o.length;s++){var c=o[s];c.tag&&null!=c.key&&0!==String(c.key).indexOf("__vlist")&&(i.push(c),n[c.key]=c,(c.data||(c.data={})).transition=a)}if(r){for(var u=[],l=[],f=0;f<r.length;f++){var d=r[f];d.data.transition=a,d.data.pos=d.elm.getBoundingClientRect(),n[d.key]?u.push(d):l.push(d)}this.kept=t(e,null,u),this.removed=l}return t(e,null,i)},updated:function(){var t=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";t.length&&this.hasMove(t[0].elm,e)&&(t.forEach(jo),t.forEach(To),t.forEach(Io),this._reflow=document.body.offsetHeight,t.forEach(function(t){if(t.data.moved){var n=t.elm,r=n.style;Qr(n,e),r.transform=r.WebkitTransform=r.transitionDuration="",n.addEventListener(Kr,n._moveCb=function t(r){r&&r.target!==n||r&&!/transform$/.test(r.propertyName)||(n.removeEventListener(Kr,t),n._moveCb=null,Yr(n,e))})}}))},methods:{hasMove:function(t,e){if(!Br)return!1;if(this._hasMove)return this._hasMove;var n=t.cloneNode();t._transitionClasses&&t._transitionClasses.forEach(function(t){Ur(n,t)}),Rr(n,e),n.style.display="none",this.$el.appendChild(n);var r=no(n);return this.$el.removeChild(n),this._hasMove=r.hasTransform}}}};return bn.config.mustUseProp=function(t,e,n){return"value"===n&&En(t)&&"button"!==e||"selected"===n&&"option"===t||"checked"===n&&"input"===t||"muted"===n&&"video"===t},bn.config.isReservedTag=Wn,bn.config.isReservedAttr=Sn,bn.config.getTagNamespace=function(t){return zn(t)?"svg":"math"===t?"math":void 0},bn.config.isUnknownElement=function(t){if(!H)return!0;if(Wn(t))return!1;if(t=t.toLowerCase(),null!=qn[t])return qn[t];var e=document.createElement(t);return t.indexOf("-")>-1?qn[t]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:qn[t]=/HTMLUnknownElement/.test(e.toString())},x(bn.options.directives,Co),x(bn.options.components,Do),bn.prototype.__patch__=H?lo:k,bn.prototype.$mount=function(t,e){return function(t,e,n){var r;return t.$el=e,t.$options.render||(t.$options.render=dt),Ze(t,"beforeMount"),r=function(){t._update(t._render(),n)},new un(t,r,k,{before:function(){t._isMounted&&!t._isDestroyed&&Ze(t,"beforeUpdate")}},!0),n=!1,null==t.$vnode&&(t._isMounted=!0,Ze(t,"mounted")),t}(this,t=t&&H?function(t){if("string"==typeof t){var e=document.querySelector(t);return e||document.createElement("div")}return t}(t):void 0,e)},H&&setTimeout(function(){L.devtools&&tt&&tt.emit("init",bn)},0),bn});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(1), __webpack_require__(6).setImmediate))\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')},function(module,exports){eval('var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function("return this")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === "object") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it\'s\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzP2NkMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEM7O0FBRTVDIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n')},function(module,exports,__webpack_require__){eval('var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c("div", { staticClass: "sudokuChecker" }, [\n    _c("div", { staticClass: "submitPanel" }, [\n      _c(\n        "button",\n        {\n          on: {\n            click: function($event) {\n              return _vm.state.submit()\n            }\n          }\n        },\n        [_vm._v("Submit Solution")]\n      ),\n      _vm._v(" "),\n      _c("label", [_vm._v(_vm._s(_vm.state.solutionState))])\n    ]),\n    _vm._v(" "),\n    _c(\n      "button",\n      {\n        on: {\n          click: function($event) {\n            return _vm.state.checkBoard()\n          }\n        }\n      },\n      [_vm._v("Check For Errors")]\n    ),\n    _vm._v(" "),\n    _c(\n      "button",\n      {\n        on: {\n          click: function($event) {\n            return _vm.state.resetBoardErrors()\n          }\n        }\n      },\n      [_vm._v("Clear Errors")]\n    ),\n    _vm._v(" "),\n    _c(\n      "button",\n      {\n        on: {\n          click: function($event) {\n            return _vm.state.resetBoard()\n          }\n        }\n      },\n      [_vm._v("Reset Board")]\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nmodule.exports = function (_exports) {\n  var options = typeof _exports === \'function\'\n    ? _exports.options\n    : _exports\n  options.render = render\n  options.staticRenderFns = staticRenderFns\n  if (false) {}\n  return _exports\n}\nvar api = null\nif (false) {}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9odG1sL1N1ZG9rdUNoZWNrZXIuaHRtbD82ZjAwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyI8ZGl2IGNsYXNzPVwic3Vkb2t1Q2hlY2tlclwiPlxuICA8ZGl2IGNsYXNzPVwic3VibWl0UGFuZWxcIj5cbiAgICA8YnV0dG9uIHYtb246Y2xpY2s9XCJzdGF0ZS5zdWJtaXQoKVwiPlN1Ym1pdCBTb2x1dGlvbjwvYnV0dG9uPlxuICAgIDxsYWJlbD57eyBzdGF0ZS5zb2x1dGlvblN0YXRlIH19PC9sYWJlbD5cbiAgPC9kaXY+XG4gIDxidXR0b24gdi1vbjpjbGljaz1cInN0YXRlLmNoZWNrQm9hcmQoKVwiPkNoZWNrIEZvciBFcnJvcnM8L2J1dHRvbj5cbiAgPGJ1dHRvbiB2LW9uOmNsaWNrPVwic3RhdGUucmVzZXRCb2FyZEVycm9ycygpXCI+Q2xlYXIgRXJyb3JzPC9idXR0b24+XG4gIDxidXR0b24gdi1vbjpjbGljaz1cInN0YXRlLnJlc2V0Qm9hcmQoKVwiPlJlc2V0IEJvYXJkPC9idXR0b24+XG48L2Rpdj5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n')},function(module,exports,__webpack_require__){eval('var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    "ul",\n    { staticClass: "sudokuGrid" },\n    _vm._l(_vm.squareData, function(squares, r) {\n      return _c("li", [\n        _c(\n          "ul",\n          { class: _vm.getRowClass(r) },\n          _vm._l(squares, function(square, c) {\n            return _c("li", [\n              square.isHint\n                ? _c("div", { class: square.classes }, [\n                    _vm._v("\\n          " + _vm._s(square.value) + "\\n        ")\n                  ])\n                : square.isGuessMode\n                ? _c(\n                    "button",\n                    {\n                      class: square.classes,\n                      on: {\n                        click: function($event) {\n                          return _vm.state.onBoardClick(r, c)\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        "\\n          " + _vm._s(square.guess) + "\\n        "\n                      )\n                    ]\n                  )\n                : _c(\n                    "div",\n                    {\n                      class: square.classes,\n                      on: {\n                        click: function($event) {\n                          return _vm.state.onBoardClick(r, c)\n                        }\n                      }\n                    },\n                    [\n                      _c(\n                        "table",\n                        { staticClass: "noteGrid" },\n                        _vm._l(square.notes, function(noteRow, nr) {\n                          return _c(\n                            "tr",\n                            _vm._l(noteRow, function(note, nc) {\n                              return _c(\n                                "td",\n                                {\n                                  key: nc,\n                                  class: square.getNoteClasses(nr, nc)\n                                },\n                                [\n                                  _vm._v(\n                                    "\\n                " +\n                                      _vm._s(square.getNote(nr, nc)) +\n                                      "\\n              "\n                                  )\n                                ]\n                              )\n                            }),\n                            0\n                          )\n                        }),\n                        0\n                      )\n                    ]\n                  )\n            ])\n          }),\n          0\n        )\n      ])\n    }),\n    0\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nmodule.exports = function (_exports) {\n  var options = typeof _exports === \'function\'\n    ? _exports.options\n    : _exports\n  options.render = render\n  options.staticRenderFns = staticRenderFns\n  if (false) {}\n  return _exports\n}\nvar api = null\nif (false) {}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9odG1sL1N1ZG9rdUdyaWQuaHRtbD82ODQ0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyI8dWwgY2xhc3M9XCJzdWRva3VHcmlkXCI+XG4gIDxsaSB2LWZvcj1cIihzcXVhcmVzLCByKSBpbiBzcXVhcmVEYXRhXCI+XG4gICAgPHVsIHYtYmluZDpjbGFzcz1cImdldFJvd0NsYXNzKHIpXCI+XG4gICAgICA8bGkgdi1mb3I9XCIoc3F1YXJlLCBjKSBpbiBzcXVhcmVzXCI+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICB2LWlmPVwic3F1YXJlLmlzSGludFwiXG4gICAgICAgICAgdi1iaW5kOmNsYXNzPVwic3F1YXJlLmNsYXNzZXNcIj5cbiAgICAgICAgICB7eyBzcXVhcmUudmFsdWUgfX1cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIHYtZWxzZS1pZj1cInNxdWFyZS5pc0d1ZXNzTW9kZVwiXG4gICAgICAgICAgdi1iaW5kOmNsYXNzPVwic3F1YXJlLmNsYXNzZXNcIlxuICAgICAgICAgIHYtb246Y2xpY2s9XCJzdGF0ZS5vbkJvYXJkQ2xpY2sociwgYylcIj5cbiAgICAgICAgICB7eyBzcXVhcmUuZ3Vlc3MgfX1cbiAgICAgICAgPC9idXR0b24+XG5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIHYtZWxzZVxuICAgICAgICAgIHYtYmluZDpjbGFzcz1cInNxdWFyZS5jbGFzc2VzXCJcbiAgICAgICAgICB2LW9uOmNsaWNrPVwic3RhdGUub25Cb2FyZENsaWNrKHIsIGMpXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgPHRhYmxlIGNsYXNzPVwibm90ZUdyaWRcIj5cbiAgICAgICAgICAgIDx0ciB2LWZvcj1cIihub3RlUm93LCBucikgaW4gc3F1YXJlLm5vdGVzXCI+XG4gICAgICAgICAgICAgIDx0ZCB2LWZvcj1cIihub3RlLCBuYykgaW4gbm90ZVJvd1wiIHYtYmluZDpjbGFzcz1cInNxdWFyZS5nZXROb3RlQ2xhc3NlcyhuciwgbmMpXCIgOmtleT1cIm5jXCI+XG4gICAgICAgICAgICAgICAge3sgc3F1YXJlLmdldE5vdGUobnIsIG5jKSB9fVxuICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgPC9saT5cbjwvdWw+XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3\n')},function(module,exports,__webpack_require__){eval('var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c("div", { staticClass: "sudokuInput" }, [\n    _c("form", { staticClass: "modeSelect" }, [\n      _c("input", {\n        directives: [\n          {\n            name: "model",\n            rawName: "v-model",\n            value: _vm.state.guessMode,\n            expression: "state.guessMode"\n          }\n        ],\n        attrs: { type: "radio", id: "solveMode", value: "true" },\n        domProps: { checked: _vm._q(_vm.state.guessMode, "true") },\n        on: {\n          change: function($event) {\n            return _vm.$set(_vm.state, "guessMode", "true")\n          }\n        }\n      }),\n      _vm._v(" "),\n      _c("label", { attrs: { for: "solveMode" } }, [_vm._v(" Solve Square ")]),\n      _vm._v(" "),\n      _c("input", {\n        directives: [\n          {\n            name: "model",\n            rawName: "v-model",\n            value: _vm.state.guessMode,\n            expression: "state.guessMode"\n          }\n        ],\n        attrs: { type: "radio", id: "hintMode", value: "false" },\n        domProps: { checked: _vm._q(_vm.state.guessMode, "false") },\n        on: {\n          change: function($event) {\n            return _vm.$set(_vm.state, "guessMode", "false")\n          }\n        }\n      }),\n      _vm._v(" "),\n      _c("label", { attrs: { for: "hintMode" } }, [\n        _vm._v(" Set Square Hints ")\n      ])\n    ]),\n    _vm._v(" "),\n    _c(\n      "table",\n      { staticClass: "buttonGrid" },\n      _vm._l(_vm.numpadButtons, function(buttonRow, r) {\n        return _c(\n          "tr",\n          { key: r },\n          _vm._l(buttonRow, function(button, c) {\n            return _c("td", { key: c }, [\n              _c(\n                "button",\n                {\n                  class: button.classes,\n                  on: {\n                    click: function($event) {\n                      return _vm.state.onNumpadClick(button.value, r, c)\n                    }\n                  }\n                },\n                [_vm._v("\\n          " + _vm._s(button.value) + "\\n        ")]\n              )\n            ])\n          }),\n          0\n        )\n      }),\n      0\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nmodule.exports = function (_exports) {\n  var options = typeof _exports === \'function\'\n    ? _exports.options\n    : _exports\n  options.render = render\n  options.staticRenderFns = staticRenderFns\n  if (false) {}\n  return _exports\n}\nvar api = null\nif (false) {}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9odG1sL1N1ZG9rdUlucHV0Lmh0bWw/NzY3OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiPGRpdiBjbGFzcz1cInN1ZG9rdUlucHV0XCI+XG4gIDxmb3JtIGNsYXNzPVwibW9kZVNlbGVjdFwiPlxuICAgIDxpbnB1dCB0eXBlPVwicmFkaW9cIiBpZD1cInNvbHZlTW9kZVwiIHYtbW9kZWw9XCJzdGF0ZS5ndWVzc01vZGVcIiB2YWx1ZT1cInRydWVcIj5cbiAgICA8bGFiZWwgZm9yPVwic29sdmVNb2RlXCI+IFNvbHZlIFNxdWFyZSA8L2xhYmVsPlxuXG4gICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiIGlkPVwiaGludE1vZGVcIiB2LW1vZGVsPVwic3RhdGUuZ3Vlc3NNb2RlXCIgdmFsdWU9XCJmYWxzZVwiPlxuICAgIDxsYWJlbCBmb3I9XCJoaW50TW9kZVwiPiBTZXQgU3F1YXJlIEhpbnRzIDwvbGFiZWw+XG4gIDwvZm9ybT5cblxuICA8dGFibGUgY2xhc3M9XCJidXR0b25HcmlkXCI+XG4gICAgPHRyIHYtZm9yPVwiKGJ1dHRvblJvdywgcikgaW4gbnVtcGFkQnV0dG9uc1wiIDprZXk9XCJyXCI+XG4gICAgICA8dGQgdi1mb3I9XCIoYnV0dG9uLCBjKSBpbiBidXR0b25Sb3dcIiA6a2V5PVwiY1wiPlxuICAgICAgICA8YnV0dG9uIHYtYmluZDpjbGFzcz1cImJ1dHRvbi5jbGFzc2VzXCIgdi1vbjpjbGljaz1cInN0YXRlLm9uTnVtcGFkQ2xpY2soYnV0dG9uLnZhbHVlLCByLCBjKVwiPlxuICAgICAgICAgIHt7IGJ1dHRvbi52YWx1ZSB9fVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvdGQ+XG4gICAgPC90cj5cbiAgPC90YWJsZT5cbjwvZGl2PlxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n')},function(module,exports,__webpack_require__){eval('var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c("div", { attrs: { id: "app" } }, [\n    _c(\n      "div",\n      { staticClass: "sudokuSection" },\n      [\n        _c("sudoku-input", { attrs: { state: _vm.state } }),\n        _vm._v(" "),\n        _c("sudoku-grid", {\n          attrs: {\n            state: _vm.state,\n            "initial-square-data": _vm.initialSquareData\n          }\n        }),\n        _vm._v(" "),\n        _c("sudoku-checker", { attrs: { state: _vm.state } })\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nmodule.exports = function (_exports) {\n  var options = typeof _exports === \'function\'\n    ? _exports.options\n    : _exports\n  options.render = render\n  options.staticRenderFns = staticRenderFns\n  if (false) {}\n  return _exports\n}\nvar api = null\nif (false) {}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9odG1sL1N1ZG9rdUdhbWUuaHRtbD82OGQyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyI8ZGl2IGlkPVwiYXBwXCI+XG4gIDxkaXYgY2xhc3M9XCJzdWRva3VTZWN0aW9uXCI+XG4gICAgPHN1ZG9rdS1pbnB1dCA6c3RhdGU9XCJzdGF0ZVwiLz5cbiAgICA8c3Vkb2t1LWdyaWQgOnN0YXRlPVwic3RhdGVcIiA6aW5pdGlhbC1zcXVhcmUtZGF0YT1cImluaXRpYWxTcXVhcmVEYXRhXCIvPlxuICAgIDxzdWRva3UtY2hlY2tlciA6c3RhdGU9XCJzdGF0ZVwiLz5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5\n')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||\n            (typeof self !== "undefined" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(7);\n// On some exotic environments, it\'s not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||\n                       (typeof global !== "undefined" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||\n                         (typeof global !== "undefined" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(1)))\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdGltZXJzLWJyb3dzZXJpZnkvbWFpbi5qcz81MTE4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQSxtQkFBTyxDQUFDLENBQWM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc2NvcGUgPSAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwpIHx8XG4gICAgICAgICAgICAodHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgJiYgc2VsZikgfHxcbiAgICAgICAgICAgIHdpbmRvdztcbnZhciBhcHBseSA9IEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseTtcblxuLy8gRE9NIEFQSXMsIGZvciBjb21wbGV0ZW5lc3NcblxuZXhwb3J0cy5zZXRUaW1lb3V0ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldFRpbWVvdXQsIHNjb3BlLCBhcmd1bWVudHMpLCBjbGVhclRpbWVvdXQpO1xufTtcbmV4cG9ydHMuc2V0SW50ZXJ2YWwgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0SW50ZXJ2YWwsIHNjb3BlLCBhcmd1bWVudHMpLCBjbGVhckludGVydmFsKTtcbn07XG5leHBvcnRzLmNsZWFyVGltZW91dCA9XG5leHBvcnRzLmNsZWFySW50ZXJ2YWwgPSBmdW5jdGlvbih0aW1lb3V0KSB7XG4gIGlmICh0aW1lb3V0KSB7XG4gICAgdGltZW91dC5jbG9zZSgpO1xuICB9XG59O1xuXG5mdW5jdGlvbiBUaW1lb3V0KGlkLCBjbGVhckZuKSB7XG4gIHRoaXMuX2lkID0gaWQ7XG4gIHRoaXMuX2NsZWFyRm4gPSBjbGVhckZuO1xufVxuVGltZW91dC5wcm90b3R5cGUudW5yZWYgPSBUaW1lb3V0LnByb3RvdHlwZS5yZWYgPSBmdW5jdGlvbigpIHt9O1xuVGltZW91dC5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5fY2xlYXJGbi5jYWxsKHNjb3BlLCB0aGlzLl9pZCk7XG59O1xuXG4vLyBEb2VzIG5vdCBzdGFydCB0aGUgdGltZSwganVzdCBzZXRzIHVwIHRoZSBtZW1iZXJzIG5lZWRlZC5cbmV4cG9ydHMuZW5yb2xsID0gZnVuY3Rpb24oaXRlbSwgbXNlY3MpIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuICBpdGVtLl9pZGxlVGltZW91dCA9IG1zZWNzO1xufTtcblxuZXhwb3J0cy51bmVucm9sbCA9IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuICBpdGVtLl9pZGxlVGltZW91dCA9IC0xO1xufTtcblxuZXhwb3J0cy5fdW5yZWZBY3RpdmUgPSBleHBvcnRzLmFjdGl2ZSA9IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuXG4gIHZhciBtc2VjcyA9IGl0ZW0uX2lkbGVUaW1lb3V0O1xuICBpZiAobXNlY3MgPj0gMCkge1xuICAgIGl0ZW0uX2lkbGVUaW1lb3V0SWQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uIG9uVGltZW91dCgpIHtcbiAgICAgIGlmIChpdGVtLl9vblRpbWVvdXQpXG4gICAgICAgIGl0ZW0uX29uVGltZW91dCgpO1xuICAgIH0sIG1zZWNzKTtcbiAgfVxufTtcblxuLy8gc2V0aW1tZWRpYXRlIGF0dGFjaGVzIGl0c2VsZiB0byB0aGUgZ2xvYmFsIG9iamVjdFxucmVxdWlyZShcInNldGltbWVkaWF0ZVwiKTtcbi8vIE9uIHNvbWUgZXhvdGljIGVudmlyb25tZW50cywgaXQncyBub3QgY2xlYXIgd2hpY2ggb2JqZWN0IGBzZXRpbW1lZGlhdGVgIHdhc1xuLy8gYWJsZSB0byBpbnN0YWxsIG9udG8uICBTZWFyY2ggZWFjaCBwb3NzaWJpbGl0eSBpbiB0aGUgc2FtZSBvcmRlciBhcyB0aGVcbi8vIGBzZXRpbW1lZGlhdGVgIGxpYnJhcnkuXG5leHBvcnRzLnNldEltbWVkaWF0ZSA9ICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBzZWxmLnNldEltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsLnNldEltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMgJiYgdGhpcy5zZXRJbW1lZGlhdGUpO1xuZXhwb3J0cy5jbGVhckltbWVkaWF0ZSA9ICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBzZWxmLmNsZWFySW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbC5jbGVhckltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAodGhpcyAmJiB0aGlzLmNsZWFySW1tZWRpYXRlKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    "use strict";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== "function") {\n        callback = new Function("" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."\n        // So if we\'re currently running a task, we\'ll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // "too much recursion" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can\'t be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage("", "*");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = "setImmediate$" + Math.random() + "$";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === "string" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener("message", onGlobalMessage, false);\n        } else {\n            global.attachEvent("onmessage", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, "*");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it\'s been called.\n            var script = doc.createElement("script");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don\'t get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === "[object process]") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && "onreadystatechange" in doc.createElement("script")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(1), __webpack_require__(8)))\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n')},function(module,exports){eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL21haW4uc2Nzcz8xZWEzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/encoder.ts\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar SquareData = function SquareData(value, hint) {\n  _classCallCheck(this, SquareData);\n\n  this.hint = false;\n  this.value = 0;\n  this.value = value;\n  this.hint = hint;\n};\nvar Encoder =\n/*#__PURE__*/\nfunction () {\n  function Encoder() {\n    _classCallCheck(this, Encoder);\n\n    this.version = 1;\n  }\n\n  _createClass(Encoder, [{\n    key: "encode",\n    value: function encode(squareData) {\n      if (!squareData) {\n        squareData = Encoder.defaultData;\n      }\n\n      var res = ["".concat(String.fromCharCode(97 + this.version))];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = squareData[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var row = _step.value;\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = row[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var square = _step2.value;\n              var intval = square.hint ? 1 : 0;\n              var encodedValue = String.fromCharCode(97 + intval * 10 + square.value);\n              res.push("".concat(encodedValue));\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return res.join("");\n    }\n  }]);\n\n  return Encoder;\n}();\nEncoder.defaultData = [[{\n  "value": 2,\n  "hint": true\n}, {\n  "value": 4,\n  "hint": true\n}, {\n  "value": 6,\n  "hint": false\n}, {\n  "value": 8,\n  "hint": false\n}, {\n  "value": 5,\n  "hint": false\n}, {\n  "value": 7,\n  "hint": true\n}, {\n  "value": 9,\n  "hint": false\n}, {\n  "value": 1,\n  "hint": false\n}, {\n  "value": 3,\n  "hint": false\n}], [{\n  "value": 1,\n  "hint": true\n}, {\n  "value": 8,\n  "hint": true\n}, {\n  "value": 9,\n  "hint": true\n}, {\n  "value": 6,\n  "hint": false\n}, {\n  "value": 4,\n  "hint": false\n}, {\n  "value": 3,\n  "hint": false\n}, {\n  "value": 2,\n  "hint": true\n}, {\n  "value": 7,\n  "hint": true\n}, {\n  "value": 5,\n  "hint": true\n}], [{\n  "value": 5,\n  "hint": true\n}, {\n  "value": 7,\n  "hint": false\n}, {\n  "value": 3,\n  "hint": true\n}, {\n  "value": 2,\n  "hint": false\n}, {\n  "value": 9,\n  "hint": false\n}, {\n  "value": 1,\n  "hint": true\n}, {\n  "value": 4,\n  "hint": true\n}, {\n  "value": 8,\n  "hint": false\n}, {\n  "value": 6,\n  "hint": false\n}], [{\n  "value": 4,\n  "hint": false\n}, {\n  "value": 1,\n  "hint": true\n}, {\n  "value": 8,\n  "hint": false\n}, {\n  "value": 3,\n  "hint": false\n}, {\n  "value": 2,\n  "hint": true\n}, {\n  "value": 9,\n  "hint": false\n}, {\n  "value": 5,\n  "hint": false\n}, {\n  "value": 6,\n  "hint": false\n}, {\n  "value": 7,\n  "hint": true\n}], [{\n  "value": 6,\n  "hint": false\n}, {\n  "value": 3,\n  "hint": false\n}, {\n  "value": 7,\n  "hint": true\n}, {\n  "value": 4,\n  "hint": false\n}, {\n  "value": 8,\n  "hint": false\n}, {\n  "value": 5,\n  "hint": false\n}, {\n  "value": 1,\n  "hint": false\n}, {\n  "value": 2,\n  "hint": true\n}, {\n  "value": 9,\n  "hint": false\n}], [{\n  "value": 9,\n  "hint": true\n}, {\n  "value": 5,\n  "hint": true\n}, {\n  "value": 2,\n  "hint": false\n}, {\n  "value": 1,\n  "hint": false\n}, {\n  "value": 7,\n  "hint": false\n}, {\n  "value": 6,\n  "hint": false\n}, {\n  "value": 3,\n  "hint": true\n}, {\n  "value": 4,\n  "hint": true\n}, {\n  "value": 8,\n  "hint": false\n}], [{\n  "value": 7,\n  "hint": true\n}, {\n  "value": 6,\n  "hint": false\n}, {\n  "value": 4,\n  "hint": true\n}, {\n  "value": 5,\n  "hint": false\n}, {\n  "value": 3,\n  "hint": false\n}, {\n  "value": 2,\n  "hint": true\n}, {\n  "value": 8,\n  "hint": true\n}, {\n  "value": 9,\n  "hint": true\n}, {\n  "value": 1,\n  "hint": false\n}], [{\n  "value": 3,\n  "hint": true\n}, {\n  "value": 2,\n  "hint": false\n}, {\n  "value": 1,\n  "hint": false\n}, {\n  "value": 9,\n  "hint": false\n}, {\n  "value": 6,\n  "hint": false\n}, {\n  "value": 8,\n  "hint": true\n}, {\n  "value": 7,\n  "hint": false\n}, {\n  "value": 5,\n  "hint": true\n}, {\n  "value": 4,\n  "hint": false\n}], [{\n  "value": 8,\n  "hint": true\n}, {\n  "value": 9,\n  "hint": false\n}, {\n  "value": 5,\n  "hint": true\n}, {\n  "value": 7,\n  "hint": true\n}, {\n  "value": 1,\n  "hint": true\n}, {\n  "value": 4,\n  "hint": true\n}, {\n  "value": 6,\n  "hint": true\n}, {\n  "value": 3,\n  "hint": false\n}, {\n  "value": 2,\n  "hint": false\n}]];\n// CONCATENATED MODULE: ./src/decoder.ts\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction decoder_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction decoder_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction decoder_createClass(Constructor, protoProps, staticProps) { if (protoProps) decoder_defineProperties(Constructor.prototype, protoProps); if (staticProps) decoder_defineProperties(Constructor, staticProps); return Constructor; }\n\n\nvar decoder_Decoder =\n/*#__PURE__*/\nfunction () {\n  function Decoder() {\n    decoder_classCallCheck(this, Decoder);\n  }\n\n  decoder_createClass(Decoder, [{\n    key: "decode",\n    value: function decode(encodedData) {\n      // default the encoded data.\n      if (!encodedData || encodedData === "") {\n        encodedData = Decoder.defaultData;\n      }\n\n      var encodingVersion = encodedData[0].charCodeAt(0) - 97;\n\n      if (encodingVersion === 1) {\n        var result = _toConsumableArray(Array(Decoder.gridLength).keys()).map(function () {\n          return _toConsumableArray(Array(Decoder.gridLength).fill(new SquareData(0, false)));\n        });\n\n        for (var i = 1; i < encodedData.length; i++) {\n          var row = Math.floor((i - 1) / Decoder.gridLength);\n          var col = (i - 1) % Decoder.gridLength; // current encoding is the value of the square plus ten times the hint value,\n          // to make a two-digit number from 01-19. this is turned into an ASCII\n          // character for URL encoding.\n\n          var decodedValue = encodedData[i].charCodeAt(0) - 97;\n          var isHintNum = Math.floor(decodedValue / 10);\n          var isHint = isHintNum === 1;\n          var value = Number(decodedValue - 10 * isHintNum);\n          result[row][col] = new SquareData(value, isHint);\n        }\n\n        return result;\n      }\n\n      return null;\n    }\n  }]);\n\n  return Decoder;\n}();\ndecoder_Decoder.defaultData = "bmogifrjbdlstgedmrpphncjloigelidmjfgrgdreifbmjtpcbhgnoirgofdmstbncbjgshpesjprloqdc";\ndecoder_Decoder.gridLength = 9;\n// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.min.js\nvar vue_runtime_min = __webpack_require__(0);\nvar vue_runtime_min_default = /*#__PURE__*/__webpack_require__.n(vue_runtime_min);\n\n// CONCATENATED MODULE: ./node_modules/vue-class-component/dist/vue-class-component.esm.js\n/**\n  * vue-class-component v7.1.0\n  * (c) 2015-present Evan You\n  * @license MIT\n  */\n\n\n// The rational behind the verbose Reflect-feature check below is the fact that there are polyfills\n// which add an implementation for Reflect.defineMetadata but not for Reflect.getOwnMetadataKeys.\n// Without this check consumers will encounter hard to track down runtime errors.\nvar reflectionIsSupported = typeof Reflect !== \'undefined\' && Reflect.defineMetadata && Reflect.getOwnMetadataKeys;\nfunction copyReflectionMetadata(to, from) {\n    forwardMetadata(to, from);\n    Object.getOwnPropertyNames(from.prototype).forEach(function (key) {\n        forwardMetadata(to.prototype, from.prototype, key);\n    });\n    Object.getOwnPropertyNames(from).forEach(function (key) {\n        forwardMetadata(to, from, key);\n    });\n}\nfunction forwardMetadata(to, from, propertyKey) {\n    var metaKeys = propertyKey\n        ? Reflect.getOwnMetadataKeys(from, propertyKey)\n        : Reflect.getOwnMetadataKeys(from);\n    metaKeys.forEach(function (metaKey) {\n        var metadata = propertyKey\n            ? Reflect.getOwnMetadata(metaKey, from, propertyKey)\n            : Reflect.getOwnMetadata(metaKey, from);\n        if (propertyKey) {\n            Reflect.defineMetadata(metaKey, metadata, to, propertyKey);\n        }\n        else {\n            Reflect.defineMetadata(metaKey, metadata, to);\n        }\n    });\n}\n\nvar fakeArray = { __proto__: [] };\nvar hasProto = fakeArray instanceof Array;\nfunction createDecorator(factory) {\n    return function (target, key, index) {\n        var Ctor = typeof target === \'function\'\n            ? target\n            : target.constructor;\n        if (!Ctor.__decorators__) {\n            Ctor.__decorators__ = [];\n        }\n        if (typeof index !== \'number\') {\n            index = undefined;\n        }\n        Ctor.__decorators__.push(function (options) { return factory(options, key, index); });\n    };\n}\nfunction mixins() {\n    var Ctors = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        Ctors[_i] = arguments[_i];\n    }\n    return vue_runtime_min_default.a.extend({ mixins: Ctors });\n}\nfunction isPrimitive(value) {\n    var type = typeof value;\n    return value == null || (type !== \'object\' && type !== \'function\');\n}\nfunction warn(message) {\n    if (typeof console !== \'undefined\') {\n        console.warn(\'[vue-class-component] \' + message);\n    }\n}\n\nfunction collectDataFromConstructor(vm, Component) {\n    // override _init to prevent to init as Vue instance\n    var originalInit = Component.prototype._init;\n    Component.prototype._init = function () {\n        var _this = this;\n        // proxy to actual vm\n        var keys = Object.getOwnPropertyNames(vm);\n        // 2.2.0 compat (props are no longer exposed as self properties)\n        if (vm.$options.props) {\n            for (var key in vm.$options.props) {\n                if (!vm.hasOwnProperty(key)) {\n                    keys.push(key);\n                }\n            }\n        }\n        keys.forEach(function (key) {\n            if (key.charAt(0) !== \'_\') {\n                Object.defineProperty(_this, key, {\n                    get: function () { return vm[key]; },\n                    set: function (value) { vm[key] = value; },\n                    configurable: true\n                });\n            }\n        });\n    };\n    // should be acquired class property values\n    var data = new Component();\n    // restore original _init to avoid memory leak (#209)\n    Component.prototype._init = originalInit;\n    // create plain data object\n    var plainData = {};\n    Object.keys(data).forEach(function (key) {\n        if (data[key] !== undefined) {\n            plainData[key] = data[key];\n        }\n    });\n    if (false) {}\n    return plainData;\n}\n\nvar $internalHooks = [\n    \'data\',\n    \'beforeCreate\',\n    \'created\',\n    \'beforeMount\',\n    \'mounted\',\n    \'beforeDestroy\',\n    \'destroyed\',\n    \'beforeUpdate\',\n    \'updated\',\n    \'activated\',\n    \'deactivated\',\n    \'render\',\n    \'errorCaptured\',\n    \'serverPrefetch\' // 2.6\n];\nfunction componentFactory(Component, options) {\n    if (options === void 0) { options = {}; }\n    options.name = options.name || Component._componentTag || Component.name;\n    // prototype props.\n    var proto = Component.prototype;\n    Object.getOwnPropertyNames(proto).forEach(function (key) {\n        if (key === \'constructor\') {\n            return;\n        }\n        // hooks\n        if ($internalHooks.indexOf(key) > -1) {\n            options[key] = proto[key];\n            return;\n        }\n        var descriptor = Object.getOwnPropertyDescriptor(proto, key);\n        if (descriptor.value !== void 0) {\n            // methods\n            if (typeof descriptor.value === \'function\') {\n                (options.methods || (options.methods = {}))[key] = descriptor.value;\n            }\n            else {\n                // typescript decorated data\n                (options.mixins || (options.mixins = [])).push({\n                    data: function () {\n                        var _a;\n                        return _a = {}, _a[key] = descriptor.value, _a;\n                    }\n                });\n            }\n        }\n        else if (descriptor.get || descriptor.set) {\n            // computed properties\n            (options.computed || (options.computed = {}))[key] = {\n                get: descriptor.get,\n                set: descriptor.set\n            };\n        }\n    });\n    (options.mixins || (options.mixins = [])).push({\n        data: function () {\n            return collectDataFromConstructor(this, Component);\n        }\n    });\n    // decorate options\n    var decorators = Component.__decorators__;\n    if (decorators) {\n        decorators.forEach(function (fn) { return fn(options); });\n        delete Component.__decorators__;\n    }\n    // find super\n    var superProto = Object.getPrototypeOf(Component.prototype);\n    var Super = superProto instanceof vue_runtime_min_default.a\n        ? superProto.constructor\n        : vue_runtime_min_default.a;\n    var Extended = Super.extend(options);\n    forwardStaticMembers(Extended, Component, Super);\n    if (reflectionIsSupported) {\n        copyReflectionMetadata(Extended, Component);\n    }\n    return Extended;\n}\nvar reservedPropertyNames = [\n    // Unique id\n    \'cid\',\n    // Super Vue constructor\n    \'super\',\n    // Component options that will be used by the component\n    \'options\',\n    \'superOptions\',\n    \'extendOptions\',\n    \'sealedOptions\',\n    // Private assets\n    \'component\',\n    \'directive\',\n    \'filter\'\n];\nvar shouldIgnore = {\n    prototype: true,\n    arguments: true,\n    callee: true,\n    caller: true\n};\nfunction forwardStaticMembers(Extended, Original, Super) {\n    // We have to use getOwnPropertyNames since Babel registers methods as non-enumerable\n    Object.getOwnPropertyNames(Original).forEach(function (key) {\n        // Skip the properties that should not be overwritten\n        if (shouldIgnore[key]) {\n            return;\n        }\n        // Some browsers does not allow reconfigure built-in properties\n        var extendedDescriptor = Object.getOwnPropertyDescriptor(Extended, key);\n        if (extendedDescriptor && !extendedDescriptor.configurable) {\n            return;\n        }\n        var descriptor = Object.getOwnPropertyDescriptor(Original, key);\n        // If the user agent does not support `__proto__` or its family (IE <= 10),\n        // the sub class properties may be inherited properties from the super class in TypeScript.\n        // We need to exclude such properties to prevent to overwrite\n        // the component options object which stored on the extended constructor (See #192).\n        // If the value is a referenced value (object or function),\n        // we can check equality of them and exclude it if they have the same reference.\n        // If it is a primitive value, it will be forwarded for safety.\n        if (!hasProto) {\n            // Only `cid` is explicitly exluded from property forwarding\n            // because we cannot detect whether it is a inherited property or not\n            // on the no `__proto__` environment even though the property is reserved.\n            if (key === \'cid\') {\n                return;\n            }\n            var superDescriptor = Object.getOwnPropertyDescriptor(Super, key);\n            if (!isPrimitive(descriptor.value) &&\n                superDescriptor &&\n                superDescriptor.value === descriptor.value) {\n                return;\n            }\n        }\n        // Warn if the users manually declare reserved properties\n        if (false) {}\n        Object.defineProperty(Extended, key, descriptor);\n    });\n}\n\nfunction vue_class_component_esm_Component(options) {\n    if (typeof options === \'function\') {\n        return componentFactory(options);\n    }\n    return function (Component) {\n        return componentFactory(Component, options);\n    };\n}\nvue_class_component_esm_Component.registerHooks = function registerHooks(keys) {\n    $internalHooks.push.apply($internalHooks, keys);\n};\n\n/* harmony default export */ var vue_class_component_esm = (vue_class_component_esm_Component);\n\n\n// CONCATENATED MODULE: ./node_modules/vue-property-decorator/lib/vue-property-decorator.js\n/** vue-property-decorator verson 8.2.1 MIT LICENSE copyright 2019 kaorun343 */\n/// <reference types=\'reflect-metadata\'/>\n\n\n\n\n/** Used for keying reactive provide/inject properties */\nvar reactiveInjectKey = \'__reactiveInject__\';\n/**\n * decorator of an inject\n * @param from key\n * @return PropertyDecorator\n */\nfunction Inject(options) {\n    return createDecorator(function (componentOptions, key) {\n        if (typeof componentOptions.inject === \'undefined\') {\n            componentOptions.inject = {};\n        }\n        if (!Array.isArray(componentOptions.inject)) {\n            componentOptions.inject[key] = options || key;\n        }\n    });\n}\n/**\n * decorator of a reactive inject\n * @param from key\n * @return PropertyDecorator\n */\nfunction InjectReactive(options) {\n    return createDecorator(function (componentOptions, key) {\n        if (typeof componentOptions.inject === \'undefined\') {\n            componentOptions.inject = {};\n        }\n        if (!Array.isArray(componentOptions.inject)) {\n            var fromKey_1 = !!options ? options.from || options : key;\n            var defaultVal_1 = (!!options && options.default) || undefined;\n            if (!componentOptions.computed)\n                componentOptions.computed = {};\n            componentOptions.computed[key] = function () {\n                var obj = this[reactiveInjectKey];\n                return obj ? obj[fromKey_1] : defaultVal_1;\n            };\n            componentOptions.inject[reactiveInjectKey] = reactiveInjectKey;\n        }\n    });\n}\n/**\n * decorator of a provide\n * @param key key\n * @return PropertyDecorator | void\n */\nfunction Provide(key) {\n    return createDecorator(function (componentOptions, k) {\n        var provide = componentOptions.provide;\n        if (typeof provide !== \'function\' || !provide.managed) {\n            var original_1 = componentOptions.provide;\n            provide = componentOptions.provide = function () {\n                var rv = Object.create((typeof original_1 === \'function\' ? original_1.call(this) : original_1) ||\n                    null);\n                for (var i in provide.managed)\n                    rv[provide.managed[i]] = this[i];\n                return rv;\n            };\n            provide.managed = {};\n        }\n        provide.managed[k] = key || k;\n    });\n}\n/**\n * decorator of a reactive provide\n * @param key key\n * @return PropertyDecorator | void\n */\nfunction ProvideReactive(key) {\n    return createDecorator(function (componentOptions, k) {\n        var provide = componentOptions.provide;\n        if (typeof provide !== \'function\' || !provide.managed) {\n            var original_2 = componentOptions.provide;\n            provide = componentOptions.provide = function () {\n                var _this = this;\n                var rv = Object.create((typeof original_2 === \'function\' ? original_2.call(this) : original_2) ||\n                    null);\n                rv[reactiveInjectKey] = {};\n                var _loop_1 = function (i) {\n                    rv[provide.managed[i]] = this_1[i]; // Duplicates the behavior of `@Provide`\n                    Object.defineProperty(rv[reactiveInjectKey], provide.managed[i], {\n                        enumerable: true,\n                        get: function () { return _this[i]; },\n                    });\n                };\n                var this_1 = this;\n                for (var i in provide.managed) {\n                    _loop_1(i);\n                }\n                return rv;\n            };\n            provide.managed = {};\n        }\n        provide.managed[k] = key || k;\n    });\n}\n/** @see {@link https://github.com/vuejs/vue-class-component/blob/master/src/reflect.ts} */\nvar reflectMetadataIsSupported = typeof Reflect !== \'undefined\' && typeof Reflect.getMetadata !== \'undefined\';\nfunction applyMetadata(options, target, key) {\n    if (reflectMetadataIsSupported) {\n        if (!Array.isArray(options) &&\n            typeof options !== \'function\' &&\n            typeof options.type === \'undefined\') {\n            options.type = Reflect.getMetadata(\'design:type\', target, key);\n        }\n    }\n}\n/**\n * decorator of model\n * @param  event event name\n * @param options options\n * @return PropertyDecorator\n */\nfunction Model(event, options) {\n    if (options === void 0) { options = {}; }\n    return function (target, key) {\n        applyMetadata(options, target, key);\n        createDecorator(function (componentOptions, k) {\n            ;\n            (componentOptions.props || (componentOptions.props = {}))[k] = options;\n            componentOptions.model = { prop: k, event: event || k };\n        })(target, key);\n    };\n}\n/**\n * decorator of a prop\n * @param  options the options for the prop\n * @return PropertyDecorator | void\n */\nfunction Prop(options) {\n    if (options === void 0) { options = {}; }\n    return function (target, key) {\n        applyMetadata(options, target, key);\n        createDecorator(function (componentOptions, k) {\n            ;\n            (componentOptions.props || (componentOptions.props = {}))[k] = options;\n        })(target, key);\n    };\n}\n/**\n * decorator of a synced prop\n * @param propName the name to interface with from outside, must be different from decorated property\n * @param options the options for the synced prop\n * @return PropertyDecorator | void\n */\nfunction PropSync(propName, options) {\n    if (options === void 0) { options = {}; }\n    // @ts-ignore\n    return function (target, key) {\n        applyMetadata(options, target, key);\n        createDecorator(function (componentOptions, k) {\n            ;\n            (componentOptions.props || (componentOptions.props = {}))[propName] = options;\n            (componentOptions.computed || (componentOptions.computed = {}))[k] = {\n                get: function () {\n                    return this[propName];\n                },\n                set: function (value) {\n                    // @ts-ignore\n                    this.$emit("update:" + propName, value);\n                },\n            };\n        })(target, key);\n    };\n}\n/**\n * decorator of a watch function\n * @param  path the path or the expression to observe\n * @param  WatchOption\n * @return MethodDecorator\n */\nfunction Watch(path, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.deep, deep = _a === void 0 ? false : _a, _b = options.immediate, immediate = _b === void 0 ? false : _b;\n    return createDecorator(function (componentOptions, handler) {\n        if (typeof componentOptions.watch !== \'object\') {\n            componentOptions.watch = Object.create(null);\n        }\n        var watch = componentOptions.watch;\n        if (typeof watch[path] === \'object\' && !Array.isArray(watch[path])) {\n            watch[path] = [watch[path]];\n        }\n        else if (typeof watch[path] === \'undefined\') {\n            watch[path] = [];\n        }\n        watch[path].push({ handler: handler, deep: deep, immediate: immediate });\n    });\n}\n// Code copied from Vue/src/shared/util.js\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = function (str) { return str.replace(hyphenateRE, \'-$1\').toLowerCase(); };\n/**\n * decorator of an event-emitter function\n * @param  event The name of the event\n * @return MethodDecorator\n */\nfunction Emit(event) {\n    return function (_target, key, descriptor) {\n        key = hyphenate(key);\n        var original = descriptor.value;\n        descriptor.value = function emitter() {\n            var _this = this;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var emit = function (returnValue) {\n                if (returnValue !== undefined)\n                    args.unshift(returnValue);\n                _this.$emit.apply(_this, [event || key].concat(args));\n            };\n            var returnValue = original.apply(this, args);\n            if (isPromise(returnValue)) {\n                returnValue.then(function (returnValue) {\n                    emit(returnValue);\n                });\n            }\n            else {\n                emit(returnValue);\n            }\n            return returnValue;\n        };\n    };\n}\n/**\n * decorator of a ref prop\n * @param refKey the ref key defined in template\n */\nfunction Ref(refKey) {\n    return createDecorator(function (options, key) {\n        options.computed = options.computed || {};\n        options.computed[key] = {\n            cache: false,\n            get: function () {\n                return this.$refs[refKey || key];\n            },\n        };\n    });\n}\nfunction isPromise(obj) {\n    return obj instanceof Promise || (obj && typeof obj.then === \'function\');\n}\n\n// CONCATENATED MODULE: ./src/components/ts/SudokuState.ts\nvar _dec, _class, _class2, _descriptor, _class3, _temp;\n\nfunction _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction SudokuState_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction SudokuState_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SudokuState_createClass(Constructor, protoProps, staticProps) { if (protoProps) SudokuState_defineProperties(Constructor.prototype, protoProps); if (staticProps) SudokuState_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if (\'value\' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error(\'Decorating class property failed. Please ensure that \' + \'proposal-class-properties is enabled and set to use loose mode. \' + \'To use proposal-class-properties in spec mode with decorators, wait for \' + \'the next major version of decorators in stage 2.\'); }\n\n\n\nvar SudokuState = ( // shared state between subcomponents.\n_dec = Prop(), vue_class_component_esm(_class = (_class2 = (_temp = _class3 =\n/*#__PURE__*/\nfunction (_Vue) {\n  _inherits(SudokuState, _Vue);\n\n  function SudokuState() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    SudokuState_classCallCheck(this, SudokuState);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SudokuState)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _initializerDefineProperty(_this, "minigridSize", _descriptor, _assertThisInitialized(_this));\n\n    _this.activeGridSquare = null;\n    _this.activeNumpadSquare = null;\n    _this.guessMode = "guess";\n    _this.isGuessMode = true;\n    _this.isInError = false;\n    _this.solutionState = SudokuState.SolutionType.None;\n    _this.handleGridUpdate = _this.errorVoid;\n    _this.onBoardClick = _this.errorVoid;\n\n    _this.getGridSection = function () {\n      return [];\n    };\n\n    _this.invalidateSection = _this.errorVoid;\n\n    _this.hasEmptySquares = function () {\n      return false;\n    };\n\n    _this.getDigitsToToggle = function () {\n      return [];\n    };\n\n    _this.setSquareGuessModes = _this.errorVoid;\n    _this.handleBoardNavigate = _this.errorVoid;\n    _this.resetBoard = _this.errorVoid;\n    _this.resetBoardErrors = _this.errorVoid;\n    _this.clearNumpadSquares = _this.errorVoid;\n    _this.enableNumpadSquares = _this.errorVoid;\n    _this.onNumpadClick = _this.errorVoid;\n    _this.loadNumpadValues = _this.errorVoid;\n    _this.submit = _this.errorVoid;\n    _this.checkBoard = _this.errorVoid;\n    return _this;\n  }\n\n  SudokuState_createClass(SudokuState, [{\n    key: "errorVoid",\n    value: function errorVoid() {\n      console.log("CALLED DEFAULT METHOD");\n    }\n  }]);\n\n  return SudokuState;\n}(vue_runtime_min_default.a), _class3.SectionType = Object.freeze({\n  Row: "row",\n  Column: "column",\n  Subgrid: "subgrid"\n}), _class3.SolutionType = Object.freeze({\n  None: null,\n  Invalid: "Board Invalid",\n  Incomplete: "Board Incomplete",\n  Valid: "You win!!!!!"\n}), _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "minigridSize", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\n\n// EXTERNAL MODULE: ./src/components/html/SudokuChecker.html\nvar html_SudokuChecker = __webpack_require__(2);\nvar SudokuChecker_default = /*#__PURE__*/__webpack_require__.n(html_SudokuChecker);\n\n// CONCATENATED MODULE: ./src/components/ts/SudokuChecker.ts\nvar SudokuChecker_dec, _dec2, SudokuChecker_class, SudokuChecker_class2, SudokuChecker_descriptor, SudokuChecker_temp;\n\nfunction SudokuChecker_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { SudokuChecker_typeof = function _typeof(obj) { return typeof obj; }; } else { SudokuChecker_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return SudokuChecker_typeof(obj); }\n\nfunction SudokuChecker_initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction SudokuChecker_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction SudokuChecker_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SudokuChecker_createClass(Constructor, protoProps, staticProps) { if (protoProps) SudokuChecker_defineProperties(Constructor.prototype, protoProps); if (staticProps) SudokuChecker_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction SudokuChecker_possibleConstructorReturn(self, call) { if (call && (SudokuChecker_typeof(call) === "object" || typeof call === "function")) { return call; } return SudokuChecker_assertThisInitialized(self); }\n\nfunction SudokuChecker_getPrototypeOf(o) { SudokuChecker_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return SudokuChecker_getPrototypeOf(o); }\n\nfunction SudokuChecker_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction SudokuChecker_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) SudokuChecker_setPrototypeOf(subClass, superClass); }\n\nfunction SudokuChecker_setPrototypeOf(o, p) { SudokuChecker_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return SudokuChecker_setPrototypeOf(o, p); }\n\nfunction SudokuChecker_applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if (\'value\' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction SudokuChecker_initializerWarningHelper(descriptor, context) { throw new Error(\'Decorating class property failed. Please ensure that \' + \'proposal-class-properties is enabled and set to use loose mode. \' + \'To use proposal-class-properties in spec mode with decorators, wait for \' + \'the next major version of decorators in stage 2.\'); }\n\n\n\n\n\nvar SudokuChecker_SudokuChecker = (SudokuChecker_dec = vue_class_component_esm({}), _dec2 = Prop(), SudokuChecker_default()(SudokuChecker_class = SudokuChecker_dec(SudokuChecker_class = (SudokuChecker_class2 = (SudokuChecker_temp =\n/*#__PURE__*/\nfunction (_Vue) {\n  SudokuChecker_inherits(SudokuChecker, _Vue);\n\n  function SudokuChecker() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    SudokuChecker_classCallCheck(this, SudokuChecker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = SudokuChecker_possibleConstructorReturn(this, (_getPrototypeOf2 = SudokuChecker_getPrototypeOf(SudokuChecker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    SudokuChecker_initializerDefineProperty(_this, "state", SudokuChecker_descriptor, SudokuChecker_assertThisInitialized(_this));\n\n    return _this;\n  }\n\n  SudokuChecker_createClass(SudokuChecker, [{\n    key: "mounted",\n    value: function mounted() {\n      // register callbacks.\n      this.state.checkBoard = this.checkBoard;\n      this.state.submit = this.submit;\n    } // parameters: none.\n    // returns: none.\n    // results: check board for errors, and request style changes on error rows/columns/subgrids.\n\n  }, {\n    key: "checkBoard",\n    value: function checkBoard() {\n      var sectionTypes = [SudokuState.SectionType.Row, SudokuState.SectionType.Column, SudokuState.SectionType.Subgrid];\n      var boardIsValid = true;\n\n      for (var _i = 0, _sectionTypes = sectionTypes; _i < _sectionTypes.length; _i++) {\n        var sectionType = _sectionTypes[_i];\n\n        for (var i = 0; i < this.state.minigridSize * this.state.minigridSize; i++) {\n          var section = this.state.getGridSection(sectionType, i);\n          var seen = [];\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = section[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var element = _step.value;\n\n              if (element !== 0 && seen.indexOf(element) !== -1) {\n                this.state.invalidateSection(sectionType, i);\n                boardIsValid = false;\n                break;\n              } else {\n                seen.push(element);\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }\n      }\n\n      if (!boardIsValid) {\n        this.state.isInError = true;\n      } else {\n        this.state.isInError = false;\n      }\n    }\n  }, {\n    key: "submit",\n    value: function submit() {\n      // first do an error check.\n      this.state.checkBoard();\n\n      if (this.state.isInError) {\n        this.state.solutionState = SudokuState.SolutionType.Invalid;\n        return;\n      } // do an empty squares check.\n\n\n      var boardHasEmptySquares = this.state.hasEmptySquares();\n\n      if (boardHasEmptySquares) {\n        this.state.solutionState = SudokuState.SolutionType.Incomplete;\n        return;\n      } // congrats!!\n\n\n      this.state.solutionState = SudokuState.SolutionType.Valid;\n    }\n  }]);\n\n  return SudokuChecker;\n}(vue_runtime_min_default.a), SudokuChecker_temp), (SudokuChecker_descriptor = SudokuChecker_applyDecoratedDescriptor(SudokuChecker_class2.prototype, "state", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), SudokuChecker_class2)) || SudokuChecker_class) || SudokuChecker_class);\n\n// CONCATENATED MODULE: ./src/components/ts/SudokuSquare.ts\nvar SudokuSquare_dec, SudokuSquare_dec2, _dec3, _dec4, _dec5, SudokuSquare_class, SudokuSquare_class2, SudokuSquare_descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, SudokuSquare_class3, SudokuSquare_temp;\n\nfunction SudokuSquare_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { SudokuSquare_typeof = function _typeof(obj) { return typeof obj; }; } else { SudokuSquare_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return SudokuSquare_typeof(obj); }\n\nfunction SudokuSquare_initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction SudokuSquare_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction SudokuSquare_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SudokuSquare_createClass(Constructor, protoProps, staticProps) { if (protoProps) SudokuSquare_defineProperties(Constructor.prototype, protoProps); if (staticProps) SudokuSquare_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction SudokuSquare_possibleConstructorReturn(self, call) { if (call && (SudokuSquare_typeof(call) === "object" || typeof call === "function")) { return call; } return SudokuSquare_assertThisInitialized(self); }\n\nfunction SudokuSquare_getPrototypeOf(o) { SudokuSquare_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return SudokuSquare_getPrototypeOf(o); }\n\nfunction SudokuSquare_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction SudokuSquare_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) SudokuSquare_setPrototypeOf(subClass, superClass); }\n\nfunction SudokuSquare_setPrototypeOf(o, p) { SudokuSquare_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return SudokuSquare_setPrototypeOf(o, p); }\n\nfunction SudokuSquare_applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if (\'value\' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction SudokuSquare_initializerWarningHelper(descriptor, context) { throw new Error(\'Decorating class property failed. Please ensure that \' + \'proposal-class-properties is enabled and set to use loose mode. \' + \'To use proposal-class-properties in spec mode with decorators, wait for \' + \'the next major version of decorators in stage 2.\'); }\n\n\n\nvar SudokuSquare = (SudokuSquare_dec = Prop(), SudokuSquare_dec2 = Prop(), _dec3 = Prop(), _dec4 = Prop(), _dec5 = Prop(), vue_class_component_esm(SudokuSquare_class = (SudokuSquare_class2 = (SudokuSquare_temp = SudokuSquare_class3 =\n/*#__PURE__*/\nfunction (_Vue) {\n  SudokuSquare_inherits(SudokuSquare, _Vue);\n\n  function SudokuSquare() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    SudokuSquare_classCallCheck(this, SudokuSquare);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = SudokuSquare_possibleConstructorReturn(this, (_getPrototypeOf2 = SudokuSquare_getPrototypeOf(SudokuSquare)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    SudokuSquare_initializerDefineProperty(_this, "value", SudokuSquare_descriptor, SudokuSquare_assertThisInitialized(_this));\n\n    SudokuSquare_initializerDefineProperty(_this, "isHint", _descriptor2, SudokuSquare_assertThisInitialized(_this));\n\n    SudokuSquare_initializerDefineProperty(_this, "row", _descriptor3, SudokuSquare_assertThisInitialized(_this));\n\n    SudokuSquare_initializerDefineProperty(_this, "column", _descriptor4, SudokuSquare_assertThisInitialized(_this));\n\n    SudokuSquare_initializerDefineProperty(_this, "minigridSize", _descriptor5, SudokuSquare_assertThisInitialized(_this));\n\n    _this.isGuessMode = true;\n    _this.errorClasses = [];\n    _this.guess = null;\n    _this.notes = _this.initializeNotes();\n    _this.isActive = false;\n    return _this;\n  }\n\n  SudokuSquare_createClass(SudokuSquare, [{\n    key: "mounted",\n    value: function mounted() {} // parameters: none.\n    // returns: 2D array of notes for this square.\n    // results: none.\n\n  }, {\n    key: "initializeNotes",\n    value: function initializeNotes() {\n      var notes = [];\n\n      for (var r = 0; r < this.minigridSize; r++) {\n        var noteRow = [];\n\n        for (var c = 0; c < this.minigridSize; c++) {\n          noteRow.push(false);\n        }\n\n        notes.push(noteRow);\n      }\n\n      return notes;\n    } // used to set visibility, spacing.\n    // parameters:\n    // isGuessMode: state guess mode.\n    // value: provided value.\n    // return: none.\n    // result: guess or notes updated.\n\n  }, {\n    key: "updateValues",\n    value: function updateValues(isGuessMode, value) {\n      if (isGuessMode) {\n        if (this.guess === value) {\n          this.guess = null;\n        } else {\n          this.guess = value;\n        }\n      } else {\n        var row = Math.floor((value - 1) / 3);\n        var col = (value - 1) % 3;\n        this.notes[row][col] = !this.notes[row][col];\n      }\n    } // parameters:\n    // row: row in note grid.\n    // col: column in note grid.\n    // returns: value of note given by row and column.\n\n  }, {\n    key: "getNote",\n    value: function getNote(row, col) {\n      var noteIsSet = this.notes[row][col];\n\n      if (noteIsSet) {\n        return row * this.minigridSize + col + 1;\n      } else {\n        return " ";\n      }\n    } // parameters:\n    // row: row in note grid.\n    // col: column in note grid.\n    // returns: list of CSS classes to apply to the note in the html.\n    // result: none.\n\n  }, {\n    key: "getNoteClasses",\n    value: function getNoteClasses(row, col) {\n      var noteIsSet = this.notes[row][col];\n\n      if (noteIsSet) {\n        return ["activeNote"];\n      } else {\n        return ["inactiveNote"];\n      }\n    } // parameters:\n    // errorState: error state of cell.\n    // returns: none.\n    // result: appends to this.errorClasses, which will affect styles.\n\n  }, {\n    key: "appendToErrorState",\n    value: function appendToErrorState(errorState) {\n      this.errorClasses.push(errorState);\n    } // parameters: none.\n    // returns: none.\n    // result: resets error classes for square.\n\n  }, {\n    key: "resetErrorState",\n    value: function resetErrorState() {\n      this.errorClasses = [];\n    } // parameters: none.\n    // returns: hint if this is a hint square, otherwise the current user value.\n    // result: none.\n\n  }, {\n    key: "getUserValue",\n    value: function getUserValue() {\n      if (this.isHint) {\n        return this.value;\n      }\n\n      if (this.guess) {\n        return this.guess;\n      } else {\n        return 0;\n      }\n    } // parameters: none.\n    // returns: none.\n    // result: square guesses and note are cleared.\n\n  }, {\n    key: "clearUserValues",\n    value: function clearUserValues() {\n      if (this.isHint) {\n        return;\n      }\n\n      this.guess = null;\n\n      for (var r = 0; r < this.notes.length; r++) {\n        for (var c = 0; c < this.notes[r].length; c++) {\n          this.notes[r][c] = false;\n        }\n      }\n    } // parameters:\n    // guessMode: guess mode from up on high to set on ourselves.\n    // returns: none\n    // result: this square is in board guess mode if we don\'t have a guess,\n    //         otherwise we remain in guess mode.\n\n  }, {\n    key: "setGuessMode",\n    value: function setGuessMode(isGuessMode) {\n      if (this.guess !== null) {\n        this.isGuessMode = true;\n      } else {\n        this.isGuessMode = isGuessMode;\n      }\n    }\n  }, {\n    key: "classes",\n    get: function get() {\n      var classes = []; // mode switch - hint square (default), note square, or guess square (both user)?\n\n      if (this.isHint) {\n        classes.push("defaultFilledSquare");\n      } else if (!this.isHint && this.isGuessMode) {\n        classes.push("sudokuSquare");\n      } else if (!this.isHint && !this.isGuessMode) {\n        classes.push("noteSquare");\n      } // padding squares are every square besides the last.\n      // spacing squares are every minigridSize and have extra horizontal padding.\n\n\n      if (this.column < 8 && this.column >= 0) {\n        if ((this.column + 1) % this.minigridSize === 0) {\n          classes.push("spacerSquare");\n        } else {\n          classes.push("paddingSquare");\n        }\n      }\n\n      if (this.isActive) {\n        classes.push("activeSquare");\n      } else {\n        classes.push("inactiveSquare");\n      }\n\n      if (this.errorClasses.length > 0) {\n        classes.push("errorSquare");\n        classes = classes.concat(this.errorClasses);\n      } else {\n        classes.push("validSquare");\n      }\n\n      return classes;\n    } // error state classes.\n\n  }]);\n\n  return SudokuSquare;\n}(vue_runtime_min_default.a), SudokuSquare_class3.ErrorStates = Object.freeze({\n  LeftRow: "leftRowError",\n  CenterRow: "centerRowError",\n  RightRow: "rightRowError",\n  TopColumn: "topColumnError",\n  MiddleColumn: "middleColumnError",\n  BottomColumn: "bottomColumnError",\n  // ugh.\n  TopLeftSubgrid: "topLeftSubgridError",\n  TopCenterSubgrid: "topCenterSubgridError",\n  TopRightSubgrid: "topRightSubgridError",\n  MiddleLeftSubgrid: "middleLeftSubgridError",\n  MiddleCenterSubgrid: "middleCenterSubgridError",\n  MiddleRightSubgrid: "middleRightSubgridError",\n  BottomLeftSubgrid: "bottomLeftSubgridError",\n  BottomCenterSubgrid: "bottomCenterSubgridError",\n  BottomRightSubgrid: "bottomRightSubgridError",\n  None: "none"\n}), SudokuSquare_temp), (SudokuSquare_descriptor = SudokuSquare_applyDecoratedDescriptor(SudokuSquare_class2.prototype, "value", [SudokuSquare_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = SudokuSquare_applyDecoratedDescriptor(SudokuSquare_class2.prototype, "isHint", [SudokuSquare_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = SudokuSquare_applyDecoratedDescriptor(SudokuSquare_class2.prototype, "row", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = SudokuSquare_applyDecoratedDescriptor(SudokuSquare_class2.prototype, "column", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = SudokuSquare_applyDecoratedDescriptor(SudokuSquare_class2.prototype, "minigridSize", [_dec5], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), SudokuSquare_class2)) || SudokuSquare_class);\n\n// EXTERNAL MODULE: ./src/components/html/SudokuGrid.html\nvar html_SudokuGrid = __webpack_require__(3);\nvar SudokuGrid_default = /*#__PURE__*/__webpack_require__.n(html_SudokuGrid);\n\n// CONCATENATED MODULE: ./src/components/ts/SudokuGrid.ts\nvar SudokuGrid_dec, SudokuGrid_dec2, SudokuGrid_dec3, SudokuGrid_class, SudokuGrid_class2, SudokuGrid_descriptor, SudokuGrid_descriptor2, SudokuGrid_class3, SudokuGrid_temp;\n\nfunction SudokuGrid_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { SudokuGrid_typeof = function _typeof(obj) { return typeof obj; }; } else { SudokuGrid_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return SudokuGrid_typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction SudokuGrid_initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction SudokuGrid_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction SudokuGrid_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SudokuGrid_createClass(Constructor, protoProps, staticProps) { if (protoProps) SudokuGrid_defineProperties(Constructor.prototype, protoProps); if (staticProps) SudokuGrid_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction SudokuGrid_possibleConstructorReturn(self, call) { if (call && (SudokuGrid_typeof(call) === "object" || typeof call === "function")) { return call; } return SudokuGrid_assertThisInitialized(self); }\n\nfunction SudokuGrid_getPrototypeOf(o) { SudokuGrid_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return SudokuGrid_getPrototypeOf(o); }\n\nfunction SudokuGrid_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction SudokuGrid_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) SudokuGrid_setPrototypeOf(subClass, superClass); }\n\nfunction SudokuGrid_setPrototypeOf(o, p) { SudokuGrid_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return SudokuGrid_setPrototypeOf(o, p); }\n\nfunction SudokuGrid_applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if (\'value\' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction SudokuGrid_initializerWarningHelper(descriptor, context) { throw new Error(\'Decorating class property failed. Please ensure that \' + \'proposal-class-properties is enabled and set to use loose mode. \' + \'To use proposal-class-properties in spec mode with decorators, wait for \' + \'the next major version of decorators in stage 2.\'); }\n\n\n\n\n\n\nvar SudokuGrid_SudokuGrid = (SudokuGrid_dec = vue_class_component_esm({\n  components: {\n    "sudoku-square": SudokuSquare\n  }\n}), SudokuGrid_dec2 = Prop(), SudokuGrid_dec3 = Prop(), SudokuGrid_default()(SudokuGrid_class = SudokuGrid_dec(SudokuGrid_class = (SudokuGrid_class2 = (SudokuGrid_temp = SudokuGrid_class3 =\n/*#__PURE__*/\nfunction (_Vue) {\n  SudokuGrid_inherits(SudokuGrid, _Vue);\n\n  function SudokuGrid() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    SudokuGrid_classCallCheck(this, SudokuGrid);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = SudokuGrid_possibleConstructorReturn(this, (_getPrototypeOf2 = SudokuGrid_getPrototypeOf(SudokuGrid)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    SudokuGrid_initializerDefineProperty(_this, "initialSquareData", SudokuGrid_descriptor, SudokuGrid_assertThisInitialized(_this));\n\n    SudokuGrid_initializerDefineProperty(_this, "state", SudokuGrid_descriptor2, SudokuGrid_assertThisInitialized(_this));\n\n    _this.squareData = [];\n    return _this;\n  }\n\n  SudokuGrid_createClass(SudokuGrid, [{\n    key: "mounted",\n    // basically a constructor.\n    value: function mounted() {\n      for (var r = 0; r < this.initialSquareData.length; r++) {\n        var newRow = [];\n\n        for (var c = 0; c < this.initialSquareData[r].length; c++) {\n          newRow.push(new SudokuSquare({\n            propsData: {\n              value: this.initialSquareData[r][c].value,\n              isHint: this.initialSquareData[r][c].hint,\n              minigridSize: this.state.minigridSize,\n              row: r,\n              column: c\n            }\n          }));\n        }\n\n        this.squareData.push(newRow);\n      } // register callbacks.\n\n\n      this.state.handleGridUpdate = this.handleGridUpdate;\n      this.state.onBoardClick = this.onBoardClick;\n      this.state.getGridSection = this.getGridSection;\n      this.state.invalidateSection = this.invalidateSection;\n      this.state.hasEmptySquares = this.hasEmptySquares;\n      this.state.getDigitsToToggle = this.getDigitsToToggle;\n      this.state.handleBoardNavigate = this.handleBoardNavigate;\n      this.state.resetBoardErrors = this.resetBoardErrors;\n      this.state.resetBoard = this.resetBoard;\n      this.state.setSquareGuessModes = this.setSquareGuessModes;\n    } // METHODS\n    // parameters:\n    // row: row in sudoku board.\n    // returns: CSS classes to apply to that row.\n    // result: none.\n\n  }, {\n    key: "getRowClass",\n    value: function getRowClass(row) {\n      var classes = ["sudokuRow"];\n      var length = this.state.minigridSize * this.state.minigridSize;\n\n      if (row >= 0 && row < length - 1) {\n        if ((row + 1) % this.state.minigridSize == 0) {\n          classes.push("spacerRow");\n        } else {\n          classes.push("paddingRow");\n        }\n      }\n\n      return classes;\n    } // parameters: none.\n    // returns: current active square, or null if no such square.\n    // result: current active board square is set to inactive, if valid.\n\n  }, {\n    key: "clearCurrentActiveSquare",\n    value: function clearCurrentActiveSquare() {\n      var activeSquare = this.state.activeGridSquare; // set inactive if it\'s a valid square.\n\n      if (activeSquare) {\n        activeSquare.isActive = false;\n        var oldRow = this.squareData[activeSquare.row];\n        oldRow[activeSquare.column] = activeSquare;\n        vue_runtime_min_default.a.set(this.squareData, activeSquare.row, oldRow);\n      }\n\n      return activeSquare;\n    } // parameters:\n    // row: row of click on board.\n    // col: column of click on board.\n    // returns: none.\n    // result: updates current active square, clears numpad squares if appropriate.\n\n  }, {\n    key: "onBoardClick",\n    value: function onBoardClick(row, col) {\n      // clear existing active square and numpad squares, if square was active.\n      var oldActiveSquare = this.clearCurrentActiveSquare();\n\n      if (oldActiveSquare) {\n        this.state.clearNumpadSquares();\n      } // activate square\n\n\n      var newActiveSquare = this.squareData[row][col];\n      newActiveSquare.isActive = true;\n      this.state.activeGridSquare = newActiveSquare;\n      var newRow = this.squareData[row];\n      newRow[col] = newActiveSquare;\n      vue_runtime_min_default.a.set(this.squareData, row, newRow); // set up new numpad values.\n\n      var digits = this.state.getDigitsToToggle(row, col);\n      this.state.enableNumpadSquares(digits);\n    } // parameters:\n    // row: row of board cell.\n    // col: column of board cell.\n    // returns: the list of numpad coordinates that need to be toggled based on the current mode.\n    // result:  none.\n\n  }, {\n    key: "getDigitsToToggle",\n    value: function getDigitsToToggle(row, col) {\n      var gridSquare = this.squareData[row][col];\n\n      if (this.state.isGuessMode && gridSquare.guess === null) {\n        return [];\n      } else if (this.state.isGuessMode && gridSquare.guess !== null) {\n        return [gridSquare.guess];\n      }\n\n      var digits = [];\n\n      for (var r = 0; r < this.state.minigridSize; r++) {\n        for (var c = 0; c < this.state.minigridSize; c++) {\n          if (gridSquare.notes[r][c]) {\n            digits.push(r * this.state.minigridSize + c + 1);\n          }\n        }\n      }\n\n      return digits;\n    } // parameters:\n    // value: value to update on square.\n    // returns: none.\n    // result: specified cell has its guess or notes updated as appropriate.\n\n  }, {\n    key: "handleGridUpdate",\n    value: function handleGridUpdate(value) {\n      var activeCell = this.state.activeGridSquare;\n\n      if (activeCell) {\n        activeCell.updateValues(this.state.isGuessMode, value);\n        var row = this.squareData[activeCell.row];\n        row[activeCell.column] = activeCell;\n        vue_runtime_min_default.a.set(this.squareData, activeCell.row, row);\n      }\n    } // parameters:\n    // section_type: row/column/subgrid type to return.\n    // index: index of row or column or subgrid.\n    //        rows are indexed 0-8 top to bottom, columns 0-8 left to right,\n    //        subgrids 0-8 top to bottom left to right.\n    //        sorry,  0 - (this.minigridSize - 1)\n    // returns: coordinates into this.squareData for the matching squares.\n    // result: none.\n\n  }, {\n    key: "getCoordinates",\n    value: function getCoordinates(section_type, index) {\n      var coords = [];\n      var sectionSize = this.state.minigridSize * this.state.minigridSize;\n\n      if (section_type === SudokuState.SectionType.Row) {\n        for (var c = 0; c < sectionSize; c++) {\n          coords.push([index, c]);\n        }\n      } else if (section_type === SudokuState.SectionType.Column) {\n        for (var r = 0; r < sectionSize; r++) {\n          coords.push([r, index]);\n        }\n      } else if (section_type === SudokuState.SectionType.Subgrid) {\n        var row_coord = Math.floor(index / this.state.minigridSize);\n        var col_coord = index % this.state.minigridSize;\n        var row_start = row_coord * this.state.minigridSize;\n        var col_start = col_coord * this.state.minigridSize;\n\n        for (var _r = row_start; _r < row_start + this.state.minigridSize; _r++) {\n          for (var _c = col_start; _c < col_start + this.state.minigridSize; _c++) {\n            coords.push([_r, _c]);\n          }\n        }\n      } else {// unsupported type!\n      }\n\n      return coords;\n    } // parameters:\n    // section_type: row/column/subgrid type to return.\n    // index: index of row or column or subgrid.\n    //        rows are indexed 0-8 top to bottom, columns 0-8 left to right,\n    //        subgrids 0-8 top to bottom left to right.\n    //        sorry,  0 - (this.minigridSize - 1)\n    // returns: the values in that section.\n    // result: none.\n\n  }, {\n    key: "getGridSection",\n    value: function getGridSection(section_type, index) {\n      var _this2 = this;\n\n      var coords = this.getCoordinates(section_type, index);\n      return coords.map(function (coord) {\n        return _this2.squareData[coord[0]][coord[1]].getUserValue();\n      });\n    } // parameters:\n    // section_type: row/column/subgrid type to return.\n    // index: index of row or column or subgrid.\n    //        rows are indexed 0-8 top to bottom, columns 0-8 left to right,\n    //        subgrids 0-8 top to bottom left to right.\n    //        sorry,  0 - (this.minigridSize - 1)\n    // returns: none.\n    // result: classes in section switched to proper error classes.\n\n  }, {\n    key: "invalidateSection",\n    value: function invalidateSection(section_type, index) {\n      var length = this.state.minigridSize * this.state.minigridSize;\n      var coords = this.getCoordinates(section_type, index);\n      var states = []; // TODO is this easier with coords or equivalent?\n\n      if (section_type === SudokuState.SectionType.Row) {\n        states.push(SudokuSquare.ErrorStates.LeftRow);\n\n        for (var i = 1; i < length - 1; i++) {\n          states.push(SudokuSquare.ErrorStates.CenterRow);\n        }\n\n        states.push(SudokuSquare.ErrorStates.RightRow);\n      } else if (section_type === SudokuState.SectionType.Column) {\n        states.push(SudokuSquare.ErrorStates.TopColumn);\n\n        for (var _i = 1; _i < length - 1; _i++) {\n          states.push(SudokuSquare.ErrorStates.MiddleColumn);\n        }\n\n        states.push(SudokuSquare.ErrorStates.BottomColumn);\n      } else if (section_type === SudokuState.SectionType.Subgrid) {\n        // unsure how to do this in a less ugly way.\n        states = [SudokuSquare.ErrorStates.TopLeftSubgrid, SudokuSquare.ErrorStates.TopCenterSubgrid, SudokuSquare.ErrorStates.TopRightSubgrid, SudokuSquare.ErrorStates.MiddleLeftSubgrid, SudokuSquare.ErrorStates.MiddleCenterSubgrid, SudokuSquare.ErrorStates.MiddleRightSubgrid, SudokuSquare.ErrorStates.BottomLeftSubgrid, SudokuSquare.ErrorStates.BottomCenterSubgrid, SudokuSquare.ErrorStates.BottomRightSubgrid];\n      } else {//unsupported!\n      }\n\n      for (var _i2 = 0; _i2 < coords.length; _i2++) {\n        var _coords$_i = _slicedToArray(coords[_i2], 2),\n            row = _coords$_i[0],\n            col = _coords$_i[1];\n\n        var state = states[_i2];\n        this.squareData[row][col].appendToErrorState(state);\n        var squareRow = this.squareData[row];\n        vue_runtime_min_default.a.set(this.squareData, row, squareRow);\n      }\n    } // parameters: none.\n    // returns: none.\n    // result: reset errors on board.\n\n  }, {\n    key: "resetBoardErrors",\n    value: function resetBoardErrors() {\n      // reset squares.\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.squareData[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var row = _step.value;\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = row[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var square = _step2.value;\n              square.resetErrorState();\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        } // reset state tracking variables.\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.state.isInError = false;\n      this.state.solutionState = null;\n    } // parameters: none.\n    // returns: none.\n    // results: clear all square guesses/notes.\n\n  }, {\n    key: "resetBoard",\n    value: function resetBoard() {\n      this.state.resetBoardErrors();\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.squareData[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var row = _step3.value;\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = row[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var square = _step4.value;\n              square.clearUserValues();\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this.state.clearNumpadSquares();\n    } // parameters: none.\n    // returns: are there unguessed squares on the board?\n    // results: none.\n\n  }, {\n    key: "hasEmptySquares",\n    value: function hasEmptySquares() {\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this.squareData[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var row = _step5.value;\n          var _iteratorNormalCompletion6 = true;\n          var _didIteratorError6 = false;\n          var _iteratorError6 = undefined;\n\n          try {\n            for (var _iterator6 = row[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n              var square = _step6.value;\n\n              if (!square.isHint && square.guess === null) {\n                return true;\n              }\n            }\n          } catch (err) {\n            _didIteratorError6 = true;\n            _iteratorError6 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n                _iterator6.return();\n              }\n            } finally {\n              if (_didIteratorError6) {\n                throw _iteratorError6;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return false;\n    } // parameters:\n    // isGuessMode: state-level guess mode.\n    // returns: none.\n    // results: set guess mode on all squares.\n\n  }, {\n    key: "setSquareGuessModes",\n    value: function setSquareGuessModes(isGuessMode) {\n      var _this3 = this;\n\n      this.squareData.forEach(function (row, r) {\n        row.forEach(function (square, _) {\n          square.setGuessMode(isGuessMode);\n        });\n        vue_runtime_min_default.a.set(_this3.squareData, r, row);\n      });\n\n      if (this.state.activeGridSquare) {\n        this.state.activeGridSquare.setGuessMode(isGuessMode);\n        var square = this.state.activeGridSquare;\n        vue_runtime_min_default.a.set(this.state, "activeGridSquare", this.squareData[square.row][square.column]);\n      }\n    }\n  }, {\n    key: "handleBoardNavigate",\n    value: function handleBoardNavigate(keyboardEvent) {\n      if (!this.state.activeGridSquare) {\n        return;\n      }\n\n      var vDiff = 0;\n      var hDiff = 0;\n\n      if (keyboardEvent === SudokuGrid.ArrowType.ArrowUp) {\n        vDiff = -1;\n      } else if (keyboardEvent === SudokuGrid.ArrowType.ArrowDown) {\n        vDiff = 1;\n      } else if (keyboardEvent === SudokuGrid.ArrowType.ArrowLeft) {\n        hDiff = -1;\n      } else {\n        hDiff = 1;\n      } // stay in bounds.\n\n\n      var attemptedRow = this.boundRow(this.state.activeGridSquare.row + vDiff);\n      var attemptedCol = this.boundColumn(this.state.activeGridSquare.column + hDiff); // keep moving until we find a non-hint square.\n\n      var square = this.squareData[attemptedRow][attemptedCol];\n\n      while (square.isHint) {\n        attemptedRow = this.boundRow(attemptedRow + vDiff);\n        attemptedCol = this.boundColumn(attemptedCol + hDiff);\n        square = this.squareData[attemptedRow][attemptedCol];\n      } // "click" that square.\n\n\n      this.state.onBoardClick(attemptedRow, attemptedCol);\n    } // parameters:\n    // proposedRow: an index for a row, to be wrapped into the board.\n    // returns: wrap around as needed to keep the row in bounds.\n    // result: none.\n\n  }, {\n    key: "boundRow",\n    value: function boundRow(proposedRow) {\n      if (proposedRow < 0) {\n        return proposedRow + this.squareData.length;\n      }\n\n      return proposedRow % this.squareData.length;\n    } // parameters:\n    // proposedCol: an index for a column, to be wrapped into the board.\n    // returns: wrap around as needed to keep the column in bounds.\n    // result: none.\n\n  }, {\n    key: "boundColumn",\n    value: function boundColumn(proposedColumn) {\n      if (proposedColumn < 0) {\n        return proposedColumn + this.squareData.length;\n      }\n\n      return proposedColumn % this.squareData.length;\n    }\n  }]);\n\n  return SudokuGrid;\n}(vue_runtime_min_default.a), SudokuGrid_class3.ArrowType = Object.freeze({\n  ArrowUp: "ArrowUp",\n  ArrowDown: "ArrowDown",\n  ArrowLeft: "ArrowLeft",\n  ArrowRight: "ArrowRight"\n}), SudokuGrid_temp), (SudokuGrid_descriptor = SudokuGrid_applyDecoratedDescriptor(SudokuGrid_class2.prototype, "initialSquareData", [SudokuGrid_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), SudokuGrid_descriptor2 = SudokuGrid_applyDecoratedDescriptor(SudokuGrid_class2.prototype, "state", [SudokuGrid_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), SudokuGrid_class2)) || SudokuGrid_class) || SudokuGrid_class);\n\n// CONCATENATED MODULE: ./src/components/ts/NumpadButton.ts\nvar NumpadButton_dec, NumpadButton_dec2, NumpadButton_dec3, NumpadButton_class, NumpadButton_class2, NumpadButton_descriptor, NumpadButton_descriptor2, NumpadButton_descriptor3, NumpadButton_temp;\n\nfunction NumpadButton_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { NumpadButton_typeof = function _typeof(obj) { return typeof obj; }; } else { NumpadButton_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return NumpadButton_typeof(obj); }\n\nfunction NumpadButton_initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction NumpadButton_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction NumpadButton_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction NumpadButton_createClass(Constructor, protoProps, staticProps) { if (protoProps) NumpadButton_defineProperties(Constructor.prototype, protoProps); if (staticProps) NumpadButton_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction NumpadButton_possibleConstructorReturn(self, call) { if (call && (NumpadButton_typeof(call) === "object" || typeof call === "function")) { return call; } return NumpadButton_assertThisInitialized(self); }\n\nfunction NumpadButton_getPrototypeOf(o) { NumpadButton_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return NumpadButton_getPrototypeOf(o); }\n\nfunction NumpadButton_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction NumpadButton_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) NumpadButton_setPrototypeOf(subClass, superClass); }\n\nfunction NumpadButton_setPrototypeOf(o, p) { NumpadButton_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return NumpadButton_setPrototypeOf(o, p); }\n\nfunction NumpadButton_applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if (\'value\' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction NumpadButton_initializerWarningHelper(descriptor, context) { throw new Error(\'Decorating class property failed. Please ensure that \' + \'proposal-class-properties is enabled and set to use loose mode. \' + \'To use proposal-class-properties in spec mode with decorators, wait for \' + \'the next major version of decorators in stage 2.\'); }\n\n\n\nvar NumpadButton = (NumpadButton_dec = Prop(), NumpadButton_dec2 = Prop(), NumpadButton_dec3 = Prop(), vue_class_component_esm(NumpadButton_class = (NumpadButton_class2 = (NumpadButton_temp =\n/*#__PURE__*/\nfunction (_Vue) {\n  NumpadButton_inherits(NumpadButton, _Vue);\n\n  function NumpadButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    NumpadButton_classCallCheck(this, NumpadButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = NumpadButton_possibleConstructorReturn(this, (_getPrototypeOf2 = NumpadButton_getPrototypeOf(NumpadButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    NumpadButton_initializerDefineProperty(_this, "value", NumpadButton_descriptor, NumpadButton_assertThisInitialized(_this));\n\n    NumpadButton_initializerDefineProperty(_this, "row", NumpadButton_descriptor2, NumpadButton_assertThisInitialized(_this));\n\n    NumpadButton_initializerDefineProperty(_this, "column", NumpadButton_descriptor3, NumpadButton_assertThisInitialized(_this));\n\n    _this.isActive = false;\n    return _this;\n  }\n\n  NumpadButton_createClass(NumpadButton, [{\n    key: "updateIsActive",\n    value: function updateIsActive(isSolveMode, cellGuess, cellNotes) {\n      // for solve mode, just flip on provided cell value.\n      if (isSolveMode) {\n        if (cellGuess === null) {\n          this.isActive = false;\n        } else if (this.value === cellGuess) {\n          this.isActive = !this.isActive;\n        } // and for not solve mode (hint mode, more concisely), check against notes.\n\n      } else if (!isSolveMode && cellNotes) {\n        var row = Math.floor((this.value - 1) / 3);\n        var col = (this.value - 1) % 3;\n        this.isActive = cellNotes[row][col];\n      }\n    }\n  }, {\n    key: "classes",\n    // CSS classes for the button, for display later.\n    get: function get() {\n      if (this.isActive) {\n        return ["activeNumpadButton"];\n      }\n\n      return [];\n    }\n  }]);\n\n  return NumpadButton;\n}(vue_runtime_min_default.a), NumpadButton_temp), (NumpadButton_descriptor = NumpadButton_applyDecoratedDescriptor(NumpadButton_class2.prototype, "value", [NumpadButton_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), NumpadButton_descriptor2 = NumpadButton_applyDecoratedDescriptor(NumpadButton_class2.prototype, "row", [NumpadButton_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), NumpadButton_descriptor3 = NumpadButton_applyDecoratedDescriptor(NumpadButton_class2.prototype, "column", [NumpadButton_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), NumpadButton_class2)) || NumpadButton_class);\n\n// EXTERNAL MODULE: ./src/components/html/SudokuInput.html\nvar html_SudokuInput = __webpack_require__(4);\nvar SudokuInput_default = /*#__PURE__*/__webpack_require__.n(html_SudokuInput);\n\n// CONCATENATED MODULE: ./src/components/ts/SudokuInput.ts\nvar SudokuInput_dec, SudokuInput_dec2, SudokuInput_dec3, SudokuInput_class, SudokuInput_class2, SudokuInput_descriptor, SudokuInput_temp;\n\nfunction SudokuInput_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { SudokuInput_typeof = function _typeof(obj) { return typeof obj; }; } else { SudokuInput_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return SudokuInput_typeof(obj); }\n\nfunction SudokuInput_slicedToArray(arr, i) { return SudokuInput_arrayWithHoles(arr) || SudokuInput_iterableToArrayLimit(arr, i) || SudokuInput_nonIterableRest(); }\n\nfunction SudokuInput_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction SudokuInput_iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction SudokuInput_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction SudokuInput_initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction SudokuInput_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction SudokuInput_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SudokuInput_createClass(Constructor, protoProps, staticProps) { if (protoProps) SudokuInput_defineProperties(Constructor.prototype, protoProps); if (staticProps) SudokuInput_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction SudokuInput_possibleConstructorReturn(self, call) { if (call && (SudokuInput_typeof(call) === "object" || typeof call === "function")) { return call; } return SudokuInput_assertThisInitialized(self); }\n\nfunction SudokuInput_getPrototypeOf(o) { SudokuInput_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return SudokuInput_getPrototypeOf(o); }\n\nfunction SudokuInput_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction SudokuInput_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) SudokuInput_setPrototypeOf(subClass, superClass); }\n\nfunction SudokuInput_setPrototypeOf(o, p) { SudokuInput_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return SudokuInput_setPrototypeOf(o, p); }\n\nfunction SudokuInput_applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if (\'value\' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction SudokuInput_initializerWarningHelper(descriptor, context) { throw new Error(\'Decorating class property failed. Please ensure that \' + \'proposal-class-properties is enabled and set to use loose mode. \' + \'To use proposal-class-properties in spec mode with decorators, wait for \' + \'the next major version of decorators in stage 2.\'); }\n\n\n\n\n\nvar SudokuInput_SudokuInput = (SudokuInput_dec = vue_class_component_esm({\n  components: {\n    "numpad-button": NumpadButton\n  }\n}), SudokuInput_dec2 = Prop(), SudokuInput_dec3 = Watch("state.guessMode"), SudokuInput_default()(SudokuInput_class = SudokuInput_dec(SudokuInput_class = (SudokuInput_class2 = (SudokuInput_temp =\n/*#__PURE__*/\nfunction (_Vue) {\n  SudokuInput_inherits(SudokuInput, _Vue);\n\n  function SudokuInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    SudokuInput_classCallCheck(this, SudokuInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = SudokuInput_possibleConstructorReturn(this, (_getPrototypeOf2 = SudokuInput_getPrototypeOf(SudokuInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    SudokuInput_initializerDefineProperty(_this, "state", SudokuInput_descriptor, SudokuInput_assertThisInitialized(_this));\n\n    _this.numpadButtons = [];\n    _this.allNumpadCoords = [];\n    return _this;\n  }\n\n  SudokuInput_createClass(SudokuInput, [{\n    key: "updateGuessMode",\n    // WATCHERS\n    // watch isGuessMode and update boolean isGuessMode appropriately.\n    value: function updateGuessMode() {\n      this.state.isGuessMode = this.state.guessMode === "true";\n      this.state.setSquareGuessModes(this.state.isGuessMode);\n      this.state.loadNumpadValues();\n    }\n  }, {\n    key: "mounted",\n    // basically a constructor.\n    value: function mounted() {\n      // I don\'t think I should need this,\n      // but it forces an update and sets the radio buttons correctly.\n      this.state.guessMode = "true"; // create numpadButtons, and record coords list at the same time.\n\n      for (var r = 0; r < this.state.minigridSize; r++) {\n        var newRow = [];\n\n        for (var c = 0; c < this.state.minigridSize; c++) {\n          var value = r * this.state.minigridSize + (c + 1);\n          newRow.push(new NumpadButton({\n            propsData: {\n              value: value,\n              row: r,\n              column: c\n            }\n          }));\n          this.allNumpadCoords.push([r, c]);\n        }\n\n        this.numpadButtons.push(newRow);\n      } // register callbacks.\n\n\n      this.state.clearNumpadSquares = this.clearNumpadSquares;\n      this.state.enableNumpadSquares = this.enableNumpadSquares;\n      this.state.onNumpadClick = this.onNumpadClick;\n      this.state.loadNumpadValues = this.loadNumpadValues; // keyboard input.\n\n      window.addEventListener("keydown", this.processKeyboardEvent);\n    } // METHODS\n    // parameters:\n    // value: value of button that was clicked.\n    // row: row of button clicked.\n    // col: column of button clicked.\n    // returns: an array of pairs of coordinates representing all minigridSize^2 numpad buttons.\n    // result: none besides return.\n\n  }, {\n    key: "onNumpadClick",\n    value: function onNumpadClick(value, row, col) {\n      // do nothing if there is not a valid active square.\n      if (!this.state.activeGridSquare) {\n        return;\n      } // only need to erase old button if we are in guessMode.\n      // and if it\'s valid.\n\n\n      if (this.state.isGuessMode && this.state.activeNumpadSquare) {\n        // erase old numpad before setting class on new one.\n        this.state.activeNumpadSquare.isActive = false;\n      } // update active square.\n\n\n      this.state.activeNumpadSquare = this.numpadButtons[row][col];\n      this.state.handleGridUpdate(value);\n      var activeGridSquare = this.state.activeGridSquare; // only work with actual cell changes.\n\n      if (activeGridSquare) {\n        this.numpadButtons[row][col].updateIsActive(this.state.isGuessMode, activeGridSquare.guess, activeGridSquare.notes);\n        vue_runtime_min_default.a.set(this.numpadButtons, row, this.numpadButtons[row]); // request error clears on any button change in guess mode.\n        // TODO should probably only clear relevant row/column/subgrid and not everything.\n\n        if (this.state.isGuessMode) {\n          this.state.resetBoardErrors();\n        }\n      }\n    } // parameters: none.\n    // returns: none.\n    // result: all numpad squares set to inactive.\n\n  }, {\n    key: "clearNumpadSquares",\n    value: function clearNumpadSquares() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.allNumpadCoords[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _step$value = SudokuInput_slicedToArray(_step.value, 2),\n              row = _step$value[0],\n              col = _step$value[1];\n\n          this.numpadButtons[row][col].isActive = false;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    } // parameters:\n    // digits: array of digits from SudokuGrid to map to numpad buttons and enable.\n    // returns: none.\n    // result: specified numpad buttons are enabled.\n\n  }, {\n    key: "enableNumpadSquares",\n    value: function enableNumpadSquares(digits) {\n      // map 1D array of digits to the corresponding elements in a 2D array\n      // of width this.state.minigridSize.\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = digits[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var digit = _step2.value;\n          var row = Math.floor((digit - 1) / this.state.minigridSize);\n          var col = (digit - 1) % this.state.minigridSize;\n          this.numpadButtons[row][col].isActive = true;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      ;\n    } // parameters: none.\n    // returns: none.\n    // result: load numpad values from active square.\n\n  }, {\n    key: "loadNumpadValues",\n    value: function loadNumpadValues() {\n      // do nothing if there is not a valid active square.\n      if (!this.state.activeGridSquare) {\n        return;\n      } // clear, figure out which digits to set from active square, set digits.\n\n\n      this.state.clearNumpadSquares();\n      var activeGridSquare = this.state.activeGridSquare;\n      var digits = this.state.getDigitsToToggle(activeGridSquare.row, activeGridSquare.column);\n      this.state.enableNumpadSquares(digits);\n    } // parameters:\n    // event: keyboard event to process.\n    // returns: none\n    // result: enter digit or select square.\n\n  }, {\n    key: "processKeyboardEvent",\n    value: function processKeyboardEvent(event) {\n      var key = event.key; // square value inputs.\n\n      var maybeNum = Number(key);\n\n      if (key && maybeNum && maybeNum >= 1 && maybeNum <= 9) {\n        var row = Math.floor((maybeNum - 1) / this.state.minigridSize);\n        var col = (maybeNum - 1) % this.state.minigridSize;\n        this.state.onNumpadClick(maybeNum, row, col);\n        return;\n      } // let grid handle its own navigation.\n\n\n      var maybeArrow = key.slice(0, 5);\n\n      if (maybeArrow === "Arrow") {\n        this.state.handleBoardNavigate(key);\n      }\n    }\n  }]);\n\n  return SudokuInput;\n}(vue_runtime_min_default.a), SudokuInput_temp), (SudokuInput_descriptor = SudokuInput_applyDecoratedDescriptor(SudokuInput_class2.prototype, "state", [SudokuInput_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), SudokuInput_applyDecoratedDescriptor(SudokuInput_class2.prototype, "updateGuessMode", [SudokuInput_dec3], Object.getOwnPropertyDescriptor(SudokuInput_class2.prototype, "updateGuessMode"), SudokuInput_class2.prototype)), SudokuInput_class2)) || SudokuInput_class) || SudokuInput_class);\n\n// EXTERNAL MODULE: ./src/components/html/SudokuGame.html\nvar html_SudokuGame = __webpack_require__(5);\nvar SudokuGame_default = /*#__PURE__*/__webpack_require__.n(html_SudokuGame);\n\n// CONCATENATED MODULE: ./src/components/ts/SudokuGame.ts\nvar SudokuGame_dec, SudokuGame_dec2, SudokuGame_class, SudokuGame_class2, SudokuGame_descriptor, SudokuGame_temp;\n\nfunction SudokuGame_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { SudokuGame_typeof = function _typeof(obj) { return typeof obj; }; } else { SudokuGame_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return SudokuGame_typeof(obj); }\n\nfunction SudokuGame_initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction SudokuGame_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction SudokuGame_possibleConstructorReturn(self, call) { if (call && (SudokuGame_typeof(call) === "object" || typeof call === "function")) { return call; } return SudokuGame_assertThisInitialized(self); }\n\nfunction SudokuGame_getPrototypeOf(o) { SudokuGame_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return SudokuGame_getPrototypeOf(o); }\n\nfunction SudokuGame_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction SudokuGame_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) SudokuGame_setPrototypeOf(subClass, superClass); }\n\nfunction SudokuGame_setPrototypeOf(o, p) { SudokuGame_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return SudokuGame_setPrototypeOf(o, p); }\n\nfunction SudokuGame_applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if (\'value\' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction SudokuGame_initializerWarningHelper(descriptor, context) { throw new Error(\'Decorating class property failed. Please ensure that \' + \'proposal-class-properties is enabled and set to use loose mode. \' + \'To use proposal-class-properties in spec mode with decorators, wait for \' + \'the next major version of decorators in stage 2.\'); }\n\n\n\n\n\n\n\n\nvar SudokuGame_SudokuGame = (SudokuGame_dec = vue_class_component_esm({\n  components: {\n    "sudoku-input": SudokuInput_SudokuInput,\n    "sudoku-grid": SudokuGrid_SudokuGrid,\n    "sudoku-checker": SudokuChecker_SudokuChecker\n  }\n}), SudokuGame_dec2 = Prop({\n  default: []\n}), SudokuGame_default()(SudokuGame_class = SudokuGame_dec(SudokuGame_class = (SudokuGame_class2 = (SudokuGame_temp =\n/*#__PURE__*/\nfunction (_Vue) {\n  SudokuGame_inherits(SudokuGame, _Vue);\n\n  function SudokuGame() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    SudokuGame_classCallCheck(this, SudokuGame);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = SudokuGame_possibleConstructorReturn(this, (_getPrototypeOf2 = SudokuGame_getPrototypeOf(SudokuGame)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    SudokuGame_initializerDefineProperty(_this, "initialSquareData", SudokuGame_descriptor, SudokuGame_assertThisInitialized(_this));\n\n    _this.minigridSize = 3;\n    _this.state = new SudokuState({\n      propsData: {\n        minigridSize: _this.minigridSize\n      }\n    });\n    _this.el = "#app";\n    return _this;\n  }\n\n  return SudokuGame;\n}(vue_runtime_min_default.a), SudokuGame_temp), (SudokuGame_descriptor = SudokuGame_applyDecoratedDescriptor(SudokuGame_class2.prototype, "initialSquareData", [SudokuGame_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), SudokuGame_class2)) || SudokuGame_class) || SudokuGame_class);\n\n// EXTERNAL MODULE: ./src/styles/main.scss\nvar main = __webpack_require__(9);\n\n// CONCATENATED MODULE: ./src/index.ts\n\n // for auto-loading, I think? maybe?\n\n\nvar url = new URL(window.location.href);\nvar params = new URLSearchParams(url.search);\nvar boardCode = params.get("board");\nvar decoder = new decoder_Decoder();\nvar sd = decoder.decode(boardCode);\nvar sudokuGame = new SudokuGame_SudokuGame({\n  propsData: {\n    initialSquareData: sd\n  }\n});\nsudokuGame.$mount("#app");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZW5jb2Rlci50cz9hYzE4Iiwid2VicGFjazovLy8uL3NyYy9kZWNvZGVyLnRzPzVjZWYiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Z1ZS1jbGFzcy1jb21wb25lbnQvZGlzdC92dWUtY2xhc3MtY29tcG9uZW50LmVzbS5qcz8yZmUxIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy92dWUtcHJvcGVydHktZGVjb3JhdG9yL2xpYi92dWUtcHJvcGVydHktZGVjb3JhdG9yLmpzPzYwYTMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvdHMvU3Vkb2t1U3RhdGUudHM/NjFkZCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy90cy9TdWRva3VDaGVja2VyLnRzPzljZmYiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvdHMvU3Vkb2t1U3F1YXJlLnRzP2RlNjEiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvdHMvU3Vkb2t1R3JpZC50cz9iMTM5Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL3RzL051bXBhZEJ1dHRvbi50cz83YmZiIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL3RzL1N1ZG9rdUlucHV0LnRzPzg5YmMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvdHMvU3Vkb2t1R2FtZS50cz80ZmRmIiwid2VicGFjazovLy8uL3NyYy9pbmRleC50cz9mZmI0Il0sIm5hbWVzIjpbIlNxdWFyZURhdGEiLCJ2YWx1ZSIsImhpbnQiLCJFbmNvZGVyIiwidmVyc2lvbiIsInNxdWFyZURhdGEiLCJkZWZhdWx0RGF0YSIsInJlcyIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsInJvdyIsInNxdWFyZSIsImludHZhbCIsImVuY29kZWRWYWx1ZSIsInB1c2giLCJqb2luIiwiRGVjb2RlciIsImVuY29kZWREYXRhIiwiZW5jb2RpbmdWZXJzaW9uIiwiY2hhckNvZGVBdCIsInJlc3VsdCIsIkFycmF5IiwiZ3JpZExlbmd0aCIsImtleXMiLCJtYXAiLCJmaWxsIiwiaSIsImxlbmd0aCIsIk1hdGgiLCJmbG9vciIsImNvbCIsImRlY29kZWRWYWx1ZSIsImlzSGludE51bSIsImlzSGludCIsIk51bWJlciIsIlN1ZG9rdVN0YXRlIiwiUHJvcCIsIkNvbXBvbmVudCIsImFjdGl2ZUdyaWRTcXVhcmUiLCJhY3RpdmVOdW1wYWRTcXVhcmUiLCJndWVzc01vZGUiLCJpc0d1ZXNzTW9kZSIsImlzSW5FcnJvciIsInNvbHV0aW9uU3RhdGUiLCJTb2x1dGlvblR5cGUiLCJOb25lIiwiaGFuZGxlR3JpZFVwZGF0ZSIsImVycm9yVm9pZCIsIm9uQm9hcmRDbGljayIsImdldEdyaWRTZWN0aW9uIiwiaW52YWxpZGF0ZVNlY3Rpb24iLCJoYXNFbXB0eVNxdWFyZXMiLCJnZXREaWdpdHNUb1RvZ2dsZSIsInNldFNxdWFyZUd1ZXNzTW9kZXMiLCJoYW5kbGVCb2FyZE5hdmlnYXRlIiwicmVzZXRCb2FyZCIsInJlc2V0Qm9hcmRFcnJvcnMiLCJjbGVhck51bXBhZFNxdWFyZXMiLCJlbmFibGVOdW1wYWRTcXVhcmVzIiwib25OdW1wYWRDbGljayIsImxvYWROdW1wYWRWYWx1ZXMiLCJzdWJtaXQiLCJjaGVja0JvYXJkIiwiY29uc29sZSIsImxvZyIsIlZ1ZSIsIlNlY3Rpb25UeXBlIiwiT2JqZWN0IiwiZnJlZXplIiwiUm93IiwiQ29sdW1uIiwiU3ViZ3JpZCIsIkludmFsaWQiLCJJbmNvbXBsZXRlIiwiVmFsaWQiLCJTdWRva3VDaGVja2VyIiwiV2l0aFJlbmRlciIsInN0YXRlIiwic2VjdGlvblR5cGVzIiwiYm9hcmRJc1ZhbGlkIiwic2VjdGlvblR5cGUiLCJtaW5pZ3JpZFNpemUiLCJzZWN0aW9uIiwic2VlbiIsImVsZW1lbnQiLCJpbmRleE9mIiwiYm9hcmRIYXNFbXB0eVNxdWFyZXMiLCJTdWRva3VTcXVhcmUiLCJlcnJvckNsYXNzZXMiLCJndWVzcyIsIm5vdGVzIiwiaW5pdGlhbGl6ZU5vdGVzIiwiaXNBY3RpdmUiLCJyIiwibm90ZVJvdyIsImMiLCJub3RlSXNTZXQiLCJlcnJvclN0YXRlIiwiY2xhc3NlcyIsImNvbHVtbiIsImNvbmNhdCIsIkVycm9yU3RhdGVzIiwiTGVmdFJvdyIsIkNlbnRlclJvdyIsIlJpZ2h0Um93IiwiVG9wQ29sdW1uIiwiTWlkZGxlQ29sdW1uIiwiQm90dG9tQ29sdW1uIiwiVG9wTGVmdFN1YmdyaWQiLCJUb3BDZW50ZXJTdWJncmlkIiwiVG9wUmlnaHRTdWJncmlkIiwiTWlkZGxlTGVmdFN1YmdyaWQiLCJNaWRkbGVDZW50ZXJTdWJncmlkIiwiTWlkZGxlUmlnaHRTdWJncmlkIiwiQm90dG9tTGVmdFN1YmdyaWQiLCJCb3R0b21DZW50ZXJTdWJncmlkIiwiQm90dG9tUmlnaHRTdWJncmlkIiwiU3Vkb2t1R3JpZCIsImNvbXBvbmVudHMiLCJpbml0aWFsU3F1YXJlRGF0YSIsIm5ld1JvdyIsInByb3BzRGF0YSIsImFjdGl2ZVNxdWFyZSIsIm9sZFJvdyIsInNldCIsIm9sZEFjdGl2ZVNxdWFyZSIsImNsZWFyQ3VycmVudEFjdGl2ZVNxdWFyZSIsIm5ld0FjdGl2ZVNxdWFyZSIsImRpZ2l0cyIsImdyaWRTcXVhcmUiLCJhY3RpdmVDZWxsIiwidXBkYXRlVmFsdWVzIiwic2VjdGlvbl90eXBlIiwiaW5kZXgiLCJjb29yZHMiLCJzZWN0aW9uU2l6ZSIsInJvd19jb29yZCIsImNvbF9jb29yZCIsInJvd19zdGFydCIsImNvbF9zdGFydCIsImdldENvb3JkaW5hdGVzIiwiY29vcmQiLCJnZXRVc2VyVmFsdWUiLCJzdGF0ZXMiLCJhcHBlbmRUb0Vycm9yU3RhdGUiLCJzcXVhcmVSb3ciLCJyZXNldEVycm9yU3RhdGUiLCJjbGVhclVzZXJWYWx1ZXMiLCJmb3JFYWNoIiwiXyIsInNldEd1ZXNzTW9kZSIsImtleWJvYXJkRXZlbnQiLCJ2RGlmZiIsImhEaWZmIiwiQXJyb3dUeXBlIiwiQXJyb3dVcCIsIkFycm93RG93biIsIkFycm93TGVmdCIsImF0dGVtcHRlZFJvdyIsImJvdW5kUm93IiwiYXR0ZW1wdGVkQ29sIiwiYm91bmRDb2x1bW4iLCJwcm9wb3NlZFJvdyIsInByb3Bvc2VkQ29sdW1uIiwiQXJyb3dSaWdodCIsIk51bXBhZEJ1dHRvbiIsImlzU29sdmVNb2RlIiwiY2VsbEd1ZXNzIiwiY2VsbE5vdGVzIiwiU3Vkb2t1SW5wdXQiLCJXYXRjaCIsIm51bXBhZEJ1dHRvbnMiLCJhbGxOdW1wYWRDb29yZHMiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwicHJvY2Vzc0tleWJvYXJkRXZlbnQiLCJ1cGRhdGVJc0FjdGl2ZSIsImRpZ2l0IiwiZXZlbnQiLCJrZXkiLCJtYXliZU51bSIsIm1heWJlQXJyb3ciLCJzbGljZSIsIlN1ZG9rdUdhbWUiLCJkZWZhdWx0IiwiZWwiLCJ1cmwiLCJVUkwiLCJsb2NhdGlvbiIsImhyZWYiLCJwYXJhbXMiLCJVUkxTZWFyY2hQYXJhbXMiLCJzZWFyY2giLCJib2FyZENvZGUiLCJnZXQiLCJkZWNvZGVyIiwic2QiLCJkZWNvZGUiLCJzdWRva3VHYW1lIiwiJG1vdW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBTyxJQUFNQSxVQUFiLEdBSUksb0JBQW1CQyxLQUFuQixFQUFrQ0MsSUFBbEMsRUFBaUQ7QUFBQTs7QUFBQSxPQUhqREEsSUFHaUQsR0FIakMsS0FHaUM7QUFBQSxPQUZqREQsS0FFaUQsR0FGakMsQ0FFaUM7QUFDN0MsT0FBS0EsS0FBTCxHQUFhQSxLQUFiO0FBQ0EsT0FBS0MsSUFBTCxHQUFZQSxJQUFaO0FBQ0gsQ0FQTDtBQVVPLElBQU1DLE9BQWI7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQSxTQUNJQyxPQURKLEdBQ3NCLENBRHRCO0FBQUE7O0FBQUE7QUFBQTtBQUFBLDJCQTJIa0JDLFVBM0hsQixFQTJIMkQ7QUFDbkQsVUFBSSxDQUFDQSxVQUFMLEVBQWlCO0FBQ2JBLGtCQUFVLEdBQUdGLE9BQU8sQ0FBQ0csV0FBckI7QUFDSDs7QUFFRCxVQUFJQyxHQUFHLEdBQUcsV0FBSUMsTUFBTSxDQUFDQyxZQUFQLENBQW9C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QUFDQTtBQUVBO0lBVXFCc0gscUIscUJBUHBCbEosdUJBQVMsQ0FBQztBQUNQaUYsWUFBVSxFQUFFO0FBQ1Isb0JBQWdCbUQsdUJBRFI7QUFFUixtQkFBZXBELHFCQUZQO0FBR1Isc0JBQWtCMUMsMkJBQWFBO0FBSHZCO0FBREwsQ0FBRCxDLG9CQVFMdkMsSUFBSSxDQUFDO0FBQUNvSixTQUFPLEVBQUU7QUFBVixDQUFELEMsRUFUUjVHLG9COzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztVQWFXSyxZLEdBQXVCLEM7VUFHeEJKLEssR0FBcUIsSUFBSTFDLFdBQUosQ0FBZ0I7QUFDeENzRixlQUFTLEVBQUU7QUFDUHhDLG9CQUFZLEVBQUUsTUFBS0E7QUFEWjtBQUQ2QixLQUFoQixDO1VBTXJCd0csRSxHQUFhLE07Ozs7O0VBZGdCeEgseUI7Ozs7Ozs7Ozs7O0FDbEJ4QztDQUdBOztBQUNBO0FBRUEsSUFBSXlILEdBQUcsR0FBRyxJQUFJQyxHQUFKLENBQVFkLE1BQU0sQ0FBQ2UsUUFBUCxDQUFnQkMsSUFBeEIsQ0FBVjtBQUNBLElBQUlDLE1BQU0sR0FBRyxJQUFJQyxlQUFKLENBQW9CTCxHQUFHLENBQUNNLE1BQXhCLENBQWI7QUFDQSxJQUFJQyxTQUFTLEdBQUdILE1BQU0sQ0FBQ0ksR0FBUCxDQUFXLE9BQVgsQ0FBaEI7QUFFQSxJQUFJQyxPQUFPLEdBQUcsSUFBSW5MLGVBQUosRUFBZDtBQUVBLElBQUlvTCxFQUFFLEdBQUdELE9BQU8sQ0FBQ0UsTUFBUixDQUFlSixTQUFmLENBQVQ7QUFFQSxJQUFJSyxVQUFVLEdBQUcsSUFBSWYscUJBQUosQ0FBZTtBQUM1QjlELFdBQVMsRUFBRTtBQUNQRixxQkFBaUIsRUFBRTZFO0FBRFo7QUFEaUIsQ0FBZixDQUFqQjtBQUtBRSxVQUFVLENBQUNDLE1BQVgsQ0FBa0IsTUFBbEIiLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgU3F1YXJlRGF0YSB7XG4gICAgaGludDogYm9vbGVhbiA9IGZhbHNlO1xuICAgIHZhbHVlOiBudW1iZXIgPSAwO1xuXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKHZhbHVlOiBudW1iZXIsIGhpbnQ6IGJvb2xlYW4pIHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICAgICAgICB0aGlzLmhpbnQgPSBoaW50O1xuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIEVuY29kZXIge1xuICAgIHZlcnNpb246IG51bWJlciA9IDE7XG5cbiAgICBzdGF0aWMgZGVmYXVsdERhdGE6IFNxdWFyZURhdGFbXVtdID0gW1xuICAgICAgICBbXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogMiwgXCJoaW50XCI6IHRydWUgfSxcbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiA0LCBcImhpbnRcIjogdHJ1ZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDYsIFwiaGludFwiOiBmYWxzZSB9LFxuXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogOCwgXCJoaW50XCI6IGZhbHNlIH0sXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogNSwgXCJoaW50XCI6IGZhbHNlIH0sXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogNywgXCJoaW50XCI6IHRydWUgfSxcblxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDksIFwiaGludFwiOiBmYWxzZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDEsIFwiaGludFwiOiBmYWxzZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDMsIFwiaGludFwiOiBmYWxzZSB9XG4gICAgICAgIF0sXG4gICAgICAgIFtcbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiAxLCBcImhpbnRcIjogdHJ1ZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDgsIFwiaGludFwiOiB0cnVlIH0sXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogOSwgXCJoaW50XCI6IHRydWUgfSxcblxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDYsIFwiaGludFwiOiBmYWxzZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDQsIFwiaGludFwiOiBmYWxzZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDMsIFwiaGludFwiOiBmYWxzZSB9LFxuXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogMiwgXCJoaW50XCI6IHRydWUgfSxcbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiA3LCBcImhpbnRcIjogdHJ1ZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDUsIFwiaGludFwiOiB0cnVlIH1cbiAgICAgICAgXSxcbiAgICAgICAgW1xuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDUsIFwiaGludFwiOiB0cnVlIH0sXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogNywgXCJoaW50XCI6IGZhbHNlIH0sXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogMywgXCJoaW50XCI6IHRydWUgfSxcblxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDIsIFwiaGludFwiOiBmYWxzZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDksIFwiaGludFwiOiBmYWxzZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDEsIFwiaGludFwiOiB0cnVlIH0sXG5cbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiA0LCBcImhpbnRcIjogdHJ1ZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDgsIFwiaGludFwiOiBmYWxzZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDYsIFwiaGludFwiOiBmYWxzZSB9XG4gICAgICAgIF0sXG4gICAgICAgIFtcbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiA0LCBcImhpbnRcIjogZmFsc2UgfSxcbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiAxLCBcImhpbnRcIjogdHJ1ZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDgsIFwiaGludFwiOiBmYWxzZSB9LFxuXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogMywgXCJoaW50XCI6IGZhbHNlIH0sXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogMiwgXCJoaW50XCI6IHRydWUgfSxcbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiA5LCBcImhpbnRcIjogZmFsc2UgfSxcblxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDUsIFwiaGludFwiOiBmYWxzZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDYsIFwiaGludFwiOiBmYWxzZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDcsIFwiaGludFwiOiB0cnVlIH1cbiAgICAgICAgXSxcbiAgICAgICAgW1xuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDYsIFwiaGludFwiOiBmYWxzZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDMsIFwiaGludFwiOiBmYWxzZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDcsIFwiaGludFwiOiB0cnVlIH0sXG5cbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiA0LCBcImhpbnRcIjogZmFsc2UgfSxcbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiA4LCBcImhpbnRcIjogZmFsc2UgfSxcbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiA1LCBcImhpbnRcIjogZmFsc2UgfSxcblxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDEsIFwiaGludFwiOiBmYWxzZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDIsIFwiaGludFwiOiB0cnVlIH0sXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogOSwgXCJoaW50XCI6IGZhbHNlIH1cbiAgICAgICAgXSxcbiAgICAgICAgW1xuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDksIFwiaGludFwiOiB0cnVlIH0sXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogNSwgXCJoaW50XCI6IHRydWUgfSxcbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiAyLCBcImhpbnRcIjogZmFsc2UgfSxcblxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDEsIFwiaGludFwiOiBmYWxzZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDcsIFwiaGludFwiOiBmYWxzZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDYsIFwiaGludFwiOiBmYWxzZSB9LFxuXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogMywgXCJoaW50XCI6IHRydWUgfSxcbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiA0LCBcImhpbnRcIjogdHJ1ZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDgsIFwiaGludFwiOiBmYWxzZSB9XG4gICAgICAgIF0sXG4gICAgICAgIFtcbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiA3LCBcImhpbnRcIjogdHJ1ZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDYsIFwiaGludFwiOiBmYWxzZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDQsIFwiaGludFwiOiB0cnVlIH0sXG5cbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiA1LCBcImhpbnRcIjogZmFsc2UgfSxcbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiAzLCBcImhpbnRcIjogZmFsc2UgfSxcbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiAyLCBcImhpbnRcIjogdHJ1ZSB9LFxuXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogOCwgXCJoaW50XCI6IHRydWUgfSxcbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiA5LCBcImhpbnRcIjogdHJ1ZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDEsIFwiaGludFwiOiBmYWxzZSB9XG4gICAgICAgIF0sXG4gICAgICAgIFtcbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiAzLCBcImhpbnRcIjogdHJ1ZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDIsIFwiaGludFwiOiBmYWxzZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDEsIFwiaGludFwiOiBmYWxzZSB9LFxuXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogOSwgXCJoaW50XCI6IGZhbHNlIH0sXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogNiwgXCJoaW50XCI6IGZhbHNlIH0sXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogOCwgXCJoaW50XCI6IHRydWUgfSxcblxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDcsIFwiaGludFwiOiBmYWxzZSB9LFxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDUsIFwiaGludFwiOiB0cnVlIH0sXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogNCwgXCJoaW50XCI6IGZhbHNlIH1cbiAgICAgICAgXSxcbiAgICAgICAgW1xuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDgsIFwiaGludFwiOiB0cnVlIH0sXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogOSwgXCJoaW50XCI6IGZhbHNlIH0sXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogNSwgXCJoaW50XCI6IHRydWUgfSxcblxuICAgICAgICAgICAgeyBcInZhbHVlXCI6IDcsIFwiaGludFwiOiB0cnVlIH0sXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogMSwgXCJoaW50XCI6IHRydWUgfSxcbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiA0LCBcImhpbnRcIjogdHJ1ZSB9LFxuXG4gICAgICAgICAgICB7IFwidmFsdWVcIjogNiwgXCJoaW50XCI6IHRydWUgfSxcbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiAzLCBcImhpbnRcIjogZmFsc2UgfSxcbiAgICAgICAgICAgIHsgXCJ2YWx1ZVwiOiAyLCBcImhpbnRcIjogZmFsc2UgfVxuICAgICAgICBdLFxuICAgIF07XG5cbiAgICBwdWJsaWMgZW5jb2RlKHNxdWFyZURhdGE6IG51bGx8U3F1YXJlRGF0YVtdW10pOiBzdHJpbmcge1xuICAgICAgICBpZiAoIXNxdWFyZURhdGEpIHtcbiAgICAgICAgICAgIHNxdWFyZURhdGEgPSBFbmNvZGVyLmRlZmF1bHREYXRhO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IHJlcyA9IFtgJHtTdHJpbmcuZnJvbUNoYXJDb2RlKDk3ICsgdGhpcy52ZXJzaW9uKX1gXTtcbiAgICAgICAgZm9yIChsZXQgcm93IG9mIHNxdWFyZURhdGEpIHtcbiAgICAgICAgICAgIGZvciAobGV0IHNxdWFyZSBvZiByb3cpIHtcbiAgICAgICAgICAgICAgICBsZXQgaW50dmFsID0gc3F1YXJlLmhpbnQgPyAxIDogMDtcbiAgICAgICAgICAgICAgICBsZXQgZW5jb2RlZFZhbHVlID0gU3RyaW5nLmZyb21DaGFyQ29kZSg5NyArIChpbnR2YWwgKiAxMCkgKyBzcXVhcmUudmFsdWUpO1xuXG4gICAgICAgICAgICAgICAgcmVzLnB1c2goYCR7ZW5jb2RlZFZhbHVlfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJlcy5qb2luKFwiXCIpO1xuICAgIH1cbn1cbiIsImltcG9ydCB7IFNxdWFyZURhdGEgfSBmcm9tIFwiLi9lbmNvZGVyXCI7XG5cbmV4cG9ydCBjbGFzcyBEZWNvZGVyIHtcbiAgICBzdGF0aWMgZGVmYXVsdERhdGE6IHN0cmluZyA9IFwiYm1vZ2lmcmpiZGxzdGdlZG1ycHBobmNqbG9pZ2VsaWRtamZncmdkcmVpZmJtanRwY2JoZ25vaXJnb2ZkbXN0Ym5jYmpnc2hwZXNqcHJsb3FkY1wiXG4gICAgc3RhdGljIGdyaWRMZW5ndGg6IG51bWJlciA9IDk7XG5cbiAgICBwdWJsaWMgZGVjb2RlKGVuY29kZWREYXRhOiBzdHJpbmd8bnVsbCk6IFNxdWFyZURhdGFbXVtdfG51bGwge1xuICAgICAgICAvLyBkZWZhdWx0IHRoZSBlbmNvZGVkIGRhdGEuXG4gICAgICAgIGlmICghZW5jb2RlZERhdGEgfHwgZW5jb2RlZERhdGEgPT09IFwiXCIpIHtcbiAgICAgICAgICAgIGVuY29kZWREYXRhID0gRGVjb2Rlci5kZWZhdWx0RGF0YTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBlbmNvZGluZ1ZlcnNpb24gPSBlbmNvZGVkRGF0YVswXS5jaGFyQ29kZUF0KDApIC0gOTc7XG5cbiAgICAgICAgaWYgKGVuY29kaW5nVmVyc2lvbiA9PT0gMSkge1xuICAgICAgICAgICAgbGV0IHJlc3VsdDogU3F1YXJlRGF0YVtdW10gPSBbLi4uQXJyYXkoRGVjb2Rlci5ncmlkTGVuZ3RoKS5rZXlzKCldLm1hcChcbiAgICAgICAgICAgICAgICAoKSA9PiBbLi4uQXJyYXkoRGVjb2Rlci5ncmlkTGVuZ3RoKS5maWxsKFxuICAgICAgICAgICAgICAgICAgICBuZXcgU3F1YXJlRGF0YSgwLCBmYWxzZSlcbiAgICAgICAgICAgICAgICApXVxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPCBlbmNvZGVkRGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGxldCByb3cgPSBNYXRoLmZsb29yKChpLTEpIC8gRGVjb2Rlci5ncmlkTGVuZ3RoKTtcbiAgICAgICAgICAgICAgICBsZXQgY29sID0gKGktMSkgJSBEZWNvZGVyLmdyaWRMZW5ndGg7XG5cbiAgICAgICAgICAgICAgICAvLyBjdXJyZW50IGVuY29kaW5nIGlzIHRoZSB2YWx1ZSBvZiB0aGUgc3F1YXJlIHBsdXMgdGVuIHRpbWVzIHRoZSBoaW50IHZhbHVlLFxuICAgICAgICAgICAgICAgIC8vIHRvIG1ha2UgYSB0d28tZGlnaXQgbnVtYmVyIGZyb20gMDEtMTkuIHRoaXMgaXMgdHVybmVkIGludG8gYW4gQVNDSUlcbiAgICAgICAgICAgICAgICAvLyBjaGFyYWN0ZXIgZm9yIFVSTCBlbmNvZGluZy5cbiAgICAgICAgICAgICAgICBsZXQgZGVjb2RlZFZhbHVlID0gZW5jb2RlZERhdGFbaV0uY2hhckNvZGVBdCgwKSAtIDk3O1xuXG4gICAgICAgICAgICAgICAgbGV0IGlzSGludE51bSA9IE1hdGguZmxvb3IoZGVjb2RlZFZhbHVlIC8gMTApXG4gICAgICAgICAgICAgICAgbGV0IGlzSGludCA9IGlzSGludE51bSA9PT0gMTtcblxuICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IE51bWJlcihkZWNvZGVkVmFsdWUgLSAoMTAgKiBpc0hpbnROdW0pKTtcblxuICAgICAgICAgICAgICAgIHJlc3VsdFtyb3ddW2NvbF0gPSBuZXcgU3F1YXJlRGF0YSh2YWx1ZSwgaXNIaW50KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cbiIsIi8qKlxuICAqIHZ1ZS1jbGFzcy1jb21wb25lbnQgdjcuMS4wXG4gICogKGMpIDIwMTUtcHJlc2VudCBFdmFuIFlvdVxuICAqIEBsaWNlbnNlIE1JVFxuICAqL1xuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnO1xuXG4vLyBUaGUgcmF0aW9uYWwgYmVoaW5kIHRoZSB2ZXJib3NlIFJlZmxlY3QtZmVhdHVyZSBjaGVjayBiZWxvdyBpcyB0aGUgZmFjdCB0aGF0IHRoZXJlIGFyZSBwb2x5ZmlsbHNcbi8vIHdoaWNoIGFkZCBhbiBpbXBsZW1lbnRhdGlvbiBmb3IgUmVmbGVjdC5kZWZpbmVNZXRhZGF0YSBidXQgbm90IGZvciBSZWZsZWN0LmdldE93bk1ldGFkYXRhS2V5cy5cbi8vIFdpdGhvdXQgdGhpcyBjaGVjayBjb25zdW1lcnMgd2lsbCBlbmNvdW50ZXIgaGFyZCB0byB0cmFjayBkb3duIHJ1bnRpbWUgZXJyb3JzLlxudmFyIHJlZmxlY3Rpb25Jc1N1cHBvcnRlZCA9IHR5cGVvZiBSZWZsZWN0ICE9PSAndW5kZWZpbmVkJyAmJiBSZWZsZWN0LmRlZmluZU1ldGFkYXRhICYmIFJlZmxlY3QuZ2V0T3duTWV0YWRhdGFLZXlzO1xuZnVuY3Rpb24gY29weVJlZmxlY3Rpb25NZXRhZGF0YSh0bywgZnJvbSkge1xuICAgIGZvcndhcmRNZXRhZGF0YSh0bywgZnJvbSk7XG4gICAgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoZnJvbS5wcm90b3R5cGUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBmb3J3YXJkTWV0YWRhdGEodG8ucHJvdG90eXBlLCBmcm9tLnByb3RvdHlwZSwga2V5KTtcbiAgICB9KTtcbiAgICBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhmcm9tKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgZm9yd2FyZE1ldGFkYXRhKHRvLCBmcm9tLCBrZXkpO1xuICAgIH0pO1xufVxuZnVuY3Rpb24gZm9yd2FyZE1ldGFkYXRhKHRvLCBmcm9tLCBwcm9wZXJ0eUtleSkge1xuICAgIHZhciBtZXRhS2V5cyA9IHByb3BlcnR5S2V5XG4gICAgICAgID8gUmVmbGVjdC5nZXRPd25NZXRhZGF0YUtleXMoZnJvbSwgcHJvcGVydHlLZXkpXG4gICAgICAgIDogUmVmbGVjdC5nZXRPd25NZXRhZGF0YUtleXMoZnJvbSk7XG4gICAgbWV0YUtleXMuZm9yRWFjaChmdW5jdGlvbiAobWV0YUtleSkge1xuICAgICAgICB2YXIgbWV0YWRhdGEgPSBwcm9wZXJ0eUtleVxuICAgICAgICAgICAgPyBSZWZsZWN0LmdldE93bk1ldGFkYXRhKG1ldGFLZXksIGZyb20sIHByb3BlcnR5S2V5KVxuICAgICAgICAgICAgOiBSZWZsZWN0LmdldE93bk1ldGFkYXRhKG1ldGFLZXksIGZyb20pO1xuICAgICAgICBpZiAocHJvcGVydHlLZXkpIHtcbiAgICAgICAgICAgIFJlZmxlY3QuZGVmaW5lTWV0YWRhdGEobWV0YUtleSwgbWV0YWRhdGEsIHRvLCBwcm9wZXJ0eUtleSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBSZWZsZWN0LmRlZmluZU1ldGFkYXRhKG1ldGFLZXksIG1ldGFkYXRhLCB0byk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cblxudmFyIGZha2VBcnJheSA9IHsgX19wcm90b19fOiBbXSB9O1xudmFyIGhhc1Byb3RvID0gZmFrZUFycmF5IGluc3RhbmNlb2YgQXJyYXk7XG5mdW5jdGlvbiBjcmVhdGVEZWNvcmF0b3IoZmFjdG9yeSkge1xuICAgIHJldHVybiBmdW5jdGlvbiAodGFyZ2V0LCBrZXksIGluZGV4KSB7XG4gICAgICAgIHZhciBDdG9yID0gdHlwZW9mIHRhcmdldCA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgICAgICAgPyB0YXJnZXRcbiAgICAgICAgICAgIDogdGFyZ2V0LmNvbnN0cnVjdG9yO1xuICAgICAgICBpZiAoIUN0b3IuX19kZWNvcmF0b3JzX18pIHtcbiAgICAgICAgICAgIEN0b3IuX19kZWNvcmF0b3JzX18gPSBbXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIGluZGV4ICE9PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgaW5kZXggPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgQ3Rvci5fX2RlY29yYXRvcnNfXy5wdXNoKGZ1bmN0aW9uIChvcHRpb25zKSB7IHJldHVybiBmYWN0b3J5KG9wdGlvbnMsIGtleSwgaW5kZXgpOyB9KTtcbiAgICB9O1xufVxuZnVuY3Rpb24gbWl4aW5zKCkge1xuICAgIHZhciBDdG9ycyA9IFtdO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgIEN0b3JzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgfVxuICAgIHJldHVybiBWdWUuZXh0ZW5kKHsgbWl4aW5zOiBDdG9ycyB9KTtcbn1cbmZ1bmN0aW9uIGlzUHJpbWl0aXZlKHZhbHVlKSB7XG4gICAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gICAgcmV0dXJuIHZhbHVlID09IG51bGwgfHwgKHR5cGUgIT09ICdvYmplY3QnICYmIHR5cGUgIT09ICdmdW5jdGlvbicpO1xufVxuZnVuY3Rpb24gd2FybihtZXNzYWdlKSB7XG4gICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjb25zb2xlLndhcm4oJ1t2dWUtY2xhc3MtY29tcG9uZW50XSAnICsgbWVzc2FnZSk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBjb2xsZWN0RGF0YUZyb21Db25zdHJ1Y3Rvcih2bSwgQ29tcG9uZW50KSB7XG4gICAgLy8gb3ZlcnJpZGUgX2luaXQgdG8gcHJldmVudCB0byBpbml0IGFzIFZ1ZSBpbnN0YW5jZVxuICAgIHZhciBvcmlnaW5hbEluaXQgPSBDb21wb25lbnQucHJvdG90eXBlLl9pbml0O1xuICAgIENvbXBvbmVudC5wcm90b3R5cGUuX2luaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIC8vIHByb3h5IHRvIGFjdHVhbCB2bVxuICAgICAgICB2YXIga2V5cyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHZtKTtcbiAgICAgICAgLy8gMi4yLjAgY29tcGF0IChwcm9wcyBhcmUgbm8gbG9uZ2VyIGV4cG9zZWQgYXMgc2VsZiBwcm9wZXJ0aWVzKVxuICAgICAgICBpZiAodm0uJG9wdGlvbnMucHJvcHMpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiB2bS4kb3B0aW9ucy5wcm9wcykge1xuICAgICAgICAgICAgICAgIGlmICghdm0uaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgICAgICAgICBrZXlzLnB1c2goa2V5KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAga2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgIGlmIChrZXkuY2hhckF0KDApICE9PSAnXycpIHtcbiAgICAgICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoX3RoaXMsIGtleSwge1xuICAgICAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHZtW2tleV07IH0sXG4gICAgICAgICAgICAgICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7IHZtW2tleV0gPSB2YWx1ZTsgfSxcbiAgICAgICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgLy8gc2hvdWxkIGJlIGFjcXVpcmVkIGNsYXNzIHByb3BlcnR5IHZhbHVlc1xuICAgIHZhciBkYXRhID0gbmV3IENvbXBvbmVudCgpO1xuICAgIC8vIHJlc3RvcmUgb3JpZ2luYWwgX2luaXQgdG8gYXZvaWQgbWVtb3J5IGxlYWsgKCMyMDkpXG4gICAgQ29tcG9uZW50LnByb3RvdHlwZS5faW5pdCA9IG9yaWdpbmFsSW5pdDtcbiAgICAvLyBjcmVhdGUgcGxhaW4gZGF0YSBvYmplY3RcbiAgICB2YXIgcGxhaW5EYXRhID0ge307XG4gICAgT2JqZWN0LmtleXMoZGF0YSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIGlmIChkYXRhW2tleV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcGxhaW5EYXRhW2tleV0gPSBkYXRhW2tleV07XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBpZiAoIShDb21wb25lbnQucHJvdG90eXBlIGluc3RhbmNlb2YgVnVlKSAmJiBPYmplY3Qua2V5cyhwbGFpbkRhdGEpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHdhcm4oJ0NvbXBvbmVudCBjbGFzcyBtdXN0IGluaGVyaXQgVnVlIG9yIGl0cyBkZXNjZW5kYW50IGNsYXNzICcgK1xuICAgICAgICAgICAgICAgICd3aGVuIGNsYXNzIHByb3BlcnR5IGlzIHVzZWQuJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHBsYWluRGF0YTtcbn1cblxudmFyICRpbnRlcm5hbEhvb2tzID0gW1xuICAgICdkYXRhJyxcbiAgICAnYmVmb3JlQ3JlYXRlJyxcbiAgICAnY3JlYXRlZCcsXG4gICAgJ2JlZm9yZU1vdW50JyxcbiAgICAnbW91bnRlZCcsXG4gICAgJ2JlZm9yZURlc3Ryb3knLFxuICAgICdkZXN0cm95ZWQnLFxuICAgICdiZWZvcmVVcGRhdGUnLFxuICAgICd1cGRhdGVkJyxcbiAgICAnYWN0aXZhdGVkJyxcbiAgICAnZGVhY3RpdmF0ZWQnLFxuICAgICdyZW5kZXInLFxuICAgICdlcnJvckNhcHR1cmVkJyxcbiAgICAnc2VydmVyUHJlZmV0Y2gnIC8vIDIuNlxuXTtcbmZ1bmN0aW9uIGNvbXBvbmVudEZhY3RvcnkoQ29tcG9uZW50LCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cbiAgICBvcHRpb25zLm5hbWUgPSBvcHRpb25zLm5hbWUgfHwgQ29tcG9uZW50Ll9jb21wb25lbnRUYWcgfHwgQ29tcG9uZW50Lm5hbWU7XG4gICAgLy8gcHJvdG90eXBlIHByb3BzLlxuICAgIHZhciBwcm90byA9IENvbXBvbmVudC5wcm90b3R5cGU7XG4gICAgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMocHJvdG8pLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBpZiAoa2V5ID09PSAnY29uc3RydWN0b3InKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy8gaG9va3NcbiAgICAgICAgaWYgKCRpbnRlcm5hbEhvb2tzLmluZGV4T2Yoa2V5KSA+IC0xKSB7XG4gICAgICAgICAgICBvcHRpb25zW2tleV0gPSBwcm90b1trZXldO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihwcm90bywga2V5KTtcbiAgICAgICAgaWYgKGRlc2NyaXB0b3IudmFsdWUgIT09IHZvaWQgMCkge1xuICAgICAgICAgICAgLy8gbWV0aG9kc1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBkZXNjcmlwdG9yLnZhbHVlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgKG9wdGlvbnMubWV0aG9kcyB8fCAob3B0aW9ucy5tZXRob2RzID0ge30pKVtrZXldID0gZGVzY3JpcHRvci52YWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIHR5cGVzY3JpcHQgZGVjb3JhdGVkIGRhdGFcbiAgICAgICAgICAgICAgICAob3B0aW9ucy5taXhpbnMgfHwgKG9wdGlvbnMubWl4aW5zID0gW10pKS5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9hID0ge30sIF9hW2tleV0gPSBkZXNjcmlwdG9yLnZhbHVlLCBfYTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGRlc2NyaXB0b3IuZ2V0IHx8IGRlc2NyaXB0b3Iuc2V0KSB7XG4gICAgICAgICAgICAvLyBjb21wdXRlZCBwcm9wZXJ0aWVzXG4gICAgICAgICAgICAob3B0aW9ucy5jb21wdXRlZCB8fCAob3B0aW9ucy5jb21wdXRlZCA9IHt9KSlba2V5XSA9IHtcbiAgICAgICAgICAgICAgICBnZXQ6IGRlc2NyaXB0b3IuZ2V0LFxuICAgICAgICAgICAgICAgIHNldDogZGVzY3JpcHRvci5zZXRcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICAob3B0aW9ucy5taXhpbnMgfHwgKG9wdGlvbnMubWl4aW5zID0gW10pKS5wdXNoKHtcbiAgICAgICAgZGF0YTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbGxlY3REYXRhRnJvbUNvbnN0cnVjdG9yKHRoaXMsIENvbXBvbmVudCk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICAvLyBkZWNvcmF0ZSBvcHRpb25zXG4gICAgdmFyIGRlY29yYXRvcnMgPSBDb21wb25lbnQuX19kZWNvcmF0b3JzX187XG4gICAgaWYgKGRlY29yYXRvcnMpIHtcbiAgICAgICAgZGVjb3JhdG9ycy5mb3JFYWNoKGZ1bmN0aW9uIChmbikgeyByZXR1cm4gZm4ob3B0aW9ucyk7IH0pO1xuICAgICAgICBkZWxldGUgQ29tcG9uZW50Ll9fZGVjb3JhdG9yc19fO1xuICAgIH1cbiAgICAvLyBmaW5kIHN1cGVyXG4gICAgdmFyIHN1cGVyUHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQ29tcG9uZW50LnByb3RvdHlwZSk7XG4gICAgdmFyIFN1cGVyID0gc3VwZXJQcm90byBpbnN0YW5jZW9mIFZ1ZVxuICAgICAgICA/IHN1cGVyUHJvdG8uY29uc3RydWN0b3JcbiAgICAgICAgOiBWdWU7XG4gICAgdmFyIEV4dGVuZGVkID0gU3VwZXIuZXh0ZW5kKG9wdGlvbnMpO1xuICAgIGZvcndhcmRTdGF0aWNNZW1iZXJzKEV4dGVuZGVkLCBDb21wb25lbnQsIFN1cGVyKTtcbiAgICBpZiAocmVmbGVjdGlvbklzU3VwcG9ydGVkKSB7XG4gICAgICAgIGNvcHlSZWZsZWN0aW9uTWV0YWRhdGEoRXh0ZW5kZWQsIENvbXBvbmVudCk7XG4gICAgfVxuICAgIHJldHVybiBFeHRlbmRlZDtcbn1cbnZhciByZXNlcnZlZFByb3BlcnR5TmFtZXMgPSBbXG4gICAgLy8gVW5pcXVlIGlkXG4gICAgJ2NpZCcsXG4gICAgLy8gU3VwZXIgVnVlIGNvbnN0cnVjdG9yXG4gICAgJ3N1cGVyJyxcbiAgICAvLyBDb21wb25lbnQgb3B0aW9ucyB0aGF0IHdpbGwgYmUgdXNlZCBieSB0aGUgY29tcG9uZW50XG4gICAgJ29wdGlvbnMnLFxuICAgICdzdXBlck9wdGlvbnMnLFxuICAgICdleHRlbmRPcHRpb25zJyxcbiAgICAnc2VhbGVkT3B0aW9ucycsXG4gICAgLy8gUHJpdmF0ZSBhc3NldHNcbiAgICAnY29tcG9uZW50JyxcbiAgICAnZGlyZWN0aXZlJyxcbiAgICAnZmlsdGVyJ1xuXTtcbnZhciBzaG91bGRJZ25vcmUgPSB7XG4gICAgcHJvdG90eXBlOiB0cnVlLFxuICAgIGFyZ3VtZW50czogdHJ1ZSxcbiAgICBjYWxsZWU6IHRydWUsXG4gICAgY2FsbGVyOiB0cnVlXG59O1xuZnVuY3Rpb24gZm9yd2FyZFN0YXRpY01lbWJlcnMoRXh0ZW5kZWQsIE9yaWdpbmFsLCBTdXBlcikge1xuICAgIC8vIFdlIGhhdmUgdG8gdXNlIGdldE93blByb3BlcnR5TmFtZXMgc2luY2UgQmFiZWwgcmVnaXN0ZXJzIG1ldGhvZHMgYXMgbm9uLWVudW1lcmFibGVcbiAgICBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhPcmlnaW5hbCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIC8vIFNraXAgdGhlIHByb3BlcnRpZXMgdGhhdCBzaG91bGQgbm90IGJlIG92ZXJ3cml0dGVuXG4gICAgICAgIGlmIChzaG91bGRJZ25vcmVba2V5XSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vIFNvbWUgYnJvd3NlcnMgZG9lcyBub3QgYWxsb3cgcmVjb25maWd1cmUgYnVpbHQtaW4gcHJvcGVydGllc1xuICAgICAgICB2YXIgZXh0ZW5kZWREZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihFeHRlbmRlZCwga2V5KTtcbiAgICAgICAgaWYgKGV4dGVuZGVkRGVzY3JpcHRvciAmJiAhZXh0ZW5kZWREZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihPcmlnaW5hbCwga2V5KTtcbiAgICAgICAgLy8gSWYgdGhlIHVzZXIgYWdlbnQgZG9lcyBub3Qgc3VwcG9ydCBgX19wcm90b19fYCBvciBpdHMgZmFtaWx5IChJRSA8PSAxMCksXG4gICAgICAgIC8vIHRoZSBzdWIgY2xhc3MgcHJvcGVydGllcyBtYXkgYmUgaW5oZXJpdGVkIHByb3BlcnRpZXMgZnJvbSB0aGUgc3VwZXIgY2xhc3MgaW4gVHlwZVNjcmlwdC5cbiAgICAgICAgLy8gV2UgbmVlZCB0byBleGNsdWRlIHN1Y2ggcHJvcGVydGllcyB0byBwcmV2ZW50IHRvIG92ZXJ3cml0ZVxuICAgICAgICAvLyB0aGUgY29tcG9uZW50IG9wdGlvbnMgb2JqZWN0IHdoaWNoIHN0b3JlZCBvbiB0aGUgZXh0ZW5kZWQgY29uc3RydWN0b3IgKFNlZSAjMTkyKS5cbiAgICAgICAgLy8gSWYgdGhlIHZhbHVlIGlzIGEgcmVmZXJlbmNlZCB2YWx1ZSAob2JqZWN0IG9yIGZ1bmN0aW9uKSxcbiAgICAgICAgLy8gd2UgY2FuIGNoZWNrIGVxdWFsaXR5IG9mIHRoZW0gYW5kIGV4Y2x1ZGUgaXQgaWYgdGhleSBoYXZlIHRoZSBzYW1lIHJlZmVyZW5jZS5cbiAgICAgICAgLy8gSWYgaXQgaXMgYSBwcmltaXRpdmUgdmFsdWUsIGl0IHdpbGwgYmUgZm9yd2FyZGVkIGZvciBzYWZldHkuXG4gICAgICAgIGlmICghaGFzUHJvdG8pIHtcbiAgICAgICAgICAgIC8vIE9ubHkgYGNpZGAgaXMgZXhwbGljaXRseSBleGx1ZGVkIGZyb20gcHJvcGVydHkgZm9yd2FyZGluZ1xuICAgICAgICAgICAgLy8gYmVjYXVzZSB3ZSBjYW5ub3QgZGV0ZWN0IHdoZXRoZXIgaXQgaXMgYSBpbmhlcml0ZWQgcHJvcGVydHkgb3Igbm90XG4gICAgICAgICAgICAvLyBvbiB0aGUgbm8gYF9fcHJvdG9fX2AgZW52aXJvbm1lbnQgZXZlbiB0aG91Z2ggdGhlIHByb3BlcnR5IGlzIHJlc2VydmVkLlxuICAgICAgICAgICAgaWYgKGtleSA9PT0gJ2NpZCcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgc3VwZXJEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihTdXBlciwga2V5KTtcbiAgICAgICAgICAgIGlmICghaXNQcmltaXRpdmUoZGVzY3JpcHRvci52YWx1ZSkgJiZcbiAgICAgICAgICAgICAgICBzdXBlckRlc2NyaXB0b3IgJiZcbiAgICAgICAgICAgICAgICBzdXBlckRlc2NyaXB0b3IudmFsdWUgPT09IGRlc2NyaXB0b3IudmFsdWUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gV2FybiBpZiB0aGUgdXNlcnMgbWFudWFsbHkgZGVjbGFyZSByZXNlcnZlZCBwcm9wZXJ0aWVzXG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmXG4gICAgICAgICAgICByZXNlcnZlZFByb3BlcnR5TmFtZXMuaW5kZXhPZihrZXkpID49IDApIHtcbiAgICAgICAgICAgIHdhcm4oXCJTdGF0aWMgcHJvcGVydHkgbmFtZSAnXCIgKyBrZXkgKyBcIicgZGVjbGFyZWQgb24gY2xhc3MgJ1wiICsgT3JpZ2luYWwubmFtZSArIFwiJyBcIiArXG4gICAgICAgICAgICAgICAgJ2NvbmZsaWN0cyB3aXRoIHJlc2VydmVkIHByb3BlcnR5IG5hbWUgb2YgVnVlIGludGVybmFsLiAnICtcbiAgICAgICAgICAgICAgICAnSXQgbWF5IGNhdXNlIHVuZXhwZWN0ZWQgYmVoYXZpb3Igb2YgdGhlIGNvbXBvbmVudC4gQ29uc2lkZXIgcmVuYW1pbmcgdGhlIHByb3BlcnR5LicpO1xuICAgICAgICB9XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShFeHRlbmRlZCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gQ29tcG9uZW50KG9wdGlvbnMpIHtcbiAgICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudEZhY3Rvcnkob3B0aW9ucyk7XG4gICAgfVxuICAgIHJldHVybiBmdW5jdGlvbiAoQ29tcG9uZW50KSB7XG4gICAgICAgIHJldHVybiBjb21wb25lbnRGYWN0b3J5KENvbXBvbmVudCwgb3B0aW9ucyk7XG4gICAgfTtcbn1cbkNvbXBvbmVudC5yZWdpc3Rlckhvb2tzID0gZnVuY3Rpb24gcmVnaXN0ZXJIb29rcyhrZXlzKSB7XG4gICAgJGludGVybmFsSG9va3MucHVzaC5hcHBseSgkaW50ZXJuYWxIb29rcywga2V5cyk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5leHBvcnQgeyBjcmVhdGVEZWNvcmF0b3IsIG1peGlucyB9O1xuIiwiLyoqIHZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3IgdmVyc29uIDguMi4xIE1JVCBMSUNFTlNFIGNvcHlyaWdodCAyMDE5IGthb3J1bjM0MyAqL1xuLy8vIDxyZWZlcmVuY2UgdHlwZXM9J3JlZmxlY3QtbWV0YWRhdGEnLz5cbid1c2Ugc3RyaWN0JztcbmltcG9ydCBWdWUgZnJvbSAndnVlJztcbmltcG9ydCBDb21wb25lbnQsIHsgY3JlYXRlRGVjb3JhdG9yLCBtaXhpbnMgfSBmcm9tICd2dWUtY2xhc3MtY29tcG9uZW50JztcbmV4cG9ydCB7IENvbXBvbmVudCwgVnVlLCBtaXhpbnMgYXMgTWl4aW5zIH07XG4vKiogVXNlZCBmb3Iga2V5aW5nIHJlYWN0aXZlIHByb3ZpZGUvaW5qZWN0IHByb3BlcnRpZXMgKi9cbnZhciByZWFjdGl2ZUluamVjdEtleSA9ICdfX3JlYWN0aXZlSW5qZWN0X18nO1xuLyoqXG4gKiBkZWNvcmF0b3Igb2YgYW4gaW5qZWN0XG4gKiBAcGFyYW0gZnJvbSBrZXlcbiAqIEByZXR1cm4gUHJvcGVydHlEZWNvcmF0b3JcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIEluamVjdChvcHRpb25zKSB7XG4gICAgcmV0dXJuIGNyZWF0ZURlY29yYXRvcihmdW5jdGlvbiAoY29tcG9uZW50T3B0aW9ucywga2V5KSB7XG4gICAgICAgIGlmICh0eXBlb2YgY29tcG9uZW50T3B0aW9ucy5pbmplY3QgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBjb21wb25lbnRPcHRpb25zLmluamVjdCA9IHt9O1xuICAgICAgICB9XG4gICAgICAgIGlmICghQXJyYXkuaXNBcnJheShjb21wb25lbnRPcHRpb25zLmluamVjdCkpIHtcbiAgICAgICAgICAgIGNvbXBvbmVudE9wdGlvbnMuaW5qZWN0W2tleV0gPSBvcHRpb25zIHx8IGtleTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuLyoqXG4gKiBkZWNvcmF0b3Igb2YgYSByZWFjdGl2ZSBpbmplY3RcbiAqIEBwYXJhbSBmcm9tIGtleVxuICogQHJldHVybiBQcm9wZXJ0eURlY29yYXRvclxuICovXG5leHBvcnQgZnVuY3Rpb24gSW5qZWN0UmVhY3RpdmUob3B0aW9ucykge1xuICAgIHJldHVybiBjcmVhdGVEZWNvcmF0b3IoZnVuY3Rpb24gKGNvbXBvbmVudE9wdGlvbnMsIGtleSkge1xuICAgICAgICBpZiAodHlwZW9mIGNvbXBvbmVudE9wdGlvbnMuaW5qZWN0ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgY29tcG9uZW50T3B0aW9ucy5pbmplY3QgPSB7fTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkoY29tcG9uZW50T3B0aW9ucy5pbmplY3QpKSB7XG4gICAgICAgICAgICB2YXIgZnJvbUtleV8xID0gISFvcHRpb25zID8gb3B0aW9ucy5mcm9tIHx8IG9wdGlvbnMgOiBrZXk7XG4gICAgICAgICAgICB2YXIgZGVmYXVsdFZhbF8xID0gKCEhb3B0aW9ucyAmJiBvcHRpb25zLmRlZmF1bHQpIHx8IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIGlmICghY29tcG9uZW50T3B0aW9ucy5jb21wdXRlZClcbiAgICAgICAgICAgICAgICBjb21wb25lbnRPcHRpb25zLmNvbXB1dGVkID0ge307XG4gICAgICAgICAgICBjb21wb25lbnRPcHRpb25zLmNvbXB1dGVkW2tleV0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG9iaiA9IHRoaXNbcmVhY3RpdmVJbmplY3RLZXldO1xuICAgICAgICAgICAgICAgIHJldHVybiBvYmogPyBvYmpbZnJvbUtleV8xXSA6IGRlZmF1bHRWYWxfMTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjb21wb25lbnRPcHRpb25zLmluamVjdFtyZWFjdGl2ZUluamVjdEtleV0gPSByZWFjdGl2ZUluamVjdEtleTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuLyoqXG4gKiBkZWNvcmF0b3Igb2YgYSBwcm92aWRlXG4gKiBAcGFyYW0ga2V5IGtleVxuICogQHJldHVybiBQcm9wZXJ0eURlY29yYXRvciB8IHZvaWRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIFByb3ZpZGUoa2V5KSB7XG4gICAgcmV0dXJuIGNyZWF0ZURlY29yYXRvcihmdW5jdGlvbiAoY29tcG9uZW50T3B0aW9ucywgaykge1xuICAgICAgICB2YXIgcHJvdmlkZSA9IGNvbXBvbmVudE9wdGlvbnMucHJvdmlkZTtcbiAgICAgICAgaWYgKHR5cGVvZiBwcm92aWRlICE9PSAnZnVuY3Rpb24nIHx8ICFwcm92aWRlLm1hbmFnZWQpIHtcbiAgICAgICAgICAgIHZhciBvcmlnaW5hbF8xID0gY29tcG9uZW50T3B0aW9ucy5wcm92aWRlO1xuICAgICAgICAgICAgcHJvdmlkZSA9IGNvbXBvbmVudE9wdGlvbnMucHJvdmlkZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcnYgPSBPYmplY3QuY3JlYXRlKCh0eXBlb2Ygb3JpZ2luYWxfMSA9PT0gJ2Z1bmN0aW9uJyA/IG9yaWdpbmFsXzEuY2FsbCh0aGlzKSA6IG9yaWdpbmFsXzEpIHx8XG4gICAgICAgICAgICAgICAgICAgIG51bGwpO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgaW4gcHJvdmlkZS5tYW5hZ2VkKVxuICAgICAgICAgICAgICAgICAgICBydltwcm92aWRlLm1hbmFnZWRbaV1dID0gdGhpc1tpXTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcnY7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcHJvdmlkZS5tYW5hZ2VkID0ge307XG4gICAgICAgIH1cbiAgICAgICAgcHJvdmlkZS5tYW5hZ2VkW2tdID0ga2V5IHx8IGs7XG4gICAgfSk7XG59XG4vKipcbiAqIGRlY29yYXRvciBvZiBhIHJlYWN0aXZlIHByb3ZpZGVcbiAqIEBwYXJhbSBrZXkga2V5XG4gKiBAcmV0dXJuIFByb3BlcnR5RGVjb3JhdG9yIHwgdm9pZFxuICovXG5leHBvcnQgZnVuY3Rpb24gUHJvdmlkZVJlYWN0aXZlKGtleSkge1xuICAgIHJldHVybiBjcmVhdGVEZWNvcmF0b3IoZnVuY3Rpb24gKGNvbXBvbmVudE9wdGlvbnMsIGspIHtcbiAgICAgICAgdmFyIHByb3ZpZGUgPSBjb21wb25lbnRPcHRpb25zLnByb3ZpZGU7XG4gICAgICAgIGlmICh0eXBlb2YgcHJvdmlkZSAhPT0gJ2Z1bmN0aW9uJyB8fCAhcHJvdmlkZS5tYW5hZ2VkKSB7XG4gICAgICAgICAgICB2YXIgb3JpZ2luYWxfMiA9IGNvbXBvbmVudE9wdGlvbnMucHJvdmlkZTtcbiAgICAgICAgICAgIHByb3ZpZGUgPSBjb21wb25lbnRPcHRpb25zLnByb3ZpZGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgICAgICAgICB2YXIgcnYgPSBPYmplY3QuY3JlYXRlKCh0eXBlb2Ygb3JpZ2luYWxfMiA9PT0gJ2Z1bmN0aW9uJyA/IG9yaWdpbmFsXzIuY2FsbCh0aGlzKSA6IG9yaWdpbmFsXzIpIHx8XG4gICAgICAgICAgICAgICAgICAgIG51bGwpO1xuICAgICAgICAgICAgICAgIHJ2W3JlYWN0aXZlSW5qZWN0S2V5XSA9IHt9O1xuICAgICAgICAgICAgICAgIHZhciBfbG9vcF8xID0gZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICAgICAgICAgICAgcnZbcHJvdmlkZS5tYW5hZ2VkW2ldXSA9IHRoaXNfMVtpXTsgLy8gRHVwbGljYXRlcyB0aGUgYmVoYXZpb3Igb2YgYEBQcm92aWRlYFxuICAgICAgICAgICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkocnZbcmVhY3RpdmVJbmplY3RLZXldLCBwcm92aWRlLm1hbmFnZWRbaV0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzW2ldOyB9LFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIHZhciB0aGlzXzEgPSB0aGlzO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgaW4gcHJvdmlkZS5tYW5hZ2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIF9sb29wXzEoaSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBydjtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBwcm92aWRlLm1hbmFnZWQgPSB7fTtcbiAgICAgICAgfVxuICAgICAgICBwcm92aWRlLm1hbmFnZWRba10gPSBrZXkgfHwgaztcbiAgICB9KTtcbn1cbi8qKiBAc2VlIHtAbGluayBodHRwczovL2dpdGh1Yi5jb20vdnVlanMvdnVlLWNsYXNzLWNvbXBvbmVudC9ibG9iL21hc3Rlci9zcmMvcmVmbGVjdC50c30gKi9cbnZhciByZWZsZWN0TWV0YWRhdGFJc1N1cHBvcnRlZCA9IHR5cGVvZiBSZWZsZWN0ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgUmVmbGVjdC5nZXRNZXRhZGF0YSAhPT0gJ3VuZGVmaW5lZCc7XG5mdW5jdGlvbiBhcHBseU1ldGFkYXRhKG9wdGlvbnMsIHRhcmdldCwga2V5KSB7XG4gICAgaWYgKHJlZmxlY3RNZXRhZGF0YUlzU3VwcG9ydGVkKSB7XG4gICAgICAgIGlmICghQXJyYXkuaXNBcnJheShvcHRpb25zKSAmJlxuICAgICAgICAgICAgdHlwZW9mIG9wdGlvbnMgIT09ICdmdW5jdGlvbicgJiZcbiAgICAgICAgICAgIHR5cGVvZiBvcHRpb25zLnR5cGUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBvcHRpb25zLnR5cGUgPSBSZWZsZWN0LmdldE1ldGFkYXRhKCdkZXNpZ246dHlwZScsIHRhcmdldCwga2V5KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8qKlxuICogZGVjb3JhdG9yIG9mIG1vZGVsXG4gKiBAcGFyYW0gIGV2ZW50IGV2ZW50IG5hbWVcbiAqIEBwYXJhbSBvcHRpb25zIG9wdGlvbnNcbiAqIEByZXR1cm4gUHJvcGVydHlEZWNvcmF0b3JcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIE1vZGVsKGV2ZW50LCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cbiAgICByZXR1cm4gZnVuY3Rpb24gKHRhcmdldCwga2V5KSB7XG4gICAgICAgIGFwcGx5TWV0YWRhdGEob3B0aW9ucywgdGFyZ2V0LCBrZXkpO1xuICAgICAgICBjcmVhdGVEZWNvcmF0b3IoZnVuY3Rpb24gKGNvbXBvbmVudE9wdGlvbnMsIGspIHtcbiAgICAgICAgICAgIDtcbiAgICAgICAgICAgIChjb21wb25lbnRPcHRpb25zLnByb3BzIHx8IChjb21wb25lbnRPcHRpb25zLnByb3BzID0ge30pKVtrXSA9IG9wdGlvbnM7XG4gICAgICAgICAgICBjb21wb25lbnRPcHRpb25zLm1vZGVsID0geyBwcm9wOiBrLCBldmVudDogZXZlbnQgfHwgayB9O1xuICAgICAgICB9KSh0YXJnZXQsIGtleSk7XG4gICAgfTtcbn1cbi8qKlxuICogZGVjb3JhdG9yIG9mIGEgcHJvcFxuICogQHBhcmFtICBvcHRpb25zIHRoZSBvcHRpb25zIGZvciB0aGUgcHJvcFxuICogQHJldHVybiBQcm9wZXJ0eURlY29yYXRvciB8IHZvaWRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIFByb3Aob3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uICh0YXJnZXQsIGtleSkge1xuICAgICAgICBhcHBseU1ldGFkYXRhKG9wdGlvbnMsIHRhcmdldCwga2V5KTtcbiAgICAgICAgY3JlYXRlRGVjb3JhdG9yKGZ1bmN0aW9uIChjb21wb25lbnRPcHRpb25zLCBrKSB7XG4gICAgICAgICAgICA7XG4gICAgICAgICAgICAoY29tcG9uZW50T3B0aW9ucy5wcm9wcyB8fCAoY29tcG9uZW50T3B0aW9ucy5wcm9wcyA9IHt9KSlba10gPSBvcHRpb25zO1xuICAgICAgICB9KSh0YXJnZXQsIGtleSk7XG4gICAgfTtcbn1cbi8qKlxuICogZGVjb3JhdG9yIG9mIGEgc3luY2VkIHByb3BcbiAqIEBwYXJhbSBwcm9wTmFtZSB0aGUgbmFtZSB0byBpbnRlcmZhY2Ugd2l0aCBmcm9tIG91dHNpZGUsIG11c3QgYmUgZGlmZmVyZW50IGZyb20gZGVjb3JhdGVkIHByb3BlcnR5XG4gKiBAcGFyYW0gb3B0aW9ucyB0aGUgb3B0aW9ucyBmb3IgdGhlIHN5bmNlZCBwcm9wXG4gKiBAcmV0dXJuIFByb3BlcnR5RGVjb3JhdG9yIHwgdm9pZFxuICovXG5leHBvcnQgZnVuY3Rpb24gUHJvcFN5bmMocHJvcE5hbWUsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICByZXR1cm4gZnVuY3Rpb24gKHRhcmdldCwga2V5KSB7XG4gICAgICAgIGFwcGx5TWV0YWRhdGEob3B0aW9ucywgdGFyZ2V0LCBrZXkpO1xuICAgICAgICBjcmVhdGVEZWNvcmF0b3IoZnVuY3Rpb24gKGNvbXBvbmVudE9wdGlvbnMsIGspIHtcbiAgICAgICAgICAgIDtcbiAgICAgICAgICAgIChjb21wb25lbnRPcHRpb25zLnByb3BzIHx8IChjb21wb25lbnRPcHRpb25zLnByb3BzID0ge30pKVtwcm9wTmFtZV0gPSBvcHRpb25zO1xuICAgICAgICAgICAgKGNvbXBvbmVudE9wdGlvbnMuY29tcHV0ZWQgfHwgKGNvbXBvbmVudE9wdGlvbnMuY29tcHV0ZWQgPSB7fSkpW2tdID0ge1xuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpc1twcm9wTmFtZV07XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoXCJ1cGRhdGU6XCIgKyBwcm9wTmFtZSwgdmFsdWUpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KSh0YXJnZXQsIGtleSk7XG4gICAgfTtcbn1cbi8qKlxuICogZGVjb3JhdG9yIG9mIGEgd2F0Y2ggZnVuY3Rpb25cbiAqIEBwYXJhbSAgcGF0aCB0aGUgcGF0aCBvciB0aGUgZXhwcmVzc2lvbiB0byBvYnNlcnZlXG4gKiBAcGFyYW0gIFdhdGNoT3B0aW9uXG4gKiBAcmV0dXJuIE1ldGhvZERlY29yYXRvclxuICovXG5leHBvcnQgZnVuY3Rpb24gV2F0Y2gocGF0aCwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XG4gICAgdmFyIF9hID0gb3B0aW9ucy5kZWVwLCBkZWVwID0gX2EgPT09IHZvaWQgMCA/IGZhbHNlIDogX2EsIF9iID0gb3B0aW9ucy5pbW1lZGlhdGUsIGltbWVkaWF0ZSA9IF9iID09PSB2b2lkIDAgPyBmYWxzZSA6IF9iO1xuICAgIHJldHVybiBjcmVhdGVEZWNvcmF0b3IoZnVuY3Rpb24gKGNvbXBvbmVudE9wdGlvbnMsIGhhbmRsZXIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBjb21wb25lbnRPcHRpb25zLndhdGNoICE9PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgY29tcG9uZW50T3B0aW9ucy53YXRjaCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHdhdGNoID0gY29tcG9uZW50T3B0aW9ucy53YXRjaDtcbiAgICAgICAgaWYgKHR5cGVvZiB3YXRjaFtwYXRoXSA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkod2F0Y2hbcGF0aF0pKSB7XG4gICAgICAgICAgICB3YXRjaFtwYXRoXSA9IFt3YXRjaFtwYXRoXV07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIHdhdGNoW3BhdGhdID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgd2F0Y2hbcGF0aF0gPSBbXTtcbiAgICAgICAgfVxuICAgICAgICB3YXRjaFtwYXRoXS5wdXNoKHsgaGFuZGxlcjogaGFuZGxlciwgZGVlcDogZGVlcCwgaW1tZWRpYXRlOiBpbW1lZGlhdGUgfSk7XG4gICAgfSk7XG59XG4vLyBDb2RlIGNvcGllZCBmcm9tIFZ1ZS9zcmMvc2hhcmVkL3V0aWwuanNcbnZhciBoeXBoZW5hdGVSRSA9IC9cXEIoW0EtWl0pL2c7XG52YXIgaHlwaGVuYXRlID0gZnVuY3Rpb24gKHN0cikgeyByZXR1cm4gc3RyLnJlcGxhY2UoaHlwaGVuYXRlUkUsICctJDEnKS50b0xvd2VyQ2FzZSgpOyB9O1xuLyoqXG4gKiBkZWNvcmF0b3Igb2YgYW4gZXZlbnQtZW1pdHRlciBmdW5jdGlvblxuICogQHBhcmFtICBldmVudCBUaGUgbmFtZSBvZiB0aGUgZXZlbnRcbiAqIEByZXR1cm4gTWV0aG9kRGVjb3JhdG9yXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBFbWl0KGV2ZW50KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChfdGFyZ2V0LCBrZXksIGRlc2NyaXB0b3IpIHtcbiAgICAgICAga2V5ID0gaHlwaGVuYXRlKGtleSk7XG4gICAgICAgIHZhciBvcmlnaW5hbCA9IGRlc2NyaXB0b3IudmFsdWU7XG4gICAgICAgIGRlc2NyaXB0b3IudmFsdWUgPSBmdW5jdGlvbiBlbWl0dGVyKCkge1xuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgICAgIHZhciBhcmdzID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBlbWl0ID0gZnVuY3Rpb24gKHJldHVyblZhbHVlKSB7XG4gICAgICAgICAgICAgICAgaWYgKHJldHVyblZhbHVlICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgICAgIGFyZ3MudW5zaGlmdChyZXR1cm5WYWx1ZSk7XG4gICAgICAgICAgICAgICAgX3RoaXMuJGVtaXQuYXBwbHkoX3RoaXMsIFtldmVudCB8fCBrZXldLmNvbmNhdChhcmdzKSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdmFyIHJldHVyblZhbHVlID0gb3JpZ2luYWwuYXBwbHkodGhpcywgYXJncyk7XG4gICAgICAgICAgICBpZiAoaXNQcm9taXNlKHJldHVyblZhbHVlKSkge1xuICAgICAgICAgICAgICAgIHJldHVyblZhbHVlLnRoZW4oZnVuY3Rpb24gKHJldHVyblZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGVtaXQocmV0dXJuVmFsdWUpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZW1pdChyZXR1cm5WYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmV0dXJuVmFsdWU7XG4gICAgICAgIH07XG4gICAgfTtcbn1cbi8qKlxuICogZGVjb3JhdG9yIG9mIGEgcmVmIHByb3BcbiAqIEBwYXJhbSByZWZLZXkgdGhlIHJlZiBrZXkgZGVmaW5lZCBpbiB0ZW1wbGF0ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gUmVmKHJlZktleSkge1xuICAgIHJldHVybiBjcmVhdGVEZWNvcmF0b3IoZnVuY3Rpb24gKG9wdGlvbnMsIGtleSkge1xuICAgICAgICBvcHRpb25zLmNvbXB1dGVkID0gb3B0aW9ucy5jb21wdXRlZCB8fCB7fTtcbiAgICAgICAgb3B0aW9ucy5jb21wdXRlZFtrZXldID0ge1xuICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHJlZnNbcmVmS2V5IHx8IGtleV07XG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH0pO1xufVxuZnVuY3Rpb24gaXNQcm9taXNlKG9iaikge1xuICAgIHJldHVybiBvYmogaW5zdGFuY2VvZiBQcm9taXNlIHx8IChvYmogJiYgdHlwZW9mIG9iai50aGVuID09PSAnZnVuY3Rpb24nKTtcbn1cbiIsImltcG9ydCBWdWUgZnJvbSBcInZ1ZVwiO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBQcm9wIH0gZnJvbSBcInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3JcIjtcblxuaW1wb3J0IFN1ZG9rdVNxdWFyZSBmcm9tIFwiLi9TdWRva3VTcXVhcmVcIjtcbmltcG9ydCBOdW1wYWRCdXR0b24gZnJvbSBcIi4vTnVtcGFkQnV0dG9uXCI7XG5cbi8vIHNoYXJlZCBzdGF0ZSBiZXR3ZWVuIHN1YmNvbXBvbmVudHMuXG5AQ29tcG9uZW50XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdWRva3VTdGF0ZSBleHRlbmRzIFZ1ZSB7XG4gICAgLy8gc3RhdGljc1xuICAgIHN0YXRpYyByZWFkb25seSBTZWN0aW9uVHlwZSA9IE9iamVjdC5mcmVlemUoe1xuICAgICAgICBSb3c6IFwicm93XCIsXG4gICAgICAgIENvbHVtbjogXCJjb2x1bW5cIixcbiAgICAgICAgU3ViZ3JpZDogXCJzdWJncmlkXCIsXG4gICAgfSk7XG5cbiAgICBzdGF0aWMgcmVhZG9ubHkgU29sdXRpb25UeXBlID0gT2JqZWN0LmZyZWV6ZSh7XG4gICAgICAgIE5vbmU6IG51bGwsXG4gICAgICAgIEludmFsaWQ6IFwiQm9hcmQgSW52YWxpZFwiLFxuICAgICAgICBJbmNvbXBsZXRlOiBcIkJvYXJkIEluY29tcGxldGVcIixcbiAgICAgICAgVmFsaWQ6IFwiWW91IHdpbiEhISEhXCIsXG4gICAgfSk7XG5cbiAgICBAUHJvcCgpXG4gICAgcHVibGljIG1pbmlncmlkU2l6ZSE6IG51bWJlcjtcblxuICAgIC8vIHRyYWNrIGFjdGl2ZSBzcXVhcmUgYW5kIG51bXBhZCBmb3IgY29ycmVjdGx5IHVwZGF0aW5nIHN0YXRlIGFuZCBsaWdodHVwIHN0YXR1cy5cbiAgICAvLyBhbHNvIGZvciByZXNldHRpbmcgdGhvc2UgYXMgd2UgbW92ZSBhcm91bmQgdGhlIGJvYXJkLlxuICAgIHB1YmxpYyBhY3RpdmVHcmlkU3F1YXJlOiBTdWRva3VTcXVhcmV8bnVsbCA9IG51bGw7XG5cbiAgICBwdWJsaWMgYWN0aXZlTnVtcGFkU3F1YXJlOiBOdW1wYWRCdXR0b258bnVsbCA9IG51bGw7XG5cbiAgICAvLyBhcmUgd2UgaW4gZ3Vlc3MgbW9kZSBvciBub3RlIGVkaXQgbW9kZT9cbiAgICAvLyBzdHJpbmcgYW5kIGJvb2xlYW4sIHRvIHdvcmsgd2l0aCByYWRpbyBidXR0b25zLlxuICAgIHB1YmxpYyBndWVzc01vZGU6IHN0cmluZyA9IFwiZ3Vlc3NcIjtcbiAgICBwdWJsaWMgaXNHdWVzc01vZGU6IGJvb2xlYW4gPSB0cnVlO1xuXG4gICAgLy8gd2hldGhlciB3ZSBhY3RpdmVseSBrbm93IHRoZXJlIGFyZSBlcnJvcnMgb24gdGhlIGJvYXJkLlxuICAgIHB1YmxpYyBpc0luRXJyb3I6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIC8vIHNvbHV0aW9uIC0gbm90IHN1Ym1pdHRlZCwgaW52YWxpZCwgaW5jb21wbGV0ZSwgdmFsaWQuXG4gICAgcHVibGljIHNvbHV0aW9uU3RhdGU6IHN0cmluZ3xudWxsID0gU3Vkb2t1U3RhdGUuU29sdXRpb25UeXBlLk5vbmU7XG5cbiAgICAvLyBjYWxsYmFja3MgZm9yIHN1YmNvbXBvbmVudHMuXG4gICAgLy8gaW5pdGlhbGl6ZWQgaW4gdGhlIHByb3BlciBzdWJjb21wb25lbnQuXG4gICAgLy8gU3Vkb2t1R3JpZC5cbiAgICBwdWJsaWMgaGFuZGxlR3JpZFVwZGF0ZTogKHZhbHVlOiBudW1iZXIpID0+IHZvaWQgPSB0aGlzLmVycm9yVm9pZDtcbiAgICBwdWJsaWMgb25Cb2FyZENsaWNrOiAocm93OiBudW1iZXIsIGNvbDogbnVtYmVyKSA9PiB2b2lkID0gdGhpcy5lcnJvclZvaWQ7XG4gICAgcHVibGljIGdldEdyaWRTZWN0aW9uOiAoc2VjdGlvbl90eXBlOiBzdHJpbmcsIGluZGV4OiBudW1iZXIpID0+IG51bWJlcltdID0gKCkgPT4ge3JldHVybiBbXX07XG4gICAgcHVibGljIGludmFsaWRhdGVTZWN0aW9uOiAoc2VjdGlvbl90eXBlOiBzdHJpbmcsIGluZGV4OiBudW1iZXIpID0+IHZvaWQgPSB0aGlzLmVycm9yVm9pZDtcbiAgICBwdWJsaWMgaGFzRW1wdHlTcXVhcmVzOiAoKSA9PiBib29sZWFuID0gKCkgPT4ge3JldHVybiBmYWxzZX07XG4gICAgcHVibGljIGdldERpZ2l0c1RvVG9nZ2xlOiAocm93OiBudW1iZXIsIGNvbDogbnVtYmVyKSA9PiBudW1iZXJbXSA9ICgpID0+IHtyZXR1cm4gW119O1xuICAgIHB1YmxpYyBzZXRTcXVhcmVHdWVzc01vZGVzOiAoaXNHdWVzc01vZGU6IGJvb2xlYW4pID0+IHZvaWQgPSB0aGlzLmVycm9yVm9pZDtcbiAgICBwdWJsaWMgaGFuZGxlQm9hcmROYXZpZ2F0ZTogKGFycm93RXZlbnQ6IHN0cmluZykgPT4gdm9pZCA9IHRoaXMuZXJyb3JWb2lkO1xuXG4gICAgLy8gU3Vkb2t1Q2hlY2tlciBjYWxscyB0aGVzZSwgYnV0IGFsbCB0aGUgbmVjZXNzYXJ5IGRhdGEgaXMgaW4gU3Vkb2t1R3JpZC5cbiAgICAvLyBzbyB0aGV5IGxpdmUgdGhlcmUuXG4gICAgcHVibGljIHJlc2V0Qm9hcmQ6ICgpID0+IHZvaWQgPSB0aGlzLmVycm9yVm9pZDtcbiAgICBwdWJsaWMgcmVzZXRCb2FyZEVycm9yczogKCkgPT4gdm9pZCA9IHRoaXMuZXJyb3JWb2lkO1xuXG4gICAgLy8gU3Vkb2t1SW5wdXRcbiAgICBwdWJsaWMgY2xlYXJOdW1wYWRTcXVhcmVzOiAoKSA9PiB2b2lkID0gdGhpcy5lcnJvclZvaWQ7XG4gICAgcHVibGljIGVuYWJsZU51bXBhZFNxdWFyZXM6IChkaWdpdHM6IG51bWJlcltdKSA9PiB2b2lkID0gdGhpcy5lcnJvclZvaWQ7XG4gICAgcHVibGljIG9uTnVtcGFkQ2xpY2s6ICh2YWx1ZTogbnVtYmVyLCByb3c6IG51bWJlciwgY29sOiBudW1iZXIpID0+IHZvaWQgPSB0aGlzLmVycm9yVm9pZDtcbiAgICBwdWJsaWMgbG9hZE51bXBhZFZhbHVlczogKCkgPT4gdm9pZCA9IHRoaXMuZXJyb3JWb2lkO1xuXG4gICAgLy8gU3Vkb2t1Q2hlY2tlclxuICAgIHB1YmxpYyBzdWJtaXQ6ICgpID0+IHZvaWQgPSB0aGlzLmVycm9yVm9pZDtcbiAgICBwdWJsaWMgY2hlY2tCb2FyZDogKCkgPT4gdm9pZCA9IHRoaXMuZXJyb3JWb2lkO1xuXG4gICAgcHJpdmF0ZSBlcnJvclZvaWQoKTogdm9pZCB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiQ0FMTEVEIERFRkFVTFQgTUVUSE9EXCIpO1xuICAgIH1cbn1cbiIsImltcG9ydCBWdWUgZnJvbSBcInZ1ZVwiO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBQcm9wIH0gZnJvbSBcInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3JcIjtcblxuaW1wb3J0IFN1ZG9rdVN0YXRlIGZyb20gXCIuL1N1ZG9rdVN0YXRlXCI7XG5cbmltcG9ydCBXaXRoUmVuZGVyIGZyb20gXCIuLi9odG1sL1N1ZG9rdUNoZWNrZXIuaHRtbFwiO1xuXG5AV2l0aFJlbmRlclxuQENvbXBvbmVudCh7IH0pXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdWRva3VDaGVja2VyIGV4dGVuZHMgVnVlIHtcbiAgICAvLyBQUk9QUyBBTkQgREFUQSBNRU1CRVJTLlxuXG4gICAgLy8gc2hhcmVkIHN0YXRlXG4gICAgQFByb3AoKVxuICAgIHN0YXRlITogU3Vkb2t1U3RhdGU7XG5cbiAgICBtb3VudGVkKCkge1xuICAgICAgICAvLyByZWdpc3RlciBjYWxsYmFja3MuXG4gICAgICAgIHRoaXMuc3RhdGUuY2hlY2tCb2FyZCA9IHRoaXMuY2hlY2tCb2FyZDtcbiAgICAgICAgdGhpcy5zdGF0ZS5zdWJtaXQgPSB0aGlzLnN1Ym1pdDtcbiAgICB9XG5cbiAgICAvLyBwYXJhbWV0ZXJzOiBub25lLlxuICAgIC8vIHJldHVybnM6IG5vbmUuXG4gICAgLy8gcmVzdWx0czogY2hlY2sgYm9hcmQgZm9yIGVycm9ycywgYW5kIHJlcXVlc3Qgc3R5bGUgY2hhbmdlcyBvbiBlcnJvciByb3dzL2NvbHVtbnMvc3ViZ3JpZHMuXG4gICAgcHVibGljIGNoZWNrQm9hcmQoKTogdm9pZCB7XG4gICAgICAgIGxldCBzZWN0aW9uVHlwZXMgPSBbXG4gICAgICAgICAgICBTdWRva3VTdGF0ZS5TZWN0aW9uVHlwZS5Sb3csXG4gICAgICAgICAgICBTdWRva3VTdGF0ZS5TZWN0aW9uVHlwZS5Db2x1bW4sXG4gICAgICAgICAgICBTdWRva3VTdGF0ZS5TZWN0aW9uVHlwZS5TdWJncmlkLFxuICAgICAgICBdO1xuXG4gICAgICAgIGxldCBib2FyZElzVmFsaWQgPSB0cnVlO1xuICAgICAgICBmb3IgKGxldCBzZWN0aW9uVHlwZSBvZiBzZWN0aW9uVHlwZXMpIHtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zdGF0ZS5taW5pZ3JpZFNpemUgKiB0aGlzLnN0YXRlLm1pbmlncmlkU2l6ZTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgbGV0IHNlY3Rpb24gPSB0aGlzLnN0YXRlLmdldEdyaWRTZWN0aW9uKHNlY3Rpb25UeXBlLCBpKTtcblxuICAgICAgICAgICAgICAgIGxldCBzZWVuOiBudW1iZXJbXSA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAobGV0IGVsZW1lbnQgb2Ygc2VjdGlvbikge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudCAhPT0gMCAmJiBzZWVuLmluZGV4T2YoZWxlbWVudCkgIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLmludmFsaWRhdGVTZWN0aW9uKHNlY3Rpb25UeXBlLCBpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvYXJkSXNWYWxpZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlZW4ucHVzaChlbGVtZW50KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghYm9hcmRJc1ZhbGlkKSB7XG4gICAgICAgICAgICB0aGlzLnN0YXRlLmlzSW5FcnJvciA9IHRydWU7XG5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUuaXNJbkVycm9yID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgc3VibWl0KCk6IHZvaWQge1xuICAgICAgICAvLyBmaXJzdCBkbyBhbiBlcnJvciBjaGVjay5cbiAgICAgICAgdGhpcy5zdGF0ZS5jaGVja0JvYXJkKCk7XG5cbiAgICAgICAgaWYgKHRoaXMuc3RhdGUuaXNJbkVycm9yKSB7XG4gICAgICAgICAgICB0aGlzLnN0YXRlLnNvbHV0aW9uU3RhdGUgPSBTdWRva3VTdGF0ZS5Tb2x1dGlvblR5cGUuSW52YWxpZDtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGRvIGFuIGVtcHR5IHNxdWFyZXMgY2hlY2suXG4gICAgICAgIGxldCBib2FyZEhhc0VtcHR5U3F1YXJlcyA9IHRoaXMuc3RhdGUuaGFzRW1wdHlTcXVhcmVzKCk7XG4gICAgICAgIGlmIChib2FyZEhhc0VtcHR5U3F1YXJlcykge1xuICAgICAgICAgICAgdGhpcy5zdGF0ZS5zb2x1dGlvblN0YXRlID0gU3Vkb2t1U3RhdGUuU29sdXRpb25UeXBlLkluY29tcGxldGU7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBjb25ncmF0cyEhXG4gICAgICAgIHRoaXMuc3RhdGUuc29sdXRpb25TdGF0ZSA9IFN1ZG9rdVN0YXRlLlNvbHV0aW9uVHlwZS5WYWxpZDtcbiAgICB9XG59XG4iLCJpbXBvcnQgVnVlIGZyb20gXCJ2dWVcIjtcbmltcG9ydCB7IENvbXBvbmVudCwgUHJvcCB9IGZyb20gXCJ2dWUtcHJvcGVydHktZGVjb3JhdG9yXCI7XG5cbkBDb21wb25lbnRcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN1ZG9rdVNxdWFyZSBleHRlbmRzIFZ1ZSB7XG4gICAgLy8gc3RhdGljcy5cbiAgICAvLyBlcnJvciBzdGF0ZSBrZXlzLlxuICAgIHN0YXRpYyByZWFkb25seSBFcnJvclN0YXRlcyA9IE9iamVjdC5mcmVlemUoe1xuICAgICAgICBMZWZ0Um93OiBcImxlZnRSb3dFcnJvclwiLFxuICAgICAgICBDZW50ZXJSb3c6IFwiY2VudGVyUm93RXJyb3JcIixcbiAgICAgICAgUmlnaHRSb3c6IFwicmlnaHRSb3dFcnJvclwiLFxuXG4gICAgICAgIFRvcENvbHVtbjogXCJ0b3BDb2x1bW5FcnJvclwiLFxuICAgICAgICBNaWRkbGVDb2x1bW46IFwibWlkZGxlQ29sdW1uRXJyb3JcIixcbiAgICAgICAgQm90dG9tQ29sdW1uOiBcImJvdHRvbUNvbHVtbkVycm9yXCIsXG5cbiAgICAgICAgLy8gdWdoLlxuICAgICAgICBUb3BMZWZ0U3ViZ3JpZDogXCJ0b3BMZWZ0U3ViZ3JpZEVycm9yXCIsXG4gICAgICAgIFRvcENlbnRlclN1YmdyaWQ6IFwidG9wQ2VudGVyU3ViZ3JpZEVycm9yXCIsXG4gICAgICAgIFRvcFJpZ2h0U3ViZ3JpZDogXCJ0b3BSaWdodFN1YmdyaWRFcnJvclwiLFxuXG4gICAgICAgIE1pZGRsZUxlZnRTdWJncmlkOiBcIm1pZGRsZUxlZnRTdWJncmlkRXJyb3JcIixcbiAgICAgICAgTWlkZGxlQ2VudGVyU3ViZ3JpZDogXCJtaWRkbGVDZW50ZXJTdWJncmlkRXJyb3JcIixcbiAgICAgICAgTWlkZGxlUmlnaHRTdWJncmlkOiBcIm1pZGRsZVJpZ2h0U3ViZ3JpZEVycm9yXCIsXG5cbiAgICAgICAgQm90dG9tTGVmdFN1YmdyaWQ6IFwiYm90dG9tTGVmdFN1YmdyaWRFcnJvclwiLFxuICAgICAgICBCb3R0b21DZW50ZXJTdWJncmlkOiBcImJvdHRvbUNlbnRlclN1YmdyaWRFcnJvclwiLFxuICAgICAgICBCb3R0b21SaWdodFN1YmdyaWQ6IFwiYm90dG9tUmlnaHRTdWJncmlkRXJyb3JcIixcblxuICAgICAgICBOb25lOiBcIm5vbmVcIixcbiAgICB9KTtcblxuICAgIC8vIHRydWUgdmFsdWUgYW5kIHdoZXRoZXIgaXQncyBzaG93biBpbml0aWFsbHkuXG4gICAgQFByb3AoKVxuICAgIHB1YmxpYyB2YWx1ZSE6IG51bWJlcjtcblxuICAgIEBQcm9wKClcbiAgICBwdWJsaWMgaXNIaW50ITogYm9vbGVhbjtcblxuICAgIC8vIGdyaWQgcG9zaXRpb25cbiAgICBAUHJvcCgpXG4gICAgcHVibGljIHJvdyE6IG51bWJlcjtcbiAgICBAUHJvcCgpXG4gICAgcHVibGljIGNvbHVtbiE6IG51bWJlcjtcblxuICAgIC8vIG1pbmlncmlkIHNpemUsIGZvciBkb2luZyBzb21lIG1hdGguXG4gICAgQFByb3AoKVxuICAgIHB1YmxpYyBtaW5pZ3JpZFNpemUhOiBudW1iZXI7XG5cbiAgICBwdWJsaWMgaXNHdWVzc01vZGU6IGJvb2xlYW4gPSB0cnVlO1xuXG4gICAgcHVibGljIGdldCBjbGFzc2VzKCk6IHN0cmluZ1tdIHtcbiAgICAgICAgbGV0IGNsYXNzZXM6IHN0cmluZ1tdID0gW107XG5cbiAgICAgICAgLy8gbW9kZSBzd2l0Y2ggLSBoaW50IHNxdWFyZSAoZGVmYXVsdCksIG5vdGUgc3F1YXJlLCBvciBndWVzcyBzcXVhcmUgKGJvdGggdXNlcik/XG4gICAgICAgIGlmICh0aGlzLmlzSGludCkge1xuICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKFwiZGVmYXVsdEZpbGxlZFNxdWFyZVwiKTtcbiAgICAgICAgfSBlbHNlIGlmICghdGhpcy5pc0hpbnQgJiYgdGhpcy5pc0d1ZXNzTW9kZSkge1xuICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKFwic3Vkb2t1U3F1YXJlXCIpO1xuICAgICAgICB9IGVsc2UgaWYgKCF0aGlzLmlzSGludCAmJiAhdGhpcy5pc0d1ZXNzTW9kZSkge1xuICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKFwibm90ZVNxdWFyZVwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHBhZGRpbmcgc3F1YXJlcyBhcmUgZXZlcnkgc3F1YXJlIGJlc2lkZXMgdGhlIGxhc3QuXG4gICAgICAgIC8vIHNwYWNpbmcgc3F1YXJlcyBhcmUgZXZlcnkgbWluaWdyaWRTaXplIGFuZCBoYXZlIGV4dHJhIGhvcml6b250YWwgcGFkZGluZy5cbiAgICAgICAgaWYgKHRoaXMuY29sdW1uIDwgOCAmJiB0aGlzLmNvbHVtbiA+PSAwKSB7XG4gICAgICAgICAgICBpZiAoKHRoaXMuY29sdW1uKzEpICUgdGhpcy5taW5pZ3JpZFNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBjbGFzc2VzLnB1c2goXCJzcGFjZXJTcXVhcmVcIik7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNsYXNzZXMucHVzaChcInBhZGRpbmdTcXVhcmVcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5pc0FjdGl2ZSkge1xuICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKFwiYWN0aXZlU3F1YXJlXCIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKFwiaW5hY3RpdmVTcXVhcmVcIik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5lcnJvckNsYXNzZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKFwiZXJyb3JTcXVhcmVcIik7XG4gICAgICAgICAgICBjbGFzc2VzID0gY2xhc3Nlcy5jb25jYXQodGhpcy5lcnJvckNsYXNzZXMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKFwidmFsaWRTcXVhcmVcIik7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gY2xhc3NlcztcbiAgICB9XG5cbiAgICAvLyBlcnJvciBzdGF0ZSBjbGFzc2VzLlxuICAgIHB1YmxpYyBlcnJvckNsYXNzZXM6IHN0cmluZ1tdID0gW107XG5cbiAgICAvLyBwbGF5ZXIgZGF0YS5cbiAgICBwdWJsaWMgZ3Vlc3M6IG51bWJlcnxudWxsID0gbnVsbDtcbiAgICBwdWJsaWMgbm90ZXM6IGJvb2xlYW5bXVtdID0gdGhpcy5pbml0aWFsaXplTm90ZXMoKTtcblxuICAgIC8vIG90aGVyXG4gICAgcHVibGljIGlzQWN0aXZlOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBtb3VudGVkKCkge1xuICAgIH1cblxuICAgIC8vIHBhcmFtZXRlcnM6IG5vbmUuXG4gICAgLy8gcmV0dXJuczogMkQgYXJyYXkgb2Ygbm90ZXMgZm9yIHRoaXMgc3F1YXJlLlxuICAgIC8vIHJlc3VsdHM6IG5vbmUuXG4gICAgcHVibGljIGluaXRpYWxpemVOb3RlcygpOiBib29sZWFuW11bXSB7XG4gICAgICAgIGxldCBub3RlczogYm9vbGVhbltdW10gID0gW11cbiAgICAgICAgZm9yIChsZXQgciA9IDA7IHIgPCB0aGlzLm1pbmlncmlkU2l6ZTsgcisrKSB7XG5cbiAgICAgICAgICAgIGxldCBub3RlUm93OiBib29sZWFuW10gPSBbXTtcbiAgICAgICAgICAgIGZvciAobGV0IGMgPSAwOyBjIDwgdGhpcy5taW5pZ3JpZFNpemU7IGMrKykge1xuICAgICAgICAgICAgICAgIG5vdGVSb3cucHVzaChmYWxzZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIG5vdGVzLnB1c2gobm90ZVJvdyk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbm90ZXM7XG4gICAgfVxuXG4gICAgLy8gdXNlZCB0byBzZXQgdmlzaWJpbGl0eSwgc3BhY2luZy5cbiAgICAvLyBwYXJhbWV0ZXJzOlxuICAgIC8vIGlzR3Vlc3NNb2RlOiBzdGF0ZSBndWVzcyBtb2RlLlxuICAgIC8vIHZhbHVlOiBwcm92aWRlZCB2YWx1ZS5cbiAgICAvLyByZXR1cm46IG5vbmUuXG4gICAgLy8gcmVzdWx0OiBndWVzcyBvciBub3RlcyB1cGRhdGVkLlxuICAgIHB1YmxpYyB1cGRhdGVWYWx1ZXMoaXNHdWVzc01vZGU6IGJvb2xlYW4sIHZhbHVlOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgaWYgKGlzR3Vlc3NNb2RlKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5ndWVzcyA9PT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmd1ZXNzID0gbnVsbDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5ndWVzcyA9IHZhbHVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsZXQgcm93ID0gTWF0aC5mbG9vcigodmFsdWUgLSAxKSAvIDMpO1xuICAgICAgICAgICAgbGV0IGNvbCA9ICh2YWx1ZSAtIDEpICUgMztcblxuICAgICAgICAgICAgdGhpcy5ub3Rlc1tyb3ddW2NvbF0gPSAhdGhpcy5ub3Rlc1tyb3ddW2NvbF07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBwYXJhbWV0ZXJzOlxuICAgIC8vIHJvdzogcm93IGluIG5vdGUgZ3JpZC5cbiAgICAvLyBjb2w6IGNvbHVtbiBpbiBub3RlIGdyaWQuXG4gICAgLy8gcmV0dXJuczogdmFsdWUgb2Ygbm90ZSBnaXZlbiBieSByb3cgYW5kIGNvbHVtbi5cbiAgICBwdWJsaWMgZ2V0Tm90ZShyb3c6IG51bWJlciwgY29sOiBudW1iZXIpOiBudW1iZXJ8c3RyaW5nIHtcbiAgICAgICAgbGV0IG5vdGVJc1NldCA9IHRoaXMubm90ZXNbcm93XVtjb2xdO1xuICAgICAgICBpZiAobm90ZUlzU2V0KSB7XG4gICAgICAgICAgICByZXR1cm4gKHJvdyAqIHRoaXMubWluaWdyaWRTaXplKSArIGNvbCArIDE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gXCIgXCI7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBwYXJhbWV0ZXJzOlxuICAgIC8vIHJvdzogcm93IGluIG5vdGUgZ3JpZC5cbiAgICAvLyBjb2w6IGNvbHVtbiBpbiBub3RlIGdyaWQuXG4gICAgLy8gcmV0dXJuczogbGlzdCBvZiBDU1MgY2xhc3NlcyB0byBhcHBseSB0byB0aGUgbm90ZSBpbiB0aGUgaHRtbC5cbiAgICAvLyByZXN1bHQ6IG5vbmUuXG4gICAgcHVibGljIGdldE5vdGVDbGFzc2VzKHJvdzogbnVtYmVyLCBjb2w6IG51bWJlcik6IHN0cmluZ1tdIHtcbiAgICAgICAgbGV0IG5vdGVJc1NldCA9IHRoaXMubm90ZXNbcm93XVtjb2xdO1xuICAgICAgICBpZiAobm90ZUlzU2V0KSB7XG4gICAgICAgICAgICByZXR1cm4gW1wiYWN0aXZlTm90ZVwiXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBbXCJpbmFjdGl2ZU5vdGVcIl07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBwYXJhbWV0ZXJzOlxuICAgIC8vIGVycm9yU3RhdGU6IGVycm9yIHN0YXRlIG9mIGNlbGwuXG4gICAgLy8gcmV0dXJuczogbm9uZS5cbiAgICAvLyByZXN1bHQ6IGFwcGVuZHMgdG8gdGhpcy5lcnJvckNsYXNzZXMsIHdoaWNoIHdpbGwgYWZmZWN0IHN0eWxlcy5cbiAgICBwdWJsaWMgYXBwZW5kVG9FcnJvclN0YXRlKGVycm9yU3RhdGU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLmVycm9yQ2xhc3Nlcy5wdXNoKGVycm9yU3RhdGUpO1xuICAgIH1cblxuICAgIC8vIHBhcmFtZXRlcnM6IG5vbmUuXG4gICAgLy8gcmV0dXJuczogbm9uZS5cbiAgICAvLyByZXN1bHQ6IHJlc2V0cyBlcnJvciBjbGFzc2VzIGZvciBzcXVhcmUuXG4gICAgcHVibGljIHJlc2V0RXJyb3JTdGF0ZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5lcnJvckNsYXNzZXMgPSBbXTtcbiAgICB9XG5cbiAgICAvLyBwYXJhbWV0ZXJzOiBub25lLlxuICAgIC8vIHJldHVybnM6IGhpbnQgaWYgdGhpcyBpcyBhIGhpbnQgc3F1YXJlLCBvdGhlcndpc2UgdGhlIGN1cnJlbnQgdXNlciB2YWx1ZS5cbiAgICAvLyByZXN1bHQ6IG5vbmUuXG4gICAgcHVibGljIGdldFVzZXJWYWx1ZSgpOiBudW1iZXIge1xuICAgICAgICBpZiAodGhpcy5pc0hpbnQpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnZhbHVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuZ3Vlc3MpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmd1ZXNzO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBwYXJhbWV0ZXJzOiBub25lLlxuICAgIC8vIHJldHVybnM6IG5vbmUuXG4gICAgLy8gcmVzdWx0OiBzcXVhcmUgZ3Vlc3NlcyBhbmQgbm90ZSBhcmUgY2xlYXJlZC5cbiAgICBwdWJsaWMgY2xlYXJVc2VyVmFsdWVzKCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5pc0hpbnQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZ3Vlc3MgPSBudWxsO1xuXG4gICAgICAgIGZvciAobGV0IHIgPSAwOyByIDwgdGhpcy5ub3Rlcy5sZW5ndGg7IHIrKykge1xuICAgICAgICAgICAgZm9yIChsZXQgYyA9IDA7IGMgPCB0aGlzLm5vdGVzW3JdLmxlbmd0aDsgYysrKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5ub3Rlc1tyXVtjXSA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gcGFyYW1ldGVyczpcbiAgICAvLyBndWVzc01vZGU6IGd1ZXNzIG1vZGUgZnJvbSB1cCBvbiBoaWdoIHRvIHNldCBvbiBvdXJzZWx2ZXMuXG4gICAgLy8gcmV0dXJuczogbm9uZVxuICAgIC8vIHJlc3VsdDogdGhpcyBzcXVhcmUgaXMgaW4gYm9hcmQgZ3Vlc3MgbW9kZSBpZiB3ZSBkb24ndCBoYXZlIGEgZ3Vlc3MsXG4gICAgLy8gICAgICAgICBvdGhlcndpc2Ugd2UgcmVtYWluIGluIGd1ZXNzIG1vZGUuXG4gICAgcHVibGljIHNldEd1ZXNzTW9kZShpc0d1ZXNzTW9kZTogYm9vbGVhbikge1xuICAgICAgICBpZiAodGhpcy5ndWVzcyAhPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5pc0d1ZXNzTW9kZSA9IHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmlzR3Vlc3NNb2RlID0gaXNHdWVzc01vZGU7XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCJpbXBvcnQgVnVlIGZyb20gXCJ2dWVcIjtcbmltcG9ydCB7IENvbXBvbmVudCwgUHJvcCB9IGZyb20gXCJ2dWUtcHJvcGVydHktZGVjb3JhdG9yXCI7XG5cbmltcG9ydCBTdWRva3VTcXVhcmUgZnJvbSBcIi4vU3Vkb2t1U3F1YXJlXCI7XG5pbXBvcnQgU3Vkb2t1U3RhdGUgZnJvbSBcIi4vU3Vkb2t1U3RhdGVcIjtcblxuaW1wb3J0IFdpdGhSZW5kZXIgZnJvbSBcIi4uL2h0bWwvU3Vkb2t1R3JpZC5odG1sXCI7XG5cbkBXaXRoUmVuZGVyXG5AQ29tcG9uZW50KHtcbiAgICBjb21wb25lbnRzOiB7XG4gICAgICAgIFwic3Vkb2t1LXNxdWFyZVwiOiBTdWRva3VTcXVhcmUsXG4gICAgfVxufSlcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN1ZG9rdUdyaWQgZXh0ZW5kcyBWdWUge1xuICAgIC8vIHN0YXRpY3NcbiAgICBzdGF0aWMgcmVhZG9ubHkgQXJyb3dUeXBlID0gT2JqZWN0LmZyZWV6ZSh7XG4gICAgICAgIEFycm93VXA6IFwiQXJyb3dVcFwiLFxuICAgICAgICBBcnJvd0Rvd246IFwiQXJyb3dEb3duXCIsXG4gICAgICAgIEFycm93TGVmdDogXCJBcnJvd0xlZnRcIixcbiAgICAgICAgQXJyb3dSaWdodDogXCJBcnJvd1JpZ2h0XCIsXG4gICAgfSk7XG5cbiAgICAvLyBQUk9QUyBBTkQgREFUQSBNRU1CRVJTXG4gICAgQFByb3AoKVxuICAgIGluaXRpYWxTcXVhcmVEYXRhIToge3ZhbHVlOiBudW1iZXIsIGhpbnQ6IGJvb2xlYW59W11bXTtcblxuICAgIEBQcm9wKClcbiAgICBzdGF0ZSE6IFN1ZG9rdVN0YXRlO1xuXG4gICAgcHVibGljIHNxdWFyZURhdGE6IFN1ZG9rdVNxdWFyZVtdW10gPSBbXTtcblxuICAgIC8vIGJhc2ljYWxseSBhIGNvbnN0cnVjdG9yLlxuICAgIG1vdW50ZWQoKSB7XG4gICAgICAgIGZvciAobGV0IHIgPSAwOyByIDwgdGhpcy5pbml0aWFsU3F1YXJlRGF0YS5sZW5ndGg7IHIrKykge1xuXG4gICAgICAgICAgICBsZXQgbmV3Um93OiBTdWRva3VTcXVhcmVbXSA9IFtdO1xuICAgICAgICAgICAgZm9yIChsZXQgYyA9IDA7IGMgPCB0aGlzLmluaXRpYWxTcXVhcmVEYXRhW3JdLmxlbmd0aDsgYysrKSB7XG4gICAgICAgICAgICAgICAgbmV3Um93LnB1c2goXG4gICAgICAgICAgICAgICAgICAgIG5ldyBTdWRva3VTcXVhcmUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHNEYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMuaW5pdGlhbFNxdWFyZURhdGFbcl1bY10udmFsdWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNIaW50OiB0aGlzLmluaXRpYWxTcXVhcmVEYXRhW3JdW2NdLmhpbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluaWdyaWRTaXplOiB0aGlzLnN0YXRlLm1pbmlncmlkU2l6ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3c6IHIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sdW1uOiBjLFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnNxdWFyZURhdGEucHVzaChuZXdSb3cpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gcmVnaXN0ZXIgY2FsbGJhY2tzLlxuICAgICAgICB0aGlzLnN0YXRlLmhhbmRsZUdyaWRVcGRhdGUgPSB0aGlzLmhhbmRsZUdyaWRVcGRhdGU7XG4gICAgICAgIHRoaXMuc3RhdGUub25Cb2FyZENsaWNrID0gdGhpcy5vbkJvYXJkQ2xpY2s7XG4gICAgICAgIHRoaXMuc3RhdGUuZ2V0R3JpZFNlY3Rpb24gPSB0aGlzLmdldEdyaWRTZWN0aW9uO1xuICAgICAgICB0aGlzLnN0YXRlLmludmFsaWRhdGVTZWN0aW9uID0gdGhpcy5pbnZhbGlkYXRlU2VjdGlvbjtcbiAgICAgICAgdGhpcy5zdGF0ZS5oYXNFbXB0eVNxdWFyZXMgPSB0aGlzLmhhc0VtcHR5U3F1YXJlcztcbiAgICAgICAgdGhpcy5zdGF0ZS5nZXREaWdpdHNUb1RvZ2dsZSA9IHRoaXMuZ2V0RGlnaXRzVG9Ub2dnbGU7XG4gICAgICAgIHRoaXMuc3RhdGUuaGFuZGxlQm9hcmROYXZpZ2F0ZSA9IHRoaXMuaGFuZGxlQm9hcmROYXZpZ2F0ZTtcblxuICAgICAgICB0aGlzLnN0YXRlLnJlc2V0Qm9hcmRFcnJvcnMgPSB0aGlzLnJlc2V0Qm9hcmRFcnJvcnM7XG4gICAgICAgIHRoaXMuc3RhdGUucmVzZXRCb2FyZCA9IHRoaXMucmVzZXRCb2FyZDtcbiAgICAgICAgdGhpcy5zdGF0ZS5zZXRTcXVhcmVHdWVzc01vZGVzID0gdGhpcy5zZXRTcXVhcmVHdWVzc01vZGVzO1xuICAgIH1cblxuICAgIC8vIE1FVEhPRFNcblxuICAgIC8vIHBhcmFtZXRlcnM6XG4gICAgLy8gcm93OiByb3cgaW4gc3Vkb2t1IGJvYXJkLlxuICAgIC8vIHJldHVybnM6IENTUyBjbGFzc2VzIHRvIGFwcGx5IHRvIHRoYXQgcm93LlxuICAgIC8vIHJlc3VsdDogbm9uZS5cbiAgICBwdWJsaWMgZ2V0Um93Q2xhc3Mocm93OiBudW1iZXIpOiBzdHJpbmdbXSB7XG4gICAgICAgIGxldCBjbGFzc2VzID0gW1wic3Vkb2t1Um93XCJdO1xuXG4gICAgICAgIGxldCBsZW5ndGggPSB0aGlzLnN0YXRlLm1pbmlncmlkU2l6ZSAqIHRoaXMuc3RhdGUubWluaWdyaWRTaXplO1xuICAgICAgICBpZiAocm93ID49IDAgJiYgcm93IDwgKGxlbmd0aC0xKSkge1xuICAgICAgICAgICAgaWYgKChyb3crMSkgJSB0aGlzLnN0YXRlLm1pbmlncmlkU2l6ZSA9PSAwKSB7XG4gICAgICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKFwic3BhY2VyUm93XCIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjbGFzc2VzLnB1c2goXCJwYWRkaW5nUm93XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNsYXNzZXM7XG4gICAgfVxuXG4gICAgLy8gcGFyYW1ldGVyczogbm9uZS5cbiAgICAvLyByZXR1cm5zOiBjdXJyZW50IGFjdGl2ZSBzcXVhcmUsIG9yIG51bGwgaWYgbm8gc3VjaCBzcXVhcmUuXG4gICAgLy8gcmVzdWx0OiBjdXJyZW50IGFjdGl2ZSBib2FyZCBzcXVhcmUgaXMgc2V0IHRvIGluYWN0aXZlLCBpZiB2YWxpZC5cbiAgICBwdWJsaWMgY2xlYXJDdXJyZW50QWN0aXZlU3F1YXJlKCk6IFN1ZG9rdVNxdWFyZXxudWxsIHtcbiAgICAgICAgbGV0IGFjdGl2ZVNxdWFyZTogU3Vkb2t1U3F1YXJlfG51bGwgPSB0aGlzLnN0YXRlLmFjdGl2ZUdyaWRTcXVhcmU7XG5cbiAgICAgICAgLy8gc2V0IGluYWN0aXZlIGlmIGl0J3MgYSB2YWxpZCBzcXVhcmUuXG4gICAgICAgIGlmIChhY3RpdmVTcXVhcmUpIHtcbiAgICAgICAgICAgIGFjdGl2ZVNxdWFyZS5pc0FjdGl2ZSA9IGZhbHNlO1xuXG4gICAgICAgICAgICBsZXQgb2xkUm93ID0gdGhpcy5zcXVhcmVEYXRhW2FjdGl2ZVNxdWFyZS5yb3ddO1xuICAgICAgICAgICAgb2xkUm93W2FjdGl2ZVNxdWFyZS5jb2x1bW5dID0gYWN0aXZlU3F1YXJlO1xuICAgICAgICAgICAgVnVlLnNldChcbiAgICAgICAgICAgICAgICB0aGlzLnNxdWFyZURhdGEsXG4gICAgICAgICAgICAgICAgYWN0aXZlU3F1YXJlLnJvdyxcbiAgICAgICAgICAgICAgICBvbGRSb3dcbiAgICAgICAgICAgIClcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBhY3RpdmVTcXVhcmU7XG4gICAgfVxuXG4gICAgLy8gcGFyYW1ldGVyczpcbiAgICAvLyByb3c6IHJvdyBvZiBjbGljayBvbiBib2FyZC5cbiAgICAvLyBjb2w6IGNvbHVtbiBvZiBjbGljayBvbiBib2FyZC5cbiAgICAvLyByZXR1cm5zOiBub25lLlxuICAgIC8vIHJlc3VsdDogdXBkYXRlcyBjdXJyZW50IGFjdGl2ZSBzcXVhcmUsIGNsZWFycyBudW1wYWQgc3F1YXJlcyBpZiBhcHByb3ByaWF0ZS5cbiAgICBwdWJsaWMgb25Cb2FyZENsaWNrKHJvdzogbnVtYmVyLCBjb2w6IG51bWJlcik6IHZvaWQge1xuICAgICAgICAvLyBjbGVhciBleGlzdGluZyBhY3RpdmUgc3F1YXJlIGFuZCBudW1wYWQgc3F1YXJlcywgaWYgc3F1YXJlIHdhcyBhY3RpdmUuXG4gICAgICAgIGxldCBvbGRBY3RpdmVTcXVhcmUgPSB0aGlzLmNsZWFyQ3VycmVudEFjdGl2ZVNxdWFyZSgpO1xuICAgICAgICBpZiAob2xkQWN0aXZlU3F1YXJlKSB7XG4gICAgICAgICAgICB0aGlzLnN0YXRlLmNsZWFyTnVtcGFkU3F1YXJlcygpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gYWN0aXZhdGUgc3F1YXJlXG4gICAgICAgIGxldCBuZXdBY3RpdmVTcXVhcmUgPSB0aGlzLnNxdWFyZURhdGFbcm93XVtjb2xdO1xuICAgICAgICBuZXdBY3RpdmVTcXVhcmUuaXNBY3RpdmUgPSB0cnVlO1xuXG4gICAgICAgIHRoaXMuc3RhdGUuYWN0aXZlR3JpZFNxdWFyZSA9IG5ld0FjdGl2ZVNxdWFyZTtcblxuICAgICAgICBsZXQgbmV3Um93ID0gdGhpcy5zcXVhcmVEYXRhW3Jvd107XG4gICAgICAgIG5ld1Jvd1tjb2xdID0gbmV3QWN0aXZlU3F1YXJlO1xuICAgICAgICBWdWUuc2V0KFxuICAgICAgICAgICAgdGhpcy5zcXVhcmVEYXRhLFxuICAgICAgICAgICAgcm93LFxuICAgICAgICAgICAgbmV3Um93XG4gICAgICAgIClcblxuICAgICAgICAvLyBzZXQgdXAgbmV3IG51bXBhZCB2YWx1ZXMuXG4gICAgICAgIGxldCBkaWdpdHMgPSB0aGlzLnN0YXRlLmdldERpZ2l0c1RvVG9nZ2xlKHJvdywgY29sKTtcbiAgICAgICAgdGhpcy5zdGF0ZS5lbmFibGVOdW1wYWRTcXVhcmVzKGRpZ2l0cyk7XG4gICAgfVxuXG4gICAgLy8gcGFyYW1ldGVyczpcbiAgICAvLyByb3c6IHJvdyBvZiBib2FyZCBjZWxsLlxuICAgIC8vIGNvbDogY29sdW1uIG9mIGJvYXJkIGNlbGwuXG4gICAgLy8gcmV0dXJuczogdGhlIGxpc3Qgb2YgbnVtcGFkIGNvb3JkaW5hdGVzIHRoYXQgbmVlZCB0byBiZSB0b2dnbGVkIGJhc2VkIG9uIHRoZSBjdXJyZW50IG1vZGUuXG4gICAgLy8gcmVzdWx0OiAgbm9uZS5cbiAgICBwdWJsaWMgZ2V0RGlnaXRzVG9Ub2dnbGUocm93OiBudW1iZXIsIGNvbDogbnVtYmVyKTogbnVtYmVyW10ge1xuICAgICAgICBsZXQgZ3JpZFNxdWFyZSA9IHRoaXMuc3F1YXJlRGF0YVtyb3ddW2NvbF07XG5cbiAgICAgICAgaWYgKHRoaXMuc3RhdGUuaXNHdWVzc01vZGUgJiYgZ3JpZFNxdWFyZS5ndWVzcyA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuc3RhdGUuaXNHdWVzc01vZGUgJiYgZ3JpZFNxdWFyZS5ndWVzcyAhPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIFtncmlkU3F1YXJlLmd1ZXNzXTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBkaWdpdHM6IG51bWJlcltdID0gW107XG4gICAgICAgIGZvciAobGV0IHIgPSAwOyByIDwgdGhpcy5zdGF0ZS5taW5pZ3JpZFNpemU7IHIrKykge1xuICAgICAgICAgICAgZm9yIChsZXQgYyA9IDA7IGMgPCB0aGlzLnN0YXRlLm1pbmlncmlkU2l6ZTsgYysrKSB7XG4gICAgICAgICAgICAgICAgaWYgKGdyaWRTcXVhcmUubm90ZXNbcl1bY10pIHtcbiAgICAgICAgICAgICAgICAgICAgZGlnaXRzLnB1c2goKHIgKiB0aGlzLnN0YXRlLm1pbmlncmlkU2l6ZSkgKyBjICsgMSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkaWdpdHM7XG4gICAgfVxuXG4gICAgLy8gcGFyYW1ldGVyczpcbiAgICAvLyB2YWx1ZTogdmFsdWUgdG8gdXBkYXRlIG9uIHNxdWFyZS5cbiAgICAvLyByZXR1cm5zOiBub25lLlxuICAgIC8vIHJlc3VsdDogc3BlY2lmaWVkIGNlbGwgaGFzIGl0cyBndWVzcyBvciBub3RlcyB1cGRhdGVkIGFzIGFwcHJvcHJpYXRlLlxuICAgIHB1YmxpYyBoYW5kbGVHcmlkVXBkYXRlKHZhbHVlOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgbGV0IGFjdGl2ZUNlbGwgPSB0aGlzLnN0YXRlLmFjdGl2ZUdyaWRTcXVhcmU7XG4gICAgICAgIGlmIChhY3RpdmVDZWxsKSB7XG4gICAgICAgICAgICBhY3RpdmVDZWxsLnVwZGF0ZVZhbHVlcyh0aGlzLnN0YXRlLmlzR3Vlc3NNb2RlLCB2YWx1ZSk7XG5cbiAgICAgICAgICAgIGxldCByb3cgPSB0aGlzLnNxdWFyZURhdGFbYWN0aXZlQ2VsbC5yb3ddO1xuICAgICAgICAgICAgcm93W2FjdGl2ZUNlbGwuY29sdW1uXSA9IGFjdGl2ZUNlbGw7XG4gICAgICAgICAgICBWdWUuc2V0KFxuICAgICAgICAgICAgICAgIHRoaXMuc3F1YXJlRGF0YSxcbiAgICAgICAgICAgICAgICBhY3RpdmVDZWxsLnJvdyxcbiAgICAgICAgICAgICAgICByb3csXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gcGFyYW1ldGVyczpcbiAgICAvLyBzZWN0aW9uX3R5cGU6IHJvdy9jb2x1bW4vc3ViZ3JpZCB0eXBlIHRvIHJldHVybi5cbiAgICAvLyBpbmRleDogaW5kZXggb2Ygcm93IG9yIGNvbHVtbiBvciBzdWJncmlkLlxuICAgIC8vICAgICAgICByb3dzIGFyZSBpbmRleGVkIDAtOCB0b3AgdG8gYm90dG9tLCBjb2x1bW5zIDAtOCBsZWZ0IHRvIHJpZ2h0LFxuICAgIC8vICAgICAgICBzdWJncmlkcyAwLTggdG9wIHRvIGJvdHRvbSBsZWZ0IHRvIHJpZ2h0LlxuICAgIC8vICAgICAgICBzb3JyeSwgIDAgLSAodGhpcy5taW5pZ3JpZFNpemUgLSAxKVxuICAgIC8vIHJldHVybnM6IGNvb3JkaW5hdGVzIGludG8gdGhpcy5zcXVhcmVEYXRhIGZvciB0aGUgbWF0Y2hpbmcgc3F1YXJlcy5cbiAgICAvLyByZXN1bHQ6IG5vbmUuXG4gICAgcHJpdmF0ZSBnZXRDb29yZGluYXRlcyhzZWN0aW9uX3R5cGU6IHN0cmluZywgaW5kZXg6IG51bWJlcik6IFtudW1iZXIsIG51bWJlcl1bXSB7XG4gICAgICAgIGxldCBjb29yZHM6IFtudW1iZXIsIG51bWJlcl1bXSA9IFtdO1xuICAgICAgICBsZXQgc2VjdGlvblNpemUgPSB0aGlzLnN0YXRlLm1pbmlncmlkU2l6ZSAqIHRoaXMuc3RhdGUubWluaWdyaWRTaXplO1xuICAgICAgICBpZiAoc2VjdGlvbl90eXBlID09PSBTdWRva3VTdGF0ZS5TZWN0aW9uVHlwZS5Sb3cpIHtcbiAgICAgICAgICAgIGZvciAobGV0IGMgPSAwOyBjIDwgc2VjdGlvblNpemU7IGMrKykge1xuICAgICAgICAgICAgICAgIGNvb3Jkcy5wdXNoKFtpbmRleCwgY10pXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfSBlbHNlIGlmIChzZWN0aW9uX3R5cGUgPT09IFN1ZG9rdVN0YXRlLlNlY3Rpb25UeXBlLkNvbHVtbikge1xuICAgICAgICAgICAgZm9yIChsZXQgciA9IDA7IHIgPCBzZWN0aW9uU2l6ZTsgcisrKSB7XG4gICAgICAgICAgICAgICAgY29vcmRzLnB1c2goW3IsIGluZGV4XSlcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9IGVsc2UgaWYgKHNlY3Rpb25fdHlwZSA9PT0gU3Vkb2t1U3RhdGUuU2VjdGlvblR5cGUuU3ViZ3JpZCkge1xuICAgICAgICAgICAgbGV0IHJvd19jb29yZCA9IE1hdGguZmxvb3IoaW5kZXggLyB0aGlzLnN0YXRlLm1pbmlncmlkU2l6ZSk7XG4gICAgICAgICAgICBsZXQgY29sX2Nvb3JkID0gaW5kZXggJSB0aGlzLnN0YXRlLm1pbmlncmlkU2l6ZTtcblxuICAgICAgICAgICAgbGV0IHJvd19zdGFydCA9IHJvd19jb29yZCAqIHRoaXMuc3RhdGUubWluaWdyaWRTaXplO1xuICAgICAgICAgICAgbGV0IGNvbF9zdGFydCA9IGNvbF9jb29yZCAqIHRoaXMuc3RhdGUubWluaWdyaWRTaXplO1xuXG4gICAgICAgICAgICBmb3IgKGxldCByID0gcm93X3N0YXJ0OyByIDwgcm93X3N0YXJ0ICsgdGhpcy5zdGF0ZS5taW5pZ3JpZFNpemU7IHIrKykge1xuICAgICAgICAgICAgICAgIGZvciAobGV0IGMgPSBjb2xfc3RhcnQ7IGMgPCBjb2xfc3RhcnQgKyB0aGlzLnN0YXRlLm1pbmlncmlkU2l6ZTsgYysrKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvb3Jkcy5wdXNoKFtyLCBjXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gdW5zdXBwb3J0ZWQgdHlwZSFcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBjb29yZHM7XG4gICAgfVxuXG4gICAgLy8gcGFyYW1ldGVyczpcbiAgICAvLyBzZWN0aW9uX3R5cGU6IHJvdy9jb2x1bW4vc3ViZ3JpZCB0eXBlIHRvIHJldHVybi5cbiAgICAvLyBpbmRleDogaW5kZXggb2Ygcm93IG9yIGNvbHVtbiBvciBzdWJncmlkLlxuICAgIC8vICAgICAgICByb3dzIGFyZSBpbmRleGVkIDAtOCB0b3AgdG8gYm90dG9tLCBjb2x1bW5zIDAtOCBsZWZ0IHRvIHJpZ2h0LFxuICAgIC8vICAgICAgICBzdWJncmlkcyAwLTggdG9wIHRvIGJvdHRvbSBsZWZ0IHRvIHJpZ2h0LlxuICAgIC8vICAgICAgICBzb3JyeSwgIDAgLSAodGhpcy5taW5pZ3JpZFNpemUgLSAxKVxuICAgIC8vIHJldHVybnM6IHRoZSB2YWx1ZXMgaW4gdGhhdCBzZWN0aW9uLlxuICAgIC8vIHJlc3VsdDogbm9uZS5cbiAgICBwdWJsaWMgZ2V0R3JpZFNlY3Rpb24oc2VjdGlvbl90eXBlOiBzdHJpbmcsIGluZGV4OiBudW1iZXIpOiBudW1iZXJbXSB7XG4gICAgICAgIGxldCBjb29yZHMgPSB0aGlzLmdldENvb3JkaW5hdGVzKHNlY3Rpb25fdHlwZSwgaW5kZXgpO1xuICAgICAgICByZXR1cm4gY29vcmRzLm1hcChjb29yZCA9PiB0aGlzLnNxdWFyZURhdGFbY29vcmRbMF1dW2Nvb3JkWzFdXS5nZXRVc2VyVmFsdWUoKSk7XG4gICAgfVxuXG4gICAgLy8gcGFyYW1ldGVyczpcbiAgICAvLyBzZWN0aW9uX3R5cGU6IHJvdy9jb2x1bW4vc3ViZ3JpZCB0eXBlIHRvIHJldHVybi5cbiAgICAvLyBpbmRleDogaW5kZXggb2Ygcm93IG9yIGNvbHVtbiBvciBzdWJncmlkLlxuICAgIC8vICAgICAgICByb3dzIGFyZSBpbmRleGVkIDAtOCB0b3AgdG8gYm90dG9tLCBjb2x1bW5zIDAtOCBsZWZ0IHRvIHJpZ2h0LFxuICAgIC8vICAgICAgICBzdWJncmlkcyAwLTggdG9wIHRvIGJvdHRvbSBsZWZ0IHRvIHJpZ2h0LlxuICAgIC8vICAgICAgICBzb3JyeSwgIDAgLSAodGhpcy5taW5pZ3JpZFNpemUgLSAxKVxuICAgIC8vIHJldHVybnM6IG5vbmUuXG4gICAgLy8gcmVzdWx0OiBjbGFzc2VzIGluIHNlY3Rpb24gc3dpdGNoZWQgdG8gcHJvcGVyIGVycm9yIGNsYXNzZXMuXG4gICAgcHVibGljIGludmFsaWRhdGVTZWN0aW9uKHNlY3Rpb25fdHlwZTogc3RyaW5nLCBpbmRleDogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIGxldCBsZW5ndGggPSB0aGlzLnN0YXRlLm1pbmlncmlkU2l6ZSAqIHRoaXMuc3RhdGUubWluaWdyaWRTaXplO1xuICAgICAgICBsZXQgY29vcmRzID0gdGhpcy5nZXRDb29yZGluYXRlcyhzZWN0aW9uX3R5cGUsIGluZGV4KTtcbiAgICAgICAgbGV0IHN0YXRlczogc3RyaW5nW10gPSBbXTtcblxuICAgICAgICAvLyBUT0RPIGlzIHRoaXMgZWFzaWVyIHdpdGggY29vcmRzIG9yIGVxdWl2YWxlbnQ/XG4gICAgICAgIGlmIChzZWN0aW9uX3R5cGUgPT09IFN1ZG9rdVN0YXRlLlNlY3Rpb25UeXBlLlJvdykge1xuICAgICAgICAgICAgc3RhdGVzLnB1c2goU3Vkb2t1U3F1YXJlLkVycm9yU3RhdGVzLkxlZnRSb3cpO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPCBsZW5ndGgtMTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgc3RhdGVzLnB1c2goU3Vkb2t1U3F1YXJlLkVycm9yU3RhdGVzLkNlbnRlclJvdyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzdGF0ZXMucHVzaChTdWRva3VTcXVhcmUuRXJyb3JTdGF0ZXMuUmlnaHRSb3cpO1xuXG4gICAgICAgIH0gZWxzZSBpZiAoc2VjdGlvbl90eXBlID09PSBTdWRva3VTdGF0ZS5TZWN0aW9uVHlwZS5Db2x1bW4pIHtcbiAgICAgICAgICAgIHN0YXRlcy5wdXNoKFN1ZG9rdVNxdWFyZS5FcnJvclN0YXRlcy5Ub3BDb2x1bW4pO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPCBsZW5ndGgtMTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgc3RhdGVzLnB1c2goU3Vkb2t1U3F1YXJlLkVycm9yU3RhdGVzLk1pZGRsZUNvbHVtbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzdGF0ZXMucHVzaChTdWRva3VTcXVhcmUuRXJyb3JTdGF0ZXMuQm90dG9tQ29sdW1uKTtcblxuICAgICAgICB9IGVsc2UgaWYgKHNlY3Rpb25fdHlwZSA9PT0gU3Vkb2t1U3RhdGUuU2VjdGlvblR5cGUuU3ViZ3JpZCkge1xuICAgICAgICAgICAgLy8gdW5zdXJlIGhvdyB0byBkbyB0aGlzIGluIGEgbGVzcyB1Z2x5IHdheS5cbiAgICAgICAgICAgIHN0YXRlcyA9IFtcbiAgICAgICAgICAgICAgICBTdWRva3VTcXVhcmUuRXJyb3JTdGF0ZXMuVG9wTGVmdFN1YmdyaWQsXG4gICAgICAgICAgICAgICAgU3Vkb2t1U3F1YXJlLkVycm9yU3RhdGVzLlRvcENlbnRlclN1YmdyaWQsXG4gICAgICAgICAgICAgICAgU3Vkb2t1U3F1YXJlLkVycm9yU3RhdGVzLlRvcFJpZ2h0U3ViZ3JpZCxcblxuICAgICAgICAgICAgICAgIFN1ZG9rdVNxdWFyZS5FcnJvclN0YXRlcy5NaWRkbGVMZWZ0U3ViZ3JpZCxcbiAgICAgICAgICAgICAgICBTdWRva3VTcXVhcmUuRXJyb3JTdGF0ZXMuTWlkZGxlQ2VudGVyU3ViZ3JpZCxcbiAgICAgICAgICAgICAgICBTdWRva3VTcXVhcmUuRXJyb3JTdGF0ZXMuTWlkZGxlUmlnaHRTdWJncmlkLFxuXG4gICAgICAgICAgICAgICAgU3Vkb2t1U3F1YXJlLkVycm9yU3RhdGVzLkJvdHRvbUxlZnRTdWJncmlkLFxuICAgICAgICAgICAgICAgIFN1ZG9rdVNxdWFyZS5FcnJvclN0YXRlcy5Cb3R0b21DZW50ZXJTdWJncmlkLFxuICAgICAgICAgICAgICAgIFN1ZG9rdVNxdWFyZS5FcnJvclN0YXRlcy5Cb3R0b21SaWdodFN1YmdyaWQsXG4gICAgICAgICAgICBdO1xuXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvL3Vuc3VwcG9ydGVkIVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb29yZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGxldCBbcm93LCBjb2xdID0gY29vcmRzW2ldO1xuICAgICAgICAgICAgbGV0IHN0YXRlID0gc3RhdGVzW2ldO1xuICAgICAgICAgICAgdGhpcy5zcXVhcmVEYXRhW3Jvd11bY29sXS5hcHBlbmRUb0Vycm9yU3RhdGUoc3RhdGUpO1xuICAgICAgICAgICAgbGV0IHNxdWFyZVJvdyA9IHRoaXMuc3F1YXJlRGF0YVtyb3ddO1xuXG4gICAgICAgICAgICBWdWUuc2V0KFxuICAgICAgICAgICAgICAgIHRoaXMuc3F1YXJlRGF0YSxcbiAgICAgICAgICAgICAgICByb3csXG4gICAgICAgICAgICAgICAgc3F1YXJlUm93LFxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIHBhcmFtZXRlcnM6IG5vbmUuXG4gICAgLy8gcmV0dXJuczogbm9uZS5cbiAgICAvLyByZXN1bHQ6IHJlc2V0IGVycm9ycyBvbiBib2FyZC5cbiAgICBwdWJsaWMgcmVzZXRCb2FyZEVycm9ycygpOiB2b2lkIHtcbiAgICAgICAgLy8gcmVzZXQgc3F1YXJlcy5cbiAgICAgICAgZm9yIChsZXQgcm93IG9mIHRoaXMuc3F1YXJlRGF0YSkge1xuICAgICAgICAgICAgZm9yIChsZXQgc3F1YXJlIG9mIHJvdykge1xuICAgICAgICAgICAgICAgIHNxdWFyZS5yZXNldEVycm9yU3RhdGUoKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gcmVzZXQgc3RhdGUgdHJhY2tpbmcgdmFyaWFibGVzLlxuICAgICAgICB0aGlzLnN0YXRlLmlzSW5FcnJvciA9IGZhbHNlO1xuICAgICAgICB0aGlzLnN0YXRlLnNvbHV0aW9uU3RhdGUgPSBudWxsO1xuICAgIH1cblxuICAgIC8vIHBhcmFtZXRlcnM6IG5vbmUuXG4gICAgLy8gcmV0dXJuczogbm9uZS5cbiAgICAvLyByZXN1bHRzOiBjbGVhciBhbGwgc3F1YXJlIGd1ZXNzZXMvbm90ZXMuXG4gICAgcHVibGljIHJlc2V0Qm9hcmQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuc3RhdGUucmVzZXRCb2FyZEVycm9ycygpO1xuXG4gICAgICAgIGZvciAobGV0IHJvdyBvZiB0aGlzLnNxdWFyZURhdGEpIHtcbiAgICAgICAgICAgIGZvciAobGV0IHNxdWFyZSBvZiByb3cpIHtcbiAgICAgICAgICAgICAgICBzcXVhcmUuY2xlYXJVc2VyVmFsdWVzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnN0YXRlLmNsZWFyTnVtcGFkU3F1YXJlcygpO1xuICAgIH1cblxuICAgIC8vIHBhcmFtZXRlcnM6IG5vbmUuXG4gICAgLy8gcmV0dXJuczogYXJlIHRoZXJlIHVuZ3Vlc3NlZCBzcXVhcmVzIG9uIHRoZSBib2FyZD9cbiAgICAvLyByZXN1bHRzOiBub25lLlxuICAgIHB1YmxpYyBoYXNFbXB0eVNxdWFyZXMoKTogYm9vbGVhbiB7XG4gICAgICAgIGZvciAobGV0IHJvdyBvZiB0aGlzLnNxdWFyZURhdGEpIHtcbiAgICAgICAgICAgIGZvciAobGV0IHNxdWFyZSBvZiByb3cpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXNxdWFyZS5pc0hpbnQgJiYgc3F1YXJlLmd1ZXNzID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICAvLyBwYXJhbWV0ZXJzOlxuICAgIC8vIGlzR3Vlc3NNb2RlOiBzdGF0ZS1sZXZlbCBndWVzcyBtb2RlLlxuICAgIC8vIHJldHVybnM6IG5vbmUuXG4gICAgLy8gcmVzdWx0czogc2V0IGd1ZXNzIG1vZGUgb24gYWxsIHNxdWFyZXMuXG4gICAgcHVibGljIHNldFNxdWFyZUd1ZXNzTW9kZXMoaXNHdWVzc01vZGU6Ym9vbGVhbik6IHZvaWQge1xuICAgICAgICB0aGlzLnNxdWFyZURhdGEuZm9yRWFjaCggKHJvdywgcikgPT4ge1xuICAgICAgICAgICAgcm93LmZvckVhY2goIChzcXVhcmUsIF8pID0+IHtcbiAgICAgICAgICAgICAgICBzcXVhcmUuc2V0R3Vlc3NNb2RlKGlzR3Vlc3NNb2RlKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBWdWUuc2V0KFxuICAgICAgICAgICAgICAgIHRoaXMuc3F1YXJlRGF0YSxcbiAgICAgICAgICAgICAgICByLFxuICAgICAgICAgICAgICAgIHJvdyxcbiAgICAgICAgICAgICk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmICh0aGlzLnN0YXRlLmFjdGl2ZUdyaWRTcXVhcmUpIHtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUuYWN0aXZlR3JpZFNxdWFyZS5zZXRHdWVzc01vZGUoaXNHdWVzc01vZGUpO1xuICAgICAgICAgICAgbGV0IHNxdWFyZSA9IHRoaXMuc3RhdGUuYWN0aXZlR3JpZFNxdWFyZTtcbiAgICAgICAgICAgIFZ1ZS5zZXQoXG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0ZSxcbiAgICAgICAgICAgICAgICBcImFjdGl2ZUdyaWRTcXVhcmVcIixcbiAgICAgICAgICAgICAgICB0aGlzLnNxdWFyZURhdGFbc3F1YXJlLnJvd11bc3F1YXJlLmNvbHVtbl0sXG4gICAgICAgICAgICApXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgaGFuZGxlQm9hcmROYXZpZ2F0ZShrZXlib2FyZEV2ZW50OiBzdHJpbmcpIHtcbiAgICAgICAgaWYgKCF0aGlzLnN0YXRlLmFjdGl2ZUdyaWRTcXVhcmUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCB2RGlmZjogbnVtYmVyID0gMDtcbiAgICAgICAgbGV0IGhEaWZmOiBudW1iZXIgPSAwO1xuICAgICAgICBpZiAoa2V5Ym9hcmRFdmVudCA9PT0gU3Vkb2t1R3JpZC5BcnJvd1R5cGUuQXJyb3dVcCkge1xuICAgICAgICAgICAgdkRpZmYgPSAtMTtcbiAgICAgICAgfSBlbHNlIGlmIChrZXlib2FyZEV2ZW50ID09PSBTdWRva3VHcmlkLkFycm93VHlwZS5BcnJvd0Rvd24pIHtcbiAgICAgICAgICAgIHZEaWZmID0gMTtcbiAgICAgICAgfSBlbHNlIGlmIChrZXlib2FyZEV2ZW50ID09PSBTdWRva3VHcmlkLkFycm93VHlwZS5BcnJvd0xlZnQpIHtcbiAgICAgICAgICAgIGhEaWZmID0gLTE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBoRGlmZiA9IDE7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBzdGF5IGluIGJvdW5kcy5cbiAgICAgICAgbGV0IGF0dGVtcHRlZFJvdyA9IHRoaXMuYm91bmRSb3codGhpcy5zdGF0ZS5hY3RpdmVHcmlkU3F1YXJlLnJvdyArIHZEaWZmKTtcbiAgICAgICAgbGV0IGF0dGVtcHRlZENvbCA9IHRoaXMuYm91bmRDb2x1bW4odGhpcy5zdGF0ZS5hY3RpdmVHcmlkU3F1YXJlLmNvbHVtbiArIGhEaWZmKTtcblxuICAgICAgICAvLyBrZWVwIG1vdmluZyB1bnRpbCB3ZSBmaW5kIGEgbm9uLWhpbnQgc3F1YXJlLlxuICAgICAgICBsZXQgc3F1YXJlID0gdGhpcy5zcXVhcmVEYXRhW2F0dGVtcHRlZFJvd11bYXR0ZW1wdGVkQ29sXTtcbiAgICAgICAgd2hpbGUgKHNxdWFyZS5pc0hpbnQpIHtcbiAgICAgICAgICAgIGF0dGVtcHRlZFJvdyA9IHRoaXMuYm91bmRSb3coYXR0ZW1wdGVkUm93ICsgdkRpZmYpO1xuICAgICAgICAgICAgYXR0ZW1wdGVkQ29sID0gdGhpcy5ib3VuZENvbHVtbihhdHRlbXB0ZWRDb2wgKyBoRGlmZik7XG4gICAgICAgICAgICBzcXVhcmUgPSB0aGlzLnNxdWFyZURhdGFbYXR0ZW1wdGVkUm93XVthdHRlbXB0ZWRDb2xdO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gXCJjbGlja1wiIHRoYXQgc3F1YXJlLlxuICAgICAgICB0aGlzLnN0YXRlLm9uQm9hcmRDbGljayhhdHRlbXB0ZWRSb3csIGF0dGVtcHRlZENvbCk7XG4gICAgfVxuXG4gICAgLy8gcGFyYW1ldGVyczpcbiAgICAvLyBwcm9wb3NlZFJvdzogYW4gaW5kZXggZm9yIGEgcm93LCB0byBiZSB3cmFwcGVkIGludG8gdGhlIGJvYXJkLlxuICAgIC8vIHJldHVybnM6IHdyYXAgYXJvdW5kIGFzIG5lZWRlZCB0byBrZWVwIHRoZSByb3cgaW4gYm91bmRzLlxuICAgIC8vIHJlc3VsdDogbm9uZS5cbiAgICBwdWJsaWMgYm91bmRSb3cocHJvcG9zZWRSb3c6IG51bWJlcikge1xuICAgICAgICBpZiAocHJvcG9zZWRSb3cgPCAwKSB7XG4gICAgICAgICAgICByZXR1cm4gcHJvcG9zZWRSb3cgKyB0aGlzLnNxdWFyZURhdGEubGVuZ3RoO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHByb3Bvc2VkUm93ICUgdGhpcy5zcXVhcmVEYXRhLmxlbmd0aDtcbiAgICB9XG5cbiAgICAvLyBwYXJhbWV0ZXJzOlxuICAgIC8vIHByb3Bvc2VkQ29sOiBhbiBpbmRleCBmb3IgYSBjb2x1bW4sIHRvIGJlIHdyYXBwZWQgaW50byB0aGUgYm9hcmQuXG4gICAgLy8gcmV0dXJuczogd3JhcCBhcm91bmQgYXMgbmVlZGVkIHRvIGtlZXAgdGhlIGNvbHVtbiBpbiBib3VuZHMuXG4gICAgLy8gcmVzdWx0OiBub25lLlxuICAgIHB1YmxpYyBib3VuZENvbHVtbihwcm9wb3NlZENvbHVtbjogbnVtYmVyKSB7XG4gICAgICAgIGlmIChwcm9wb3NlZENvbHVtbiA8IDApIHtcbiAgICAgICAgICAgIHJldHVybiBwcm9wb3NlZENvbHVtbiArIHRoaXMuc3F1YXJlRGF0YS5sZW5ndGg7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcHJvcG9zZWRDb2x1bW4gJSB0aGlzLnNxdWFyZURhdGEubGVuZ3RoO1xuXG4gICAgfVxufVxuIiwiaW1wb3J0IFZ1ZSBmcm9tIFwidnVlXCI7XG5pbXBvcnQgeyBDb21wb25lbnQsIFByb3AgfSBmcm9tIFwidnVlLXByb3BlcnR5LWRlY29yYXRvclwiO1xuXG5AQ29tcG9uZW50XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOdW1wYWRCdXR0b24gZXh0ZW5kcyBWdWUge1xuICAgIEBQcm9wKClcbiAgICBwdWJsaWMgdmFsdWUhOiBudW1iZXI7XG5cbiAgICAvLyBncmlkIHBvc2l0aW9uXG4gICAgQFByb3AoKVxuICAgIHB1YmxpYyByb3chOiBudW1iZXI7XG4gICAgQFByb3AoKVxuICAgIHB1YmxpYyBjb2x1bW4hOiBudW1iZXI7XG5cbiAgICBwdWJsaWMgaXNBY3RpdmU6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIC8vIENTUyBjbGFzc2VzIGZvciB0aGUgYnV0dG9uLCBmb3IgZGlzcGxheSBsYXRlci5cbiAgICBwdWJsaWMgZ2V0IGNsYXNzZXMoKTogc3RyaW5nW10ge1xuICAgICAgICBpZiAodGhpcy5pc0FjdGl2ZSkge1xuICAgICAgICAgICAgcmV0dXJuIFtcImFjdGl2ZU51bXBhZEJ1dHRvblwiXTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG5cbiAgICBwdWJsaWMgdXBkYXRlSXNBY3RpdmUoaXNTb2x2ZU1vZGU6IGJvb2xlYW4sIGNlbGxHdWVzcz86IG51bWJlcnxudWxsLCBjZWxsTm90ZXM/OiBib29sZWFuW11bXSkge1xuICAgICAgICAvLyBmb3Igc29sdmUgbW9kZSwganVzdCBmbGlwIG9uIHByb3ZpZGVkIGNlbGwgdmFsdWUuXG4gICAgICAgIGlmIChpc1NvbHZlTW9kZSkge1xuICAgICAgICAgICAgaWYgKGNlbGxHdWVzcyA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHRoaXMuaXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy52YWx1ZSA9PT0gY2VsbEd1ZXNzKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pc0FjdGl2ZSA9ICF0aGlzLmlzQWN0aXZlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIC8vIGFuZCBmb3Igbm90IHNvbHZlIG1vZGUgKGhpbnQgbW9kZSwgbW9yZSBjb25jaXNlbHkpLCBjaGVjayBhZ2FpbnN0IG5vdGVzLlxuICAgICAgICB9IGVsc2UgaWYgKCFpc1NvbHZlTW9kZSAmJiBjZWxsTm90ZXMpIHtcbiAgICAgICAgICAgIGxldCByb3cgPSBNYXRoLmZsb29yKCh0aGlzLnZhbHVlIC0gMSkgLyAzKTtcbiAgICAgICAgICAgIGxldCBjb2wgPSAodGhpcy52YWx1ZSAtIDEpICUgMztcbiAgICAgICAgICAgIHRoaXMuaXNBY3RpdmUgPSBjZWxsTm90ZXNbcm93XVtjb2xdO1xuICAgICAgICB9XG4gICAgfVxufVxuIiwiaW1wb3J0IFZ1ZSBmcm9tIFwidnVlXCI7XG5pbXBvcnQgeyBDb21wb25lbnQsIFByb3AsIFdhdGNoIH0gZnJvbSBcInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3JcIjtcblxuaW1wb3J0IE51bXBhZEJ1dHRvbiBmcm9tIFwiLi9OdW1wYWRCdXR0b25cIjtcbmltcG9ydCBTdWRva3VTdGF0ZSBmcm9tIFwiLi9TdWRva3VTdGF0ZVwiO1xuXG5pbXBvcnQgV2l0aFJlbmRlciBmcm9tIFwiLi4vaHRtbC9TdWRva3VJbnB1dC5odG1sXCI7XG5cbkBXaXRoUmVuZGVyXG5AQ29tcG9uZW50KHtcbiAgICBjb21wb25lbnRzOiB7XG4gICAgICAgIFwibnVtcGFkLWJ1dHRvblwiOiBOdW1wYWRCdXR0b24sXG4gICAgfVxufSlcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN1ZG9rdUlucHV0IGV4dGVuZHMgVnVlIHtcbiAgICAvLyBQUk9QUyBBTkQgREFUQSBNRU1CRVJTLlxuXG4gICAgLy8gc2hhcmVkIHN0YXRlXG4gICAgQFByb3AoKVxuICAgIHN0YXRlITogU3Vkb2t1U3RhdGU7XG5cbiAgICAvLyBudW1wYWQgYnV0dG9uIGlucHV0cy5cbiAgICBwdWJsaWMgbnVtcGFkQnV0dG9uczogTnVtcGFkQnV0dG9uW11bXSA9IFtdO1xuXG4gICAgcHVibGljIGFsbE51bXBhZENvb3JkczogW251bWJlciwgbnVtYmVyXVtdID0gW107XG5cbiAgICAvLyBXQVRDSEVSU1xuXG4gICAgLy8gd2F0Y2ggaXNHdWVzc01vZGUgYW5kIHVwZGF0ZSBib29sZWFuIGlzR3Vlc3NNb2RlIGFwcHJvcHJpYXRlbHkuXG4gICAgQFdhdGNoKFwic3RhdGUuZ3Vlc3NNb2RlXCIpXG4gICAgcHVibGljIHVwZGF0ZUd1ZXNzTW9kZSgpIHtcbiAgICAgICAgdGhpcy5zdGF0ZS5pc0d1ZXNzTW9kZSA9ICh0aGlzLnN0YXRlLmd1ZXNzTW9kZSA9PT0gXCJ0cnVlXCIpO1xuICAgICAgICB0aGlzLnN0YXRlLnNldFNxdWFyZUd1ZXNzTW9kZXModGhpcy5zdGF0ZS5pc0d1ZXNzTW9kZSk7XG4gICAgICAgIHRoaXMuc3RhdGUubG9hZE51bXBhZFZhbHVlcygpO1xuICAgIH07XG5cbiAgICAvLyBiYXNpY2FsbHkgYSBjb25zdHJ1Y3Rvci5cbiAgICBtb3VudGVkKCkge1xuICAgICAgICAvLyBJIGRvbid0IHRoaW5rIEkgc2hvdWxkIG5lZWQgdGhpcyxcbiAgICAgICAgLy8gYnV0IGl0IGZvcmNlcyBhbiB1cGRhdGUgYW5kIHNldHMgdGhlIHJhZGlvIGJ1dHRvbnMgY29ycmVjdGx5LlxuICAgICAgICB0aGlzLnN0YXRlLmd1ZXNzTW9kZSA9IFwidHJ1ZVwiO1xuXG4gICAgICAgIC8vIGNyZWF0ZSBudW1wYWRCdXR0b25zLCBhbmQgcmVjb3JkIGNvb3JkcyBsaXN0IGF0IHRoZSBzYW1lIHRpbWUuXG4gICAgICAgIGZvciAobGV0IHIgPSAwOyByIDwgdGhpcy5zdGF0ZS5taW5pZ3JpZFNpemU7IHIrKykge1xuXG4gICAgICAgICAgICBsZXQgbmV3Um93OiBOdW1wYWRCdXR0b25bXSA9IFtdO1xuICAgICAgICAgICAgZm9yIChsZXQgYyA9IDA7IGMgPCB0aGlzLnN0YXRlLm1pbmlncmlkU2l6ZTsgYysrKSB7XG5cbiAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSAociAqIHRoaXMuc3RhdGUubWluaWdyaWRTaXplKSArIChjICsgMSk7XG4gICAgICAgICAgICAgICAgbmV3Um93LnB1c2goXG4gICAgICAgICAgICAgICAgICAgIG5ldyBOdW1wYWRCdXR0b24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHNEYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdzogcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2x1bW46IGMsXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICAgIHRoaXMuYWxsTnVtcGFkQ29vcmRzLnB1c2goW3IsIGNdKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5udW1wYWRCdXR0b25zLnB1c2gobmV3Um93KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHJlZ2lzdGVyIGNhbGxiYWNrcy5cbiAgICAgICAgdGhpcy5zdGF0ZS5jbGVhck51bXBhZFNxdWFyZXMgPSB0aGlzLmNsZWFyTnVtcGFkU3F1YXJlcztcbiAgICAgICAgdGhpcy5zdGF0ZS5lbmFibGVOdW1wYWRTcXVhcmVzID0gdGhpcy5lbmFibGVOdW1wYWRTcXVhcmVzO1xuICAgICAgICB0aGlzLnN0YXRlLm9uTnVtcGFkQ2xpY2sgPSB0aGlzLm9uTnVtcGFkQ2xpY2s7XG4gICAgICAgIHRoaXMuc3RhdGUubG9hZE51bXBhZFZhbHVlcz0gdGhpcy5sb2FkTnVtcGFkVmFsdWVzO1xuXG4gICAgICAgIC8vIGtleWJvYXJkIGlucHV0LlxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5wcm9jZXNzS2V5Ym9hcmRFdmVudCk7XG4gICAgfVxuXG4gICAgLy8gTUVUSE9EU1xuXG4gICAgLy8gcGFyYW1ldGVyczpcbiAgICAvLyB2YWx1ZTogdmFsdWUgb2YgYnV0dG9uIHRoYXQgd2FzIGNsaWNrZWQuXG4gICAgLy8gcm93OiByb3cgb2YgYnV0dG9uIGNsaWNrZWQuXG4gICAgLy8gY29sOiBjb2x1bW4gb2YgYnV0dG9uIGNsaWNrZWQuXG4gICAgLy8gcmV0dXJuczogYW4gYXJyYXkgb2YgcGFpcnMgb2YgY29vcmRpbmF0ZXMgcmVwcmVzZW50aW5nIGFsbCBtaW5pZ3JpZFNpemVeMiBudW1wYWQgYnV0dG9ucy5cbiAgICAvLyByZXN1bHQ6IG5vbmUgYmVzaWRlcyByZXR1cm4uXG4gICAgcHVibGljIG9uTnVtcGFkQ2xpY2sodmFsdWU6IG51bWJlciwgcm93OiBudW1iZXIsIGNvbDogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIC8vIGRvIG5vdGhpbmcgaWYgdGhlcmUgaXMgbm90IGEgdmFsaWQgYWN0aXZlIHNxdWFyZS5cbiAgICAgICAgaWYgKCF0aGlzLnN0YXRlLmFjdGl2ZUdyaWRTcXVhcmUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIG9ubHkgbmVlZCB0byBlcmFzZSBvbGQgYnV0dG9uIGlmIHdlIGFyZSBpbiBndWVzc01vZGUuXG4gICAgICAgIC8vIGFuZCBpZiBpdCdzIHZhbGlkLlxuICAgICAgICBpZiAodGhpcy5zdGF0ZS5pc0d1ZXNzTW9kZSAmJiB0aGlzLnN0YXRlLmFjdGl2ZU51bXBhZFNxdWFyZSkge1xuICAgICAgICAgICAgLy8gZXJhc2Ugb2xkIG51bXBhZCBiZWZvcmUgc2V0dGluZyBjbGFzcyBvbiBuZXcgb25lLlxuICAgICAgICAgICAgdGhpcy5zdGF0ZS5hY3RpdmVOdW1wYWRTcXVhcmUuaXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHVwZGF0ZSBhY3RpdmUgc3F1YXJlLlxuICAgICAgICB0aGlzLnN0YXRlLmFjdGl2ZU51bXBhZFNxdWFyZSA9IHRoaXMubnVtcGFkQnV0dG9uc1tyb3ddW2NvbF07XG5cbiAgICAgICAgdGhpcy5zdGF0ZS5oYW5kbGVHcmlkVXBkYXRlKHZhbHVlKTtcbiAgICAgICAgbGV0IGFjdGl2ZUdyaWRTcXVhcmUgPSB0aGlzLnN0YXRlLmFjdGl2ZUdyaWRTcXVhcmU7XG4gICAgICAgIC8vIG9ubHkgd29yayB3aXRoIGFjdHVhbCBjZWxsIGNoYW5nZXMuXG4gICAgICAgIGlmIChhY3RpdmVHcmlkU3F1YXJlKSB7XG4gICAgICAgICAgICB0aGlzLm51bXBhZEJ1dHRvbnNbcm93XVtjb2xdLnVwZGF0ZUlzQWN0aXZlKFxuICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUuaXNHdWVzc01vZGUsXG4gICAgICAgICAgICAgICAgYWN0aXZlR3JpZFNxdWFyZS5ndWVzcyxcbiAgICAgICAgICAgICAgICBhY3RpdmVHcmlkU3F1YXJlLm5vdGVzLFxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgVnVlLnNldChcbiAgICAgICAgICAgICAgICB0aGlzLm51bXBhZEJ1dHRvbnMsXG4gICAgICAgICAgICAgICAgcm93LFxuICAgICAgICAgICAgICAgIHRoaXMubnVtcGFkQnV0dG9uc1tyb3ddLFxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgLy8gcmVxdWVzdCBlcnJvciBjbGVhcnMgb24gYW55IGJ1dHRvbiBjaGFuZ2UgaW4gZ3Vlc3MgbW9kZS5cbiAgICAgICAgICAgIC8vIFRPRE8gc2hvdWxkIHByb2JhYmx5IG9ubHkgY2xlYXIgcmVsZXZhbnQgcm93L2NvbHVtbi9zdWJncmlkIGFuZCBub3QgZXZlcnl0aGluZy5cbiAgICAgICAgICAgIGlmICh0aGlzLnN0YXRlLmlzR3Vlc3NNb2RlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5yZXNldEJvYXJkRXJyb3JzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBwYXJhbWV0ZXJzOiBub25lLlxuICAgIC8vIHJldHVybnM6IG5vbmUuXG4gICAgLy8gcmVzdWx0OiBhbGwgbnVtcGFkIHNxdWFyZXMgc2V0IHRvIGluYWN0aXZlLlxuICAgIHB1YmxpYyBjbGVhck51bXBhZFNxdWFyZXMoKSB7XG4gICAgICAgIGZvciAobGV0IFtyb3csIGNvbF0gb2YgdGhpcy5hbGxOdW1wYWRDb29yZHMpIHtcbiAgICAgICAgICAgIHRoaXMubnVtcGFkQnV0dG9uc1tyb3ddW2NvbF0uaXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIHBhcmFtZXRlcnM6XG4gICAgLy8gZGlnaXRzOiBhcnJheSBvZiBkaWdpdHMgZnJvbSBTdWRva3VHcmlkIHRvIG1hcCB0byBudW1wYWQgYnV0dG9ucyBhbmQgZW5hYmxlLlxuICAgIC8vIHJldHVybnM6IG5vbmUuXG4gICAgLy8gcmVzdWx0OiBzcGVjaWZpZWQgbnVtcGFkIGJ1dHRvbnMgYXJlIGVuYWJsZWQuXG4gICAgcHVibGljIGVuYWJsZU51bXBhZFNxdWFyZXMoZGlnaXRzOiBudW1iZXJbXSkge1xuICAgICAgICAvLyBtYXAgMUQgYXJyYXkgb2YgZGlnaXRzIHRvIHRoZSBjb3JyZXNwb25kaW5nIGVsZW1lbnRzIGluIGEgMkQgYXJyYXlcbiAgICAgICAgLy8gb2Ygd2lkdGggdGhpcy5zdGF0ZS5taW5pZ3JpZFNpemUuXG4gICAgICAgIGZvciAobGV0IGRpZ2l0IG9mIGRpZ2l0cykge1xuICAgICAgICAgICAgbGV0IHJvdyA9IE1hdGguZmxvb3IoKGRpZ2l0LTEpIC8gdGhpcy5zdGF0ZS5taW5pZ3JpZFNpemUpO1xuICAgICAgICAgICAgbGV0IGNvbCA9IChkaWdpdC0xKSAlIHRoaXMuc3RhdGUubWluaWdyaWRTaXplO1xuXG4gICAgICAgICAgICB0aGlzLm51bXBhZEJ1dHRvbnNbcm93XVtjb2xdLmlzQWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICAvLyBwYXJhbWV0ZXJzOiBub25lLlxuICAgIC8vIHJldHVybnM6IG5vbmUuXG4gICAgLy8gcmVzdWx0OiBsb2FkIG51bXBhZCB2YWx1ZXMgZnJvbSBhY3RpdmUgc3F1YXJlLlxuICAgIHB1YmxpYyBsb2FkTnVtcGFkVmFsdWVzKCk6IHZvaWQge1xuICAgICAgICAvLyBkbyBub3RoaW5nIGlmIHRoZXJlIGlzIG5vdCBhIHZhbGlkIGFjdGl2ZSBzcXVhcmUuXG4gICAgICAgIGlmICghdGhpcy5zdGF0ZS5hY3RpdmVHcmlkU3F1YXJlKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBjbGVhciwgZmlndXJlIG91dCB3aGljaCBkaWdpdHMgdG8gc2V0IGZyb20gYWN0aXZlIHNxdWFyZSwgc2V0IGRpZ2l0cy5cbiAgICAgICAgdGhpcy5zdGF0ZS5jbGVhck51bXBhZFNxdWFyZXMoKTtcblxuICAgICAgICBsZXQgYWN0aXZlR3JpZFNxdWFyZSA9IHRoaXMuc3RhdGUuYWN0aXZlR3JpZFNxdWFyZTtcblxuICAgICAgICBsZXQgZGlnaXRzID0gdGhpcy5zdGF0ZS5nZXREaWdpdHNUb1RvZ2dsZShhY3RpdmVHcmlkU3F1YXJlLnJvdywgYWN0aXZlR3JpZFNxdWFyZS5jb2x1bW4pO1xuXG4gICAgICAgIHRoaXMuc3RhdGUuZW5hYmxlTnVtcGFkU3F1YXJlcyhkaWdpdHMpO1xuICAgIH1cblxuICAgIC8vIHBhcmFtZXRlcnM6XG4gICAgLy8gZXZlbnQ6IGtleWJvYXJkIGV2ZW50IHRvIHByb2Nlc3MuXG4gICAgLy8gcmV0dXJuczogbm9uZVxuICAgIC8vIHJlc3VsdDogZW50ZXIgZGlnaXQgb3Igc2VsZWN0IHNxdWFyZS5cbiAgICBwdWJsaWMgcHJvY2Vzc0tleWJvYXJkRXZlbnQoZXZlbnQ6IGFueSkge1xuICAgICAgICBjb25zdCBrZXk6IHN0cmluZyA9IGV2ZW50LmtleTtcblxuICAgICAgICAvLyBzcXVhcmUgdmFsdWUgaW5wdXRzLlxuICAgICAgICBsZXQgbWF5YmVOdW0gPSBOdW1iZXIoa2V5KTtcbiAgICAgICAgaWYgKGtleSAmJiBtYXliZU51bSAmJiBtYXliZU51bSA+PSAxICYmIG1heWJlTnVtIDw9IDkpIHtcbiAgICAgICAgICAgIGxldCByb3cgPSBNYXRoLmZsb29yKChtYXliZU51bS0xKSAvIHRoaXMuc3RhdGUubWluaWdyaWRTaXplKTtcbiAgICAgICAgICAgIGxldCBjb2wgPSAobWF5YmVOdW0tMSkgJSB0aGlzLnN0YXRlLm1pbmlncmlkU2l6ZTtcblxuICAgICAgICAgICAgdGhpcy5zdGF0ZS5vbk51bXBhZENsaWNrKG1heWJlTnVtLCByb3csIGNvbCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBsZXQgZ3JpZCBoYW5kbGUgaXRzIG93biBuYXZpZ2F0aW9uLlxuICAgICAgICBsZXQgbWF5YmVBcnJvdzogc3RyaW5nID0ga2V5LnNsaWNlKDAsIDUpO1xuICAgICAgICBpZiAobWF5YmVBcnJvdyA9PT0gXCJBcnJvd1wiKSB7XG4gICAgICAgICAgICB0aGlzLnN0YXRlLmhhbmRsZUJvYXJkTmF2aWdhdGUoa2V5KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsImltcG9ydCBWdWUgZnJvbSBcInZ1ZVwiO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBQcm9wIH0gZnJvbSBcInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3JcIjtcblxuaW1wb3J0IFN1ZG9rdUNoZWNrZXIgZnJvbSBcIi4vU3Vkb2t1Q2hlY2tlclwiO1xuaW1wb3J0IFN1ZG9rdUdyaWQgZnJvbSBcIi4vU3Vkb2t1R3JpZFwiO1xuaW1wb3J0IFN1ZG9rdUlucHV0IGZyb20gXCIuL1N1ZG9rdUlucHV0XCI7XG5pbXBvcnQgU3Vkb2t1U3RhdGUgZnJvbSBcIi4vU3Vkb2t1U3RhdGVcIjtcblxuaW1wb3J0IFdpdGhSZW5kZXIgZnJvbSBcIi4uL2h0bWwvU3Vkb2t1R2FtZS5odG1sXCI7XG5cbkBXaXRoUmVuZGVyXG5AQ29tcG9uZW50KHtcbiAgICBjb21wb25lbnRzOiB7XG4gICAgICAgIFwic3Vkb2t1LWlucHV0XCI6IFN1ZG9rdUlucHV0LFxuICAgICAgICBcInN1ZG9rdS1ncmlkXCI6IFN1ZG9rdUdyaWQsXG4gICAgICAgIFwic3Vkb2t1LWNoZWNrZXJcIjogU3Vkb2t1Q2hlY2tlcixcbiAgICB9XG59KVxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3Vkb2t1R2FtZSBleHRlbmRzIFZ1ZSB7XG4gICAgQFByb3Aoe2RlZmF1bHQ6IFtdfSlcbiAgICBpbml0aWFsU3F1YXJlRGF0YSE6IE9iamVjdFtdW107XG5cbiAgICAvLyBUT0RPIHdoZXJlIGRvIGNvbnN0YW50cyBnb1xuICAgIHByaXZhdGUgbWluaWdyaWRTaXplOiBudW1iZXIgPSAzO1xuXG4gICAgLy8gc2hhcmVkIHN0YXRlIGJldHdlZW4gc3ViY29tcG9uZW50cy5cbiAgICBwdWJsaWMgc3RhdGU6IFN1ZG9rdVN0YXRlID0gbmV3IFN1ZG9rdVN0YXRlKHtcbiAgICAgICAgcHJvcHNEYXRhOiB7XG4gICAgICAgICAgICBtaW5pZ3JpZFNpemU6IHRoaXMubWluaWdyaWRTaXplLFxuICAgICAgICB9LFxuICAgIH0pO1xuXG4gICAgcHVibGljIGVsOiBzdHJpbmcgPSBcIiNhcHBcIjtcbn1cbiIsImltcG9ydCB7IERlY29kZXIgfSBmcm9tIFwiLi9kZWNvZGVyXCI7XG5pbXBvcnQgU3Vkb2t1R2FtZSBmcm9tIFwiLi9jb21wb25lbnRzL3RzL1N1ZG9rdUdhbWVcIjtcblxuLy8gZm9yIGF1dG8tbG9hZGluZywgSSB0aGluaz8gbWF5YmU/XG5pbXBvcnQgXCIuL3N0eWxlcy9tYWluLnNjc3NcIjtcblxubGV0IHVybCA9IG5ldyBVUkwod2luZG93LmxvY2F0aW9uLmhyZWYpO1xubGV0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXModXJsLnNlYXJjaCk7XG5sZXQgYm9hcmRDb2RlID0gcGFyYW1zLmdldChcImJvYXJkXCIpO1xuXG5sZXQgZGVjb2RlciA9IG5ldyBEZWNvZGVyKCk7XG5cbmxldCBzZCA9IGRlY29kZXIuZGVjb2RlKGJvYXJkQ29kZSk7XG5cbmxldCBzdWRva3VHYW1lID0gbmV3IFN1ZG9rdUdhbWUoe1xuICAgIHByb3BzRGF0YToge1xuICAgICAgICBpbml0aWFsU3F1YXJlRGF0YTogc2QsXG4gICAgfVxufSk7XG5zdWRva3VHYW1lLiRtb3VudChcIiNhcHBcIik7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///10\n')}]);