$cell_size: 40px;
$sudoku_background: #444455;

.activeSquare {
    background-color: #aabbaa;
}

.defaultFilledSquare {
    background-color: #ccccdd;
}

.sudokuSection button {
    box-sizing: content-box;
    cursor: pointer;
    display: block;
}

.sudokuSquare.inactiveSquare, .noteSquare.inactiveSquare {
    background-color: #ffffff;
}

.buttonGrid {
    margin: 1em;
    margin-right: 1em;

    button {
        border: 1px solid #000011;
        border-radius: 10px;
        font-size: 24px;
        height: 1.5 * $cell_size;
        width: 1.5 * $cell_size;
        margin: 0;
        padding: 0;
    }

    .activeNumpadButton {
        background-color: #ccccdd;
    }
}

.sudokuChecker button {
    background-color: #555577;
    border: 1px solid #000000;
    border-radius: 10px;
    color: #ddddff;
    padding: 1em;

    &:hover {
        background-color: #666688;
    }
}

.sudokuSection button:focus {
    outline: 2px dotted #000011;
}

.modeSelect {
    display: flex;
    justify-content: space-between;
    flex-direction: column;
}

.modeSelect input[type="radio"] {
    display: none;
}

.modeSelect label {
    background-color: #ffffff;
    border: 1px solid #000000;
    border-radius: 10px;
    cursor: pointer;
    float: left;
    margin: 10px;
    padding: 1em;
    text-align: center;
    vertical-align: middle;
    width: 10em;

    &:hover {
        background-color: #ddddff;
    }
}

.modeSelect input[type="radio"]:checked+label {
    background-color: #555577;
    color: #ddddff;
    font-weight: bold;

    &:hover {
        background-color: #666688;
    }
}

.sudokuGrid, .sudokuInput, .sudokuChecker, .sudokuRow {
    display: flex;
}

.sudokuGrid {
    background-color: $sudoku_background;
    flex-direction: column;
    list-style: none;
    padding: 2em;

    ul {
        list-style: none;
        padding-bottom: 0;
        padding-left: 0;
    }
}

.sudokuRow {
    flex-direction: row;
    list-style: none;
}

.paddingRow {
    margin-bottom: 5px;
}

// I really am sorry about this.
.sudokuSquare.errorSquare, .noteSquare.errorSquare, .defaultFilledSquare.errorSquare {
    // confusing naming, but this is to offset left and right and up and down.
    // horizontal negative is left, positive right.
    // vertical negative is top, positive bottom.
    $positive_border: 5px;
    $negative_border: -5px;
    $error_color: #ff5555;
    border: none;

    &.leftRowError {
        box-shadow:
            // erase:
            // right
            $positive_border 0 0 0 $sudoku_background,

            // draw:
            // top
            // bottom
            // left (implicit in overlap)
            0 $negative_border 0 0 $error_color,
            0 $positive_border 0 0 $error_color,

            // extend:
            // top
            // bottom
            // to:
            // left
            // right
            $positive_border $negative_border 0 0 $error_color,
            $negative_border $negative_border 0 0 $error_color,
            $positive_border $positive_border 0 0 $error_color,
            $negative_border $positive_border 0 0 $error_color;
    }

    &.centerRowError {
        box-shadow:
            // erase:
            // right
            // left
            $positive_border 0 0 0 $sudoku_background,
            $negative_border 0 0 0 $sudoku_background,

            // draw:
            // top
            // left
            0 $negative_border 0 0 $error_color,
            0 $positive_border 0 0 $error_color,

            // overlap:
            // top
            // bottom
            // to:
            // left
            // right
            $positive_border $negative_border 0 0 $error_color,
            $negative_border $negative_border 0 0 $error_color,
            $positive_border $positive_border 0 0 $error_color,
            $negative_border $positive_border 0 0 $error_color;
    }

    &.rightRowError{
        box-shadow:
            // erase:
            // left
            $negative_border 0 0 0 $sudoku_background,

            // draw:
            // top
            // bottom
            // right (implicit in overlap)
            0 $negative_border 0 0 $error_color,
            0 $positive_border 0 0 $error_color,

            // extend:
            // top
            // bottom
            // to:
            // left
            // right
            $positive_border $negative_border 0 0 $error_color,
            $negative_border $negative_border 0 0 $error_color,
            $positive_border $positive_border 0 0 $error_color,
            $negative_border $positive_border 0 0 $error_color;
    }

    &.topColumnError {
        box-shadow:
            // erase:
            // bottom
            0 $positive_border 0 0 $sudoku_background,

            // draw:
            // left
            // right
            // top (implicit in overlap)
            $negative_border 0 0 0 $error_color,
            $positive_border 0 0 0 $error_color,

            // extend:
            // left
            // right
            // to:
            // top
            // bottom
            $negative_border $negative_border 0 0 $error_color,
            $negative_border $positive_border 0 0 $error_color,
            $positive_border $negative_border 0 0 $error_color,
            $positive_border $positive_border 0 0 $error_color;
    }

    &.middleColumnError {
        box-shadow:
            // erase:
            // top
            // bottom
            0 $negative_border 0 0 $sudoku_background,
            0 $positive_border 0 0 $sudoku_background,

            // draw:
            // left
            // right
            $negative_border 0 0 0 $error_color,
            $positive_border 0 0 0 $error_color,

            // extend:
            // left
            // right
            // to:
            // top
            // bottom
            $negative_border $negative_border 0 0 $error_color,
            $negative_border $positive_border 0 0 $error_color,
            $positive_border $negative_border 0 0 $error_color,
            $positive_border $positive_border 0 0 $error_color;
    }

    &.bottomColumnError{
        box-shadow:
            // erase:
            // top
            0 $negative_border 0 0 $sudoku_background,

            // draw:
            // left
            // right
            $negative_border 0 0 0 $error_color,
            $positive_border 0 0 0 $error_color,

            // extend:
            // left
            // right
            // to:
            // top
            // bottom
            $negative_border $negative_border 0 0 $error_color,
            $negative_border $positive_border 0 0 $error_color,
            $positive_border $negative_border 0 0 $error_color,
            $positive_border $positive_border 0 0 $error_color;
    }

    &.topLeftSubgridError{
        box-shadow:
            // erase:
            // right
            // bottom
            $positive_border 0 0 0 $sudoku_background,
            0 $positive_border 0 0 $sudoku_background,

            // draw:
            // left (implicit)
            // top (implicit)

            // extend:
            // top
            // left
            // to:
            // right
            // left
            // bottom
            // top
            $negative_border $negative_border 0 0 $error_color,
            $positive_border $negative_border 0 0 $error_color,
            $negative_border $positive_border 0 0 $error_color;
    }

    &.topCenterSubgridError{
        box-shadow:
            // erase:
            // left
            // right
            // bottom
            $negative_border 0 0 0 $sudoku_background,
            $positive_border 0 0 0 $sudoku_background,
            0 $positive_border 0 0 $sudoku_background,

            // draw:
            // top (implicit)

            // extend:
            // top
            // to:
            // left
            // right
            $negative_border $negative_border 0 0 $error_color,
            $positive_border $negative_border 0 0 $error_color;
    }

    &.topRightSubgridError{
        box-shadow:
            // erase:
            // left
            // bottom
            $negative_border 0 0 0 $sudoku_background,
            0 $positive_border 0 0 $sudoku_background,

            // draw:
            // right (implicit)
            // top (implicit)

            // extend:
            // top
            // right
            // to:
            // right
            // left
            // bottom
            // top
            $negative_border $negative_border 0 0 $error_color,
            $positive_border $negative_border 0 0 $error_color,
            $positive_border $positive_border 0 0 $error_color;
    }

    &.middleLeftSubgridError{
        box-shadow:
            // erase:
            // top
            // bottom
            // right
            0 $negative_border 0 0 $sudoku_background,
            0 $positive_border 0 0 $sudoku_background,
            $positive_border 0 0 0 $sudoku_background,

            // draw:
            // left
            $negative_border 0 0 0 $error_color,

            // extend:
            // left
            // to:
            // top
            // bottom
            $negative_border $negative_border 0 0 $error_color,
            $negative_border $positive_border 0 0 $error_color;
    }

    &.middleCenterSubgridError{
        box-shadow:
            // erase:
            // top
            // bottom
            // right
            // left
            0 $negative_border 0 0 $sudoku_background,
            0 $positive_border 0 0 $sudoku_background,
            $positive_border 0 0 0 $sudoku_background,
            $negative_border 0 0 0 $sudoku_background,

            // draw: none

            // extend:
            // top
            // bottom
            // to:
            // left
            // right
            // for nice corners
            $negative_border $negative_border 0 0 $error_color,
            $positive_border $negative_border 0 0 $error_color,
            $negative_border $positive_border 0 0 $error_color,
            $positive_border $positive_border 0 0 $error_color;
    }

    &.middleRightSubgridError{
        box-shadow:
            // erase:
            // top
            // bottom
            // left
            0 $negative_border 0 0 $sudoku_background,
            0 $positive_border 0 0 $sudoku_background,
            $negative_border 0 0 0 $sudoku_background,

            // draw:
            // right
            $positive_border 0 0 0 $error_color,

            // extend:
            // right
            // to:
            // top
            // bottom
            $positive_border $negative_border 0 0 $error_color,
            $positive_border $positive_border 0 0 $error_color;
    }

    &.bottomLeftSubgridError{
        box-shadow:
            // erase:
            // right
            // top
            $positive_border 0 0 0 $sudoku_background,
            0 $negative_border 0 0 $sudoku_background,

            // draw:
            // left (implicit)
            // bottom (implicit)

            // extend:
            // bottom
            // left
            // to:
            // right
            // left
            // bottom
            // top
            $negative_border $positive_border 0 0 $error_color,
            $positive_border $positive_border 0 0 $error_color,
            $negative_border $negative_border 0 0 $error_color;
    }

    &.bottomCenterSubgridError{
        box-shadow:
            // erase:
            // left
            // right
            // top
            $negative_border 0 0 0 $sudoku_background,
            $positive_border 0 0 0 $sudoku_background,
            0 $negative_border 0 0 $sudoku_background,

            // draw:
            // bottom (implicit)

            // extend:
            // bottom
            // to:
            // left
            // right
            $negative_border $positive_border 0 0 $error_color,
            $positive_border $positive_border 0 0 $error_color;
    }

    &.bottomRightSubgridError{
        box-shadow:
            // erase:
            // left
            // top
            $negative_border 0 0 0 $sudoku_background,
            0 $negative_border 0 0 $sudoku_background,

            // draw:
            // right (implicit)
            // bottom (implicit)

            // extend:
            // bottom
            // right
            // to:
            // right
            // left
            // bottom
            // top
            $negative_border $positive_border 0 0 $error_color,
            $positive_border $positive_border 0 0 $error_color,
            $positive_border $negative_border 0 0 $error_color;
    }
}

.sudokuSection {
    align-items: center;
    background-color: #9999aa;
    display: flex;
    justify-content: space-around;
    min-height: 500px;
    min-width: 1000px;
}

.noteSquare {
    cursor: pointer;
    font-size: 8.5px;

    table, tr {
        align-items: stretch;
        display: flex;
        justify-content: space-around;
    }

    table {
        flex-direction: column;
        padding: 2px;
    }

    tr {
        flex-direction: row;
        min-width: 100%;
    }

    td {
        min-height: 10px;
        min-width: 8px;
    }
}

.activeNote {
    color: #000011;
}

.sudokuSquare, .defaultFilledSquare, .noteSquare {
    height: $cell_size;
    margin: 0;
    padding: 0;
    width: $cell_size;
    text-align: center;
}

.noteSquare.validSquare, .sudokuSquare.validSquare {
    border: none;
}

.sudokuSquare, .defaultFilledSquare {
    font-size: 24px;
    line-height: $cell_size;
}

.paddingSquare {
    margin-right: 5px;
}

.spacerRow {
    margin-bottom: 10px;
}

.spacerSquare {
    margin-right: 10px;
}

.sudokuGrid, .sudokuInput, .sudokuChecker {
    border-radius: 10px;
}

.sudokuChecker, .sudokuInput {
    align-items: center;
    background-color: #ddddff;
    flex-direction: column;
    height: 30em;
    justify-content: space-around;
    margin: 1em;
    padding: 1em;
}
